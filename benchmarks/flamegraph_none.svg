<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="790" onload="init(evt)" viewBox="0 0 1200 790" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="790" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="773.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="773.00"> </text><svg id="frames" x="10" width="1180" total_samples="36487"><g><title>dkn-compute`&lt;tokio_util::sync::cancellation_token::WaitForCancellationFuture as core::future::future::Future&gt;::poll (4 samples, 0.01%)</title><rect x="0.0439%" y="661" width="0.0110%" height="15" fill="rgb(227,0,7)" fg:x="16" fg:w="4"/><text x="0.2939%" y="671.50"></text></g><g><title>dkn-compute`&lt;libp2p_core::transport::map::Map&lt;T,F&gt; as libp2p_core::transport::Transport&gt;::poll (6 samples, 0.02%)</title><rect x="0.1041%" y="597" width="0.0164%" height="15" fill="rgb(217,0,24)" fg:x="38" fg:w="6"/><text x="0.3541%" y="607.50"></text></g><g><title>dkn-compute`&lt;libp2p_core::transport::choice::OrTransport&lt;A,B&gt; as libp2p_core::transport::Transport&gt;::poll (8 samples, 0.02%)</title><rect x="0.1041%" y="613" width="0.0219%" height="15" fill="rgb(221,193,54)" fg:x="38" fg:w="8"/><text x="0.3541%" y="623.50"></text></g><g><title>dkn-compute`&lt;libp2p_core::transport::map::Map&lt;T,F&gt; as libp2p_core::transport::Transport&gt;::poll (5 samples, 0.01%)</title><rect x="0.1261%" y="613" width="0.0137%" height="15" fill="rgb(248,212,6)" fg:x="46" fg:w="5"/><text x="0.3761%" y="623.50"></text></g><g><title>dkn-compute`&lt;libp2p_relay::priv_client::transport::Transport as libp2p_core::transport::Transport&gt;::poll (5 samples, 0.01%)</title><rect x="0.1261%" y="597" width="0.0137%" height="15" fill="rgb(208,68,35)" fg:x="46" fg:w="5"/><text x="0.3761%" y="607.50"></text></g><g><title>dkn-compute`&lt;libp2p_core::transport::choice::OrTransport&lt;A,B&gt; as libp2p_core::transport::Transport&gt;::poll (16 samples, 0.04%)</title><rect x="0.1014%" y="629" width="0.0439%" height="15" fill="rgb(232,128,0)" fg:x="37" fg:w="16"/><text x="0.3514%" y="639.50"></text></g><g><title>dkn-compute`&lt;T as libp2p_core::transport::boxed::Abstract&lt;O&gt;&gt;::poll (17 samples, 0.05%)</title><rect x="0.1014%" y="645" width="0.0466%" height="15" fill="rgb(207,160,47)" fg:x="37" fg:w="17"/><text x="0.3514%" y="655.50"></text></g><g><title>dkn-compute`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (5 samples, 0.01%)</title><rect x="0.1590%" y="613" width="0.0137%" height="15" fill="rgb(228,23,34)" fg:x="58" fg:w="5"/><text x="0.4090%" y="623.50"></text></g><g><title>dkn-compute`&lt;dkn_compute::p2p::behaviour::DriaBehaviour as libp2p_swarm::behaviour::NetworkBehaviour&gt;::on_connection_handler_event (6 samples, 0.02%)</title><rect x="0.1590%" y="645" width="0.0164%" height="15" fill="rgb(218,30,26)" fg:x="58" fg:w="6"/><text x="0.4090%" y="655.50"></text></g><g><title>dkn-compute`&lt;libp2p_kad::behaviour::Behaviour&lt;TStore&gt; as libp2p_swarm::behaviour::NetworkBehaviour&gt;::on_connection_handler_event (6 samples, 0.02%)</title><rect x="0.1590%" y="629" width="0.0164%" height="15" fill="rgb(220,122,19)" fg:x="58" fg:w="6"/><text x="0.4090%" y="639.50"></text></g><g><title>dkn-compute`&lt;dkn_compute::p2p::behaviour::DriaBehaviour as libp2p_swarm::behaviour::NetworkBehaviour&gt;::on_swarm_event (6 samples, 0.02%)</title><rect x="0.1754%" y="645" width="0.0164%" height="15" fill="rgb(250,228,42)" fg:x="64" fg:w="6"/><text x="0.4254%" y="655.50"></text></g><g><title>dkn-compute`&lt;futures_ticker::Ticker as futures_core::stream::Stream&gt;::poll_next (4 samples, 0.01%)</title><rect x="0.2001%" y="629" width="0.0110%" height="15" fill="rgb(240,193,28)" fg:x="73" fg:w="4"/><text x="0.4501%" y="639.50"></text></g><g><title>dkn-compute`&lt;libp2p_request_response::Behaviour&lt;TCodec&gt; as libp2p_swarm::behaviour::NetworkBehaviour&gt;::poll (5 samples, 0.01%)</title><rect x="0.2193%" y="613" width="0.0137%" height="15" fill="rgb(216,20,37)" fg:x="80" fg:w="5"/><text x="0.4693%" y="623.50"></text></g><g><title>dkn-compute`&lt;libp2p_autonat::behaviour::Behaviour as libp2p_swarm::behaviour::NetworkBehaviour&gt;::poll (14 samples, 0.04%)</title><rect x="0.2110%" y="629" width="0.0384%" height="15" fill="rgb(206,188,39)" fg:x="77" fg:w="14"/><text x="0.4610%" y="639.50"></text></g><g><title>dkn-compute`&lt;futures_ticker::Ticker as futures_core::stream::Stream&gt;::poll_next (5 samples, 0.01%)</title><rect x="0.2741%" y="613" width="0.0137%" height="15" fill="rgb(217,207,13)" fg:x="100" fg:w="5"/><text x="0.5241%" y="623.50"></text></g><g><title>dkn-compute`&lt;futures_timer::native::delay::Delay as core::future::future::Future&gt;::poll (5 samples, 0.01%)</title><rect x="0.2741%" y="597" width="0.0137%" height="15" fill="rgb(231,73,38)" fg:x="100" fg:w="5"/><text x="0.5241%" y="607.50"></text></g><g><title>dkn-compute`core::ops::function::impls::_&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (11 samples, 0.03%)</title><rect x="0.2987%" y="565" width="0.0301%" height="15" fill="rgb(225,20,46)" fg:x="109" fg:w="11"/><text x="0.5487%" y="575.50"></text></g><g><title>dkn-compute`libp2p_gossipsub::mcache::MessageCache::get_gossip_message_ids (14 samples, 0.04%)</title><rect x="0.2960%" y="597" width="0.0384%" height="15" fill="rgb(210,31,41)" fg:x="108" fg:w="14"/><text x="0.5460%" y="607.50"></text></g><g><title>dkn-compute`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (14 samples, 0.04%)</title><rect x="0.2960%" y="581" width="0.0384%" height="15" fill="rgb(221,200,47)" fg:x="108" fg:w="14"/><text x="0.5460%" y="591.50"></text></g><g><title>dkn-compute`libp2p_gossipsub::behaviour::Behaviour&lt;D,F&gt;::heartbeat (24 samples, 0.07%)</title><rect x="0.2905%" y="613" width="0.0658%" height="15" fill="rgb(226,26,5)" fg:x="106" fg:w="24"/><text x="0.5405%" y="623.50"></text></g><g><title>dkn-compute`&lt;libp2p_gossipsub::behaviour::Behaviour&lt;C,F&gt; as libp2p_swarm::behaviour::NetworkBehaviour&gt;::poll (43 samples, 0.12%)</title><rect x="0.2494%" y="629" width="0.1179%" height="15" fill="rgb(249,33,26)" fg:x="91" fg:w="43"/><text x="0.4994%" y="639.50"></text></g><g><title>dkn-compute`libp2p_kad::query::QueryPool&lt;TInner&gt;::poll (65 samples, 0.18%)</title><rect x="0.4111%" y="613" width="0.1781%" height="15" fill="rgb(235,183,28)" fg:x="150" fg:w="65"/><text x="0.6611%" y="623.50"></text></g><g><title>dkn-compute`libp2p_kad::query::peers::closest::ClosestPeersIter::next (52 samples, 0.14%)</title><rect x="0.4467%" y="597" width="0.1425%" height="15" fill="rgb(221,5,38)" fg:x="163" fg:w="52"/><text x="0.6967%" y="607.50"></text></g><g><title>dkn-compute`&lt;alloc::collections::btree::map::ValuesMut&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (28 samples, 0.08%)</title><rect x="0.5125%" y="581" width="0.0767%" height="15" fill="rgb(247,18,42)" fg:x="187" fg:w="28"/><text x="0.7625%" y="591.50"></text></g><g><title>dkn-compute`tracing::span::Span::log (4 samples, 0.01%)</title><rect x="0.5975%" y="613" width="0.0110%" height="15" fill="rgb(241,131,45)" fg:x="218" fg:w="4"/><text x="0.8475%" y="623.50"></text></g><g><title>dkn-compute`&lt;libp2p_kad::behaviour::Behaviour&lt;TStore&gt; as libp2p_swarm::behaviour::NetworkBehaviour&gt;::poll (88 samples, 0.24%)</title><rect x="0.3755%" y="629" width="0.2412%" height="15" fill="rgb(249,31,29)" fg:x="137" fg:w="88"/><text x="0.6255%" y="639.50"></text></g><g><title>dkn-compute`futures_channel::mpsc::Receiver&lt;T&gt;::next_message (4 samples, 0.01%)</title><rect x="0.6249%" y="597" width="0.0110%" height="15" fill="rgb(225,111,53)" fg:x="228" fg:w="4"/><text x="0.8749%" y="607.50"></text></g><g><title>dkn-compute`&lt;futures_channel::mpsc::Receiver&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (5 samples, 0.01%)</title><rect x="0.6249%" y="613" width="0.0137%" height="15" fill="rgb(238,160,17)" fg:x="228" fg:w="5"/><text x="0.8749%" y="623.50"></text></g><g><title>dkn-compute`&lt;libp2p_relay::priv_client::Behaviour as libp2p_swarm::behaviour::NetworkBehaviour&gt;::poll (15 samples, 0.04%)</title><rect x="0.6167%" y="629" width="0.0411%" height="15" fill="rgb(214,148,48)" fg:x="225" fg:w="15"/><text x="0.8667%" y="639.50"></text></g><g><title>dkn-compute`&lt;dkn_compute::p2p::behaviour::DriaBehaviour as libp2p_swarm::behaviour::NetworkBehaviour&gt;::poll (178 samples, 0.49%)</title><rect x="0.1918%" y="645" width="0.4878%" height="15" fill="rgb(232,36,49)" fg:x="70" fg:w="178"/><text x="0.4418%" y="655.50"></text></g><g><title>dkn-compute`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (14 samples, 0.04%)</title><rect x="0.7400%" y="629" width="0.0384%" height="15" fill="rgb(209,103,24)" fg:x="270" fg:w="14"/><text x="0.9900%" y="639.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (9 samples, 0.02%)</title><rect x="0.8085%" y="613" width="0.0247%" height="15" fill="rgb(229,88,8)" fg:x="295" fg:w="9"/><text x="1.0585%" y="623.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (9 samples, 0.02%)</title><rect x="0.8085%" y="597" width="0.0247%" height="15" fill="rgb(213,181,19)" fg:x="295" fg:w="9"/><text x="1.0585%" y="607.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (6 samples, 0.02%)</title><rect x="0.8167%" y="581" width="0.0164%" height="15" fill="rgb(254,191,54)" fg:x="298" fg:w="6"/><text x="1.0667%" y="591.50"></text></g><g><title>dkn-compute`&lt;libp2p_gossipsub::types::RawMessage as core::clone::Clone&gt;::clone (21 samples, 0.06%)</title><rect x="0.7811%" y="629" width="0.0576%" height="15" fill="rgb(241,83,37)" fg:x="285" fg:w="21"/><text x="1.0311%" y="639.50"></text></g><g><title>dkn-compute`&lt;alloc::string::String as core::fmt::Write&gt;::write_str (4 samples, 0.01%)</title><rect x="0.8496%" y="597" width="0.0110%" height="15" fill="rgb(233,36,39)" fg:x="310" fg:w="4"/><text x="1.0996%" y="607.50"></text></g><g><title>dkn-compute`dkn_compute::p2p::behaviour::create_gossipsub_behavior::_{{closure}} (10 samples, 0.03%)</title><rect x="0.8414%" y="629" width="0.0274%" height="15" fill="rgb(226,3,54)" fg:x="307" fg:w="10"/><text x="1.0914%" y="639.50"></text></g><g><title>dkn-compute`core::fmt::num::imp::_&lt;impl core::fmt::Display for u64&gt;::fmt (9 samples, 0.02%)</title><rect x="0.8441%" y="613" width="0.0247%" height="15" fill="rgb(245,192,40)" fg:x="308" fg:w="9"/><text x="1.0941%" y="623.50"></text></g><g><title>dkn-compute`&lt;libp2p_gossipsub::types::RawMessage as core::clone::Clone&gt;::clone (4 samples, 0.01%)</title><rect x="0.9099%" y="613" width="0.0110%" height="15" fill="rgb(238,167,29)" fg:x="332" fg:w="4"/><text x="1.1599%" y="623.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (4 samples, 0.01%)</title><rect x="0.9373%" y="613" width="0.0110%" height="15" fill="rgb(232,182,51)" fg:x="342" fg:w="4"/><text x="1.1873%" y="623.50"></text></g><g><title>dkn-compute`libp2p_gossipsub::behaviour::Behaviour&lt;D,F&gt;::forward_msg (27 samples, 0.07%)</title><rect x="0.8770%" y="629" width="0.0740%" height="15" fill="rgb(231,60,39)" fg:x="320" fg:w="27"/><text x="1.1270%" y="639.50"></text></g><g><title>dkn-compute`hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_mut (10 samples, 0.03%)</title><rect x="0.9565%" y="613" width="0.0274%" height="15" fill="rgb(208,69,12)" fg:x="349" fg:w="10"/><text x="1.2065%" y="623.50"></text></g><g><title>dkn-compute`libp2p_gossipsub::mcache::MessageCache::observe_duplicate (12 samples, 0.03%)</title><rect x="0.9538%" y="629" width="0.0329%" height="15" fill="rgb(235,93,37)" fg:x="348" fg:w="12"/><text x="1.2038%" y="639.50"></text></g><g><title>dkn-compute`libp2p_gossipsub::mcache::MessageCache::put (9 samples, 0.02%)</title><rect x="0.9867%" y="629" width="0.0247%" height="15" fill="rgb(213,116,39)" fg:x="360" fg:w="9"/><text x="1.2367%" y="639.50"></text></g><g><title>dkn-compute`hashbrown::rustc_entry::_&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (4 samples, 0.01%)</title><rect x="1.0004%" y="613" width="0.0110%" height="15" fill="rgb(222,207,29)" fg:x="365" fg:w="4"/><text x="1.2504%" y="623.50"></text></g><g><title>dkn-compute`hashbrown::rustc_entry::_&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (17 samples, 0.05%)</title><rect x="1.0141%" y="613" width="0.0466%" height="15" fill="rgb(206,96,30)" fg:x="370" fg:w="17"/><text x="1.2641%" y="623.50"></text></g><g><title>dkn-compute`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (6 samples, 0.02%)</title><rect x="1.0442%" y="597" width="0.0164%" height="15" fill="rgb(218,138,4)" fg:x="381" fg:w="6"/><text x="1.2942%" y="607.50"></text></g><g><title>dkn-compute`libp2p_gossipsub::time_cache::DuplicateCache&lt;Key&gt;::insert (22 samples, 0.06%)</title><rect x="1.0113%" y="629" width="0.0603%" height="15" fill="rgb(250,191,14)" fg:x="369" fg:w="22"/><text x="1.2613%" y="639.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (5 samples, 0.01%)</title><rect x="1.0716%" y="629" width="0.0137%" height="15" fill="rgb(239,60,40)" fg:x="391" fg:w="5"/><text x="1.3216%" y="639.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (7 samples, 0.02%)</title><rect x="1.0935%" y="629" width="0.0192%" height="15" fill="rgb(206,27,48)" fg:x="399" fg:w="7"/><text x="1.3435%" y="639.50"></text></g><g><title>dkn-compute`&lt;libp2p_gossipsub::behaviour::Behaviour&lt;C,F&gt; as libp2p_swarm::behaviour::NetworkBehaviour&gt;::on_connection_handler_event (158 samples, 0.43%)</title><rect x="0.6907%" y="645" width="0.4330%" height="15" fill="rgb(225,35,8)" fg:x="252" fg:w="158"/><text x="0.9407%" y="655.50"></text></g><g><title>dkn-compute`libp2p_tcp::Transport&lt;T&gt;::create_socket (6 samples, 0.02%)</title><rect x="1.1374%" y="533" width="0.0164%" height="15" fill="rgb(250,213,24)" fg:x="415" fg:w="6"/><text x="1.3874%" y="543.50"></text></g><g><title>libsystem_kernel.dylib`socket (5 samples, 0.01%)</title><rect x="1.1401%" y="517" width="0.0137%" height="15" fill="rgb(247,123,22)" fg:x="416" fg:w="5"/><text x="1.3901%" y="527.50"></text></g><g><title>dkn-compute`&lt;libp2p_core::transport::choice::OrTransport&lt;A,B&gt; as libp2p_core::transport::Transport&gt;::dial (9 samples, 0.02%)</title><rect x="1.1374%" y="597" width="0.0247%" height="15" fill="rgb(231,138,38)" fg:x="415" fg:w="9"/><text x="1.3874%" y="607.50"></text></g><g><title>dkn-compute`&lt;libp2p_core::transport::choice::OrTransport&lt;A,B&gt; as libp2p_core::transport::Transport&gt;::dial (9 samples, 0.02%)</title><rect x="1.1374%" y="581" width="0.0247%" height="15" fill="rgb(231,145,46)" fg:x="415" fg:w="9"/><text x="1.3874%" y="591.50"></text></g><g><title>dkn-compute`&lt;libp2p_core::transport::map::Map&lt;T,F&gt; as libp2p_core::transport::Transport&gt;::dial (9 samples, 0.02%)</title><rect x="1.1374%" y="565" width="0.0247%" height="15" fill="rgb(251,118,11)" fg:x="415" fg:w="9"/><text x="1.3874%" y="575.50"></text></g><g><title>dkn-compute`&lt;libp2p_tcp::Transport&lt;T&gt; as libp2p_core::transport::Transport&gt;::dial (9 samples, 0.02%)</title><rect x="1.1374%" y="549" width="0.0247%" height="15" fill="rgb(217,147,25)" fg:x="415" fg:w="9"/><text x="1.3874%" y="559.50"></text></g><g><title>dkn-compute`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (10 samples, 0.03%)</title><rect x="1.1374%" y="629" width="0.0274%" height="15" fill="rgb(247,81,37)" fg:x="415" fg:w="10"/><text x="1.3874%" y="639.50"></text></g><g><title>dkn-compute`&lt;T as libp2p_core::transport::boxed::Abstract&lt;O&gt;&gt;::dial (10 samples, 0.03%)</title><rect x="1.1374%" y="613" width="0.0274%" height="15" fill="rgb(209,12,38)" fg:x="415" fg:w="10"/><text x="1.3874%" y="623.50"></text></g><g><title>dkn-compute`alloc::vec::in_place_collect::_&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (11 samples, 0.03%)</title><rect x="1.1374%" y="645" width="0.0301%" height="15" fill="rgb(227,1,9)" fg:x="415" fg:w="11"/><text x="1.3874%" y="655.50"></text></g><g><title>dkn-compute`tokio::runtime::scheduler::multi_thread::worker::_&lt;impl tokio::runtime::task::Schedule for alloc::sync::Arc&lt;tokio::runtime::scheduler::multi_thread::handle::Handle&gt;&gt;::schedule (5 samples, 0.01%)</title><rect x="1.1785%" y="613" width="0.0137%" height="15" fill="rgb(248,47,43)" fg:x="430" fg:w="5"/><text x="1.4285%" y="623.50"></text></g><g><title>dkn-compute`tokio::runtime::context::with_scheduler (5 samples, 0.01%)</title><rect x="1.1785%" y="597" width="0.0137%" height="15" fill="rgb(221,10,30)" fg:x="430" fg:w="5"/><text x="1.4285%" y="607.50"></text></g><g><title>dkn-compute`futures_channel::mpsc::Sender&lt;T&gt;::try_send (6 samples, 0.02%)</title><rect x="1.1785%" y="645" width="0.0164%" height="15" fill="rgb(210,229,1)" fg:x="430" fg:w="6"/><text x="1.4285%" y="655.50"></text></g><g><title>dkn-compute`tokio::runtime::task::waker::wake_by_val (6 samples, 0.02%)</title><rect x="1.1785%" y="629" width="0.0164%" height="15" fill="rgb(222,148,37)" fg:x="430" fg:w="6"/><text x="1.4285%" y="639.50"></text></g><g><title>dkn-compute`libp2p_swarm::connection::pool::Pool&lt;THandler&gt;::iter_established_connections_of_peer (9 samples, 0.02%)</title><rect x="1.2114%" y="645" width="0.0247%" height="15" fill="rgb(234,67,33)" fg:x="442" fg:w="9"/><text x="1.4614%" y="655.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (7 samples, 0.02%)</title><rect x="1.3101%" y="533" width="0.0192%" height="15" fill="rgb(247,98,35)" fg:x="478" fg:w="7"/><text x="1.5601%" y="543.50"></text></g><g><title>dkn-compute`futures_channel::mpsc::queue::Queue&lt;T&gt;::pop_spin (18 samples, 0.05%)</title><rect x="1.2826%" y="565" width="0.0493%" height="15" fill="rgb(247,138,52)" fg:x="468" fg:w="18"/><text x="1.5326%" y="575.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (13 samples, 0.04%)</title><rect x="1.2964%" y="549" width="0.0356%" height="15" fill="rgb(213,79,30)" fg:x="473" fg:w="13"/><text x="1.5464%" y="559.50"></text></g><g><title>dkn-compute`futures_channel::mpsc::Receiver&lt;T&gt;::next_message (30 samples, 0.08%)</title><rect x="1.2744%" y="581" width="0.0822%" height="15" fill="rgb(246,177,23)" fg:x="465" fg:w="30"/><text x="1.5244%" y="591.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (4 samples, 0.01%)</title><rect x="1.3457%" y="565" width="0.0110%" height="15" fill="rgb(230,62,27)" fg:x="491" fg:w="4"/><text x="1.5957%" y="575.50"></text></g><g><title>dkn-compute`futures_util::stream::stream::StreamExt::poll_next_unpin (34 samples, 0.09%)</title><rect x="1.2717%" y="597" width="0.0932%" height="15" fill="rgb(216,154,8)" fg:x="464" fg:w="34"/><text x="1.5217%" y="607.50"></text></g><g><title>dkn-compute`&lt;futures_util::stream::futures_unordered::FuturesUnordered&lt;Fut&gt; as futures_core::stream::Stream&gt;::poll_next (43 samples, 0.12%)</title><rect x="1.2525%" y="613" width="0.1179%" height="15" fill="rgb(244,35,45)" fg:x="457" fg:w="43"/><text x="1.5025%" y="623.50"></text></g><g><title>dkn-compute`&lt;futures_util::stream::select_all::SelectAll&lt;St&gt; as futures_core::stream::Stream&gt;::poll_next (45 samples, 0.12%)</title><rect x="1.2498%" y="629" width="0.1233%" height="15" fill="rgb(251,115,12)" fg:x="456" fg:w="45"/><text x="1.4998%" y="639.50"></text></g><g><title>dkn-compute`libp2p_swarm::connection::pool::Pool&lt;THandler&gt;::poll (59 samples, 0.16%)</title><rect x="1.2361%" y="645" width="0.1617%" height="15" fill="rgb(240,54,50)" fg:x="451" fg:w="59"/><text x="1.4861%" y="655.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (5 samples, 0.01%)</title><rect x="1.3841%" y="629" width="0.0137%" height="15" fill="rgb(233,84,52)" fg:x="505" fg:w="5"/><text x="1.6341%" y="639.50"></text></g><g><title>dkn-compute`tracing::span::Span::log (6 samples, 0.02%)</title><rect x="1.3978%" y="645" width="0.0164%" height="15" fill="rgb(207,117,47)" fg:x="510" fg:w="6"/><text x="1.6478%" y="655.50"></text></g><g><title>dkn-compute`libp2p_swarm::Swarm&lt;TBehaviour&gt;::poll_next_event (499 samples, 1.37%)</title><rect x="0.0658%" y="661" width="1.3676%" height="15" fill="rgb(249,43,39)" fg:x="24" fg:w="499"/><text x="0.3158%" y="671.50"></text></g><g><title>dkn-compute`tokio::signal::unix::Signal::recv::_{{closure}} (4 samples, 0.01%)</title><rect x="1.4389%" y="661" width="0.0110%" height="15" fill="rgb(209,38,44)" fg:x="525" fg:w="4"/><text x="1.6889%" y="671.50"></text></g><g><title>dkn-compute`dkn_compute::main::_{{closure}} (539 samples, 1.48%)</title><rect x="0.0000%" y="693" width="1.4772%" height="15" fill="rgb(236,212,23)" fg:x="0" fg:w="539"/><text x="0.2500%" y="703.50"></text></g><g><title>dkn-compute`&lt;tokio::future::poll_fn::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (536 samples, 1.47%)</title><rect x="0.0082%" y="677" width="1.4690%" height="15" fill="rgb(242,79,21)" fg:x="3" fg:w="536"/><text x="0.2582%" y="687.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvwait (40 samples, 0.11%)</title><rect x="1.4855%" y="661" width="0.1096%" height="15" fill="rgb(211,96,35)" fg:x="542" fg:w="40"/><text x="1.7355%" y="671.50"></text></g><g><title>dkn-compute`tokio::runtime::park::Inner::park (43 samples, 0.12%)</title><rect x="1.4800%" y="693" width="0.1179%" height="15" fill="rgb(253,215,40)" fg:x="540" fg:w="43"/><text x="1.7300%" y="703.50"></text></g><g><title>dkn-compute`parking_lot::condvar::Condvar::wait_until_internal (43 samples, 0.12%)</title><rect x="1.4800%" y="677" width="0.1179%" height="15" fill="rgb(211,81,21)" fg:x="540" fg:w="43"/><text x="1.7300%" y="687.50"></text></g><g><title>dkn-compute`tokio::runtime::context::runtime::enter_runtime (584 samples, 1.60%)</title><rect x="0.0000%" y="725" width="1.6006%" height="15" fill="rgb(208,190,38)" fg:x="0" fg:w="584"/><text x="0.2500%" y="735.50"></text></g><g><title>dkn-compute`tokio::runtime::park::CachedParkThread::block_on (584 samples, 1.60%)</title><rect x="0.0000%" y="709" width="1.6006%" height="15" fill="rgb(235,213,38)" fg:x="0" fg:w="584"/><text x="0.2500%" y="719.50"></text></g><g><title>dkn-compute`&lt;tokio::sync::notify::Notified as core::ops::drop::Drop&gt;::drop (5 samples, 0.01%)</title><rect x="1.8006%" y="549" width="0.0137%" height="15" fill="rgb(237,122,38)" fg:x="657" fg:w="5"/><text x="2.0506%" y="559.50"></text></g><g><title>dkn-compute`tokio::sync::notify::Notified::poll_notified (7 samples, 0.02%)</title><rect x="1.8143%" y="533" width="0.0192%" height="15" fill="rgb(244,218,35)" fg:x="662" fg:w="7"/><text x="2.0643%" y="543.50"></text></g><g><title>dkn-compute`tokio_util::sync::cancellation_token::tree_node::is_cancelled (12 samples, 0.03%)</title><rect x="1.8335%" y="533" width="0.0329%" height="15" fill="rgb(240,68,47)" fg:x="669" fg:w="12"/><text x="2.0835%" y="543.50"></text></g><g><title>dkn-compute`&lt;tokio_util::sync::cancellation_token::WaitForCancellationFuture as core::future::future::Future&gt;::poll (20 samples, 0.05%)</title><rect x="1.8143%" y="549" width="0.0548%" height="15" fill="rgb(210,16,53)" fg:x="662" fg:w="20"/><text x="2.0643%" y="559.50"></text></g><g><title>dkn-compute`core::ptr::drop_in_place&lt;tracing::span::Span&gt; (4 samples, 0.01%)</title><rect x="2.8147%" y="469" width="0.0110%" height="15" fill="rgb(235,124,12)" fg:x="1027" fg:w="4"/><text x="3.0647%" y="479.50"></text></g><g><title>dkn-compute`&lt;libp2p_core::transport::map::Map&lt;T,F&gt; as libp2p_core::transport::Transport&gt;::poll (28 samples, 0.08%)</title><rect x="2.7681%" y="485" width="0.0767%" height="15" fill="rgb(224,169,11)" fg:x="1010" fg:w="28"/><text x="3.0181%" y="495.50"></text></g><g><title>dkn-compute`tracing::span::Span::record_all (6 samples, 0.02%)</title><rect x="2.8284%" y="469" width="0.0164%" height="15" fill="rgb(250,166,2)" fg:x="1032" fg:w="6"/><text x="3.0784%" y="479.50"></text></g><g><title>dkn-compute`&lt;futures_util::stream::select_all::SelectAll&lt;St&gt; as futures_core::stream::Stream&gt;::poll_next (7 samples, 0.02%)</title><rect x="2.8448%" y="469" width="0.0192%" height="15" fill="rgb(242,216,29)" fg:x="1038" fg:w="7"/><text x="3.0948%" y="479.50"></text></g><g><title>dkn-compute`futures_core::task::__internal::atomic_waker::AtomicWaker::register (4 samples, 0.01%)</title><rect x="2.8531%" y="453" width="0.0110%" height="15" fill="rgb(230,116,27)" fg:x="1041" fg:w="4"/><text x="3.1031%" y="463.50"></text></g><g><title>dkn-compute`&lt;libp2p_quic::transport::GenTransport&lt;P&gt; as libp2p_core::transport::Transport&gt;::poll (8 samples, 0.02%)</title><rect x="2.8448%" y="485" width="0.0219%" height="15" fill="rgb(228,99,48)" fg:x="1038" fg:w="8"/><text x="3.0948%" y="495.50"></text></g><g><title>dkn-compute`&lt;libp2p_core::transport::choice::OrTransport&lt;A,B&gt; as libp2p_core::transport::Transport&gt;::poll (43 samples, 0.12%)</title><rect x="2.7571%" y="501" width="0.1179%" height="15" fill="rgb(253,11,6)" fg:x="1006" fg:w="43"/><text x="3.0071%" y="511.50"></text></g><g><title>dkn-compute`&lt;futures_util::stream::select_all::SelectAll&lt;St&gt; as futures_core::stream::Stream&gt;::poll_next (4 samples, 0.01%)</title><rect x="2.8914%" y="485" width="0.0110%" height="15" fill="rgb(247,143,39)" fg:x="1055" fg:w="4"/><text x="3.1414%" y="495.50"></text></g><g><title>dkn-compute`&lt;libp2p_core::transport::choice::OrTransport&lt;A,B&gt; as libp2p_core::transport::Transport&gt;::poll (69 samples, 0.19%)</title><rect x="2.7434%" y="517" width="0.1891%" height="15" fill="rgb(236,97,10)" fg:x="1001" fg:w="69"/><text x="2.9934%" y="527.50"></text></g><g><title>dkn-compute`&lt;libp2p_core::transport::map::Map&lt;T,F&gt; as libp2p_core::transport::Transport&gt;::poll (21 samples, 0.06%)</title><rect x="2.8750%" y="501" width="0.0576%" height="15" fill="rgb(233,208,19)" fg:x="1049" fg:w="21"/><text x="3.1250%" y="511.50"></text></g><g><title>dkn-compute`&lt;libp2p_relay::priv_client::transport::Transport as libp2p_core::transport::Transport&gt;::poll (11 samples, 0.03%)</title><rect x="2.9024%" y="485" width="0.0301%" height="15" fill="rgb(216,164,2)" fg:x="1059" fg:w="11"/><text x="3.1524%" y="495.50"></text></g><g><title>dkn-compute`&lt;futures_util::stream::select_all::SelectAll&lt;St&gt; as futures_core::stream::Stream&gt;::poll_next (5 samples, 0.01%)</title><rect x="2.9188%" y="469" width="0.0137%" height="15" fill="rgb(220,129,5)" fg:x="1065" fg:w="5"/><text x="3.1688%" y="479.50"></text></g><g><title>dkn-compute`&lt;futures_util::stream::futures_unordered::FuturesUnordered&lt;Fut&gt; as futures_core::stream::Stream&gt;::poll_next (4 samples, 0.01%)</title><rect x="2.9216%" y="453" width="0.0110%" height="15" fill="rgb(242,17,10)" fg:x="1066" fg:w="4"/><text x="3.1716%" y="463.50"></text></g><g><title>dkn-compute`&lt;T as libp2p_core::transport::boxed::Abstract&lt;O&gt;&gt;::poll (76 samples, 0.21%)</title><rect x="2.7407%" y="533" width="0.2083%" height="15" fill="rgb(242,107,0)" fg:x="1000" fg:w="76"/><text x="2.9907%" y="543.50"></text></g><g><title>dkn-compute`&lt;libp2p_core::transport::map::Map&lt;T,F&gt; as libp2p_core::transport::Transport&gt;::poll (6 samples, 0.02%)</title><rect x="2.9326%" y="517" width="0.0164%" height="15" fill="rgb(251,28,31)" fg:x="1070" fg:w="6"/><text x="3.1826%" y="527.50"></text></g><g><title>dkn-compute`&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.01%)</title><rect x="2.9490%" y="533" width="0.0110%" height="15" fill="rgb(233,223,10)" fg:x="1076" fg:w="4"/><text x="3.1990%" y="543.50"></text></g><g><title>dkn-compute`&lt;dkn_compute::p2p::behaviour::DriaBehaviour as libp2p_swarm::behaviour::NetworkBehaviour&gt;::handle_pending_outbound_connection (4 samples, 0.01%)</title><rect x="2.9682%" y="533" width="0.0110%" height="15" fill="rgb(215,21,27)" fg:x="1083" fg:w="4"/><text x="3.2182%" y="543.50"></text></g><g><title>dkn-compute`&lt;libp2p_kad::kbucket::ClosestIter&lt;TTarget,TKey,TVal,TMap,TOut&gt; as core::iter::traits::iterator::Iterator&gt;::next (13 samples, 0.04%)</title><rect x="3.0367%" y="485" width="0.0356%" height="15" fill="rgb(232,23,21)" fg:x="1108" fg:w="13"/><text x="3.2867%" y="495.50"></text></g><g><title>dkn-compute`libp2p_kad::kbucket::bucket::KBucket&lt;TKey,TVal&gt;::apply_pending (6 samples, 0.02%)</title><rect x="3.0559%" y="469" width="0.0164%" height="15" fill="rgb(244,5,23)" fg:x="1115" fg:w="6"/><text x="3.3059%" y="479.50"></text></g><g><title>dkn-compute`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (39 samples, 0.11%)</title><rect x="3.0367%" y="501" width="0.1069%" height="15" fill="rgb(226,81,46)" fg:x="1108" fg:w="39"/><text x="3.2867%" y="511.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (25 samples, 0.07%)</title><rect x="3.0751%" y="485" width="0.0685%" height="15" fill="rgb(247,70,30)" fg:x="1122" fg:w="25"/><text x="3.3251%" y="495.50"></text></g><g><title>dkn-compute`libp2p_kad::behaviour::Behaviour&lt;TStore&gt;::discovered (4 samples, 0.01%)</title><rect x="3.1436%" y="501" width="0.0110%" height="15" fill="rgb(212,68,19)" fg:x="1147" fg:w="4"/><text x="3.3936%" y="511.50"></text></g><g><title>dkn-compute`&lt;dkn_compute::p2p::behaviour::DriaBehaviour as libp2p_swarm::behaviour::NetworkBehaviour&gt;::on_connection_handler_event (66 samples, 0.18%)</title><rect x="2.9791%" y="533" width="0.1809%" height="15" fill="rgb(240,187,13)" fg:x="1087" fg:w="66"/><text x="3.2291%" y="543.50"></text></g><g><title>dkn-compute`&lt;libp2p_kad::behaviour::Behaviour&lt;TStore&gt; as libp2p_swarm::behaviour::NetworkBehaviour&gt;::on_connection_handler_event (45 samples, 0.12%)</title><rect x="3.0367%" y="517" width="0.1233%" height="15" fill="rgb(223,113,26)" fg:x="1108" fg:w="45"/><text x="3.2867%" y="527.50"></text></g><g><title>dkn-compute`libp2p_kad::behaviour::Behaviour&lt;TStore&gt;::address_failed (5 samples, 0.01%)</title><rect x="3.1683%" y="501" width="0.0137%" height="15" fill="rgb(206,192,2)" fg:x="1156" fg:w="5"/><text x="3.4183%" y="511.50"></text></g><g><title>dkn-compute`&lt;libp2p_kad::behaviour::Behaviour&lt;TStore&gt; as libp2p_swarm::behaviour::NetworkBehaviour&gt;::on_swarm_event (9 samples, 0.02%)</title><rect x="3.1683%" y="517" width="0.0247%" height="15" fill="rgb(241,108,4)" fg:x="1156" fg:w="9"/><text x="3.4183%" y="527.50"></text></g><g><title>dkn-compute`libp2p_kad::query::peers::closest::ClosestPeersIter::on_failure (4 samples, 0.01%)</title><rect x="3.1820%" y="501" width="0.0110%" height="15" fill="rgb(247,173,49)" fg:x="1161" fg:w="4"/><text x="3.4320%" y="511.50"></text></g><g><title>dkn-compute`&lt;dkn_compute::p2p::behaviour::DriaBehaviour as libp2p_swarm::behaviour::NetworkBehaviour&gt;::on_swarm_event (13 samples, 0.04%)</title><rect x="3.1600%" y="533" width="0.0356%" height="15" fill="rgb(224,114,35)" fg:x="1153" fg:w="13"/><text x="3.4100%" y="543.50"></text></g><g><title>dkn-compute`core::ptr::drop_in_place&lt;tracing::span::Span&gt; (14 samples, 0.04%)</title><rect x="3.4670%" y="485" width="0.0384%" height="15" fill="rgb(245,159,27)" fg:x="1265" fg:w="14"/><text x="3.7170%" y="495.50"></text></g><g><title>dkn-compute`tracing::span::Span::log (16 samples, 0.04%)</title><rect x="3.5054%" y="485" width="0.0439%" height="15" fill="rgb(245,172,44)" fg:x="1279" fg:w="16"/><text x="3.7554%" y="495.50"></text></g><g><title>dkn-compute`tracing::span::Span::record_all (18 samples, 0.05%)</title><rect x="3.5492%" y="485" width="0.0493%" height="15" fill="rgb(236,23,11)" fg:x="1295" fg:w="18"/><text x="3.7992%" y="495.50"></text></g><g><title>dkn-compute`&lt;libp2p_request_response::Behaviour&lt;TCodec&gt; as libp2p_swarm::behaviour::NetworkBehaviour&gt;::poll (83 samples, 0.23%)</title><rect x="3.3875%" y="501" width="0.2275%" height="15" fill="rgb(205,117,38)" fg:x="1236" fg:w="83"/><text x="3.6375%" y="511.50"></text></g><g><title>dkn-compute`tracing_core::span::Record::is_empty (6 samples, 0.02%)</title><rect x="3.5985%" y="485" width="0.0164%" height="15" fill="rgb(237,72,25)" fg:x="1313" fg:w="6"/><text x="3.8485%" y="495.50"></text></g><g><title>dkn-compute`core::ptr::drop_in_place&lt;tracing::span::Span&gt; (15 samples, 0.04%)</title><rect x="3.6150%" y="501" width="0.0411%" height="15" fill="rgb(244,70,9)" fg:x="1319" fg:w="15"/><text x="3.8650%" y="511.50"></text></g><g><title>dkn-compute`&lt;futures_timer::native::delay::Delay as core::future::future::Future&gt;::poll (24 samples, 0.07%)</title><rect x="3.6616%" y="485" width="0.0658%" height="15" fill="rgb(217,125,39)" fg:x="1336" fg:w="24"/><text x="3.9116%" y="495.50"></text></g><g><title>dkn-compute`tokio::runtime::park::drop_waker (4 samples, 0.01%)</title><rect x="3.7164%" y="469" width="0.0110%" height="15" fill="rgb(235,36,10)" fg:x="1356" fg:w="4"/><text x="3.9664%" y="479.50"></text></g><g><title>dkn-compute`libp2p_autonat::behaviour::as_client::AsClient::poll_auto_probe (28 samples, 0.08%)</title><rect x="3.6561%" y="501" width="0.0767%" height="15" fill="rgb(251,123,47)" fg:x="1334" fg:w="28"/><text x="3.9061%" y="511.50"></text></g><g><title>dkn-compute`tracing::span::Span::log (18 samples, 0.05%)</title><rect x="3.7328%" y="501" width="0.0493%" height="15" fill="rgb(221,13,13)" fg:x="1362" fg:w="18"/><text x="3.9828%" y="511.50"></text></g><g><title>dkn-compute`tracing::span::Span::record_all (11 samples, 0.03%)</title><rect x="3.7822%" y="501" width="0.0301%" height="15" fill="rgb(238,131,9)" fg:x="1380" fg:w="11"/><text x="4.0322%" y="511.50"></text></g><g><title>dkn-compute`tracing::span::Span::log (4 samples, 0.01%)</title><rect x="3.8014%" y="485" width="0.0110%" height="15" fill="rgb(211,50,8)" fg:x="1387" fg:w="4"/><text x="4.0514%" y="495.50"></text></g><g><title>dkn-compute`&lt;libp2p_autonat::behaviour::Behaviour as libp2p_swarm::behaviour::NetworkBehaviour&gt;::poll (188 samples, 0.52%)</title><rect x="3.3080%" y="517" width="0.5153%" height="15" fill="rgb(245,182,24)" fg:x="1207" fg:w="188"/><text x="3.5580%" y="527.50"></text></g><g><title>dkn-compute`tracing_core::span::Record::is_empty (4 samples, 0.01%)</title><rect x="3.8123%" y="501" width="0.0110%" height="15" fill="rgb(242,14,37)" fg:x="1391" fg:w="4"/><text x="4.0623%" y="511.50"></text></g><g><title>dkn-compute`&lt;futures_timer::native::delay::Delay as core::future::future::Future&gt;::poll (24 samples, 0.07%)</title><rect x="3.9548%" y="485" width="0.0658%" height="15" fill="rgb(246,228,12)" fg:x="1443" fg:w="24"/><text x="4.2048%" y="495.50"></text></g><g><title>dkn-compute`tokio::runtime::park::clone (5 samples, 0.01%)</title><rect x="4.0206%" y="485" width="0.0137%" height="15" fill="rgb(213,55,15)" fg:x="1467" fg:w="5"/><text x="4.2706%" y="495.50"></text></g><g><title>dkn-compute`&lt;futures_ticker::Ticker as futures_core::stream::Stream&gt;::poll_next (30 samples, 0.08%)</title><rect x="3.9548%" y="501" width="0.0822%" height="15" fill="rgb(209,9,3)" fg:x="1443" fg:w="30"/><text x="4.2048%" y="511.50"></text></g><g><title>dkn-compute`core::ptr::drop_in_place&lt;tracing::span::Span&gt; (29 samples, 0.08%)</title><rect x="4.0398%" y="501" width="0.0795%" height="15" fill="rgb(230,59,30)" fg:x="1474" fg:w="29"/><text x="4.2898%" y="511.50"></text></g><g><title>dkn-compute`tracing::span::Span::log (10 samples, 0.03%)</title><rect x="4.0919%" y="485" width="0.0274%" height="15" fill="rgb(209,121,21)" fg:x="1493" fg:w="10"/><text x="4.3419%" y="495.50"></text></g><g><title>dkn-compute`core::hash::BuildHasher::hash_one (11 samples, 0.03%)</title><rect x="4.3413%" y="437" width="0.0301%" height="15" fill="rgb(220,109,13)" fg:x="1584" fg:w="11"/><text x="4.5913%" y="447.50"></text></g><g><title>dkn-compute`core::ops::function::impls::_&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (86 samples, 0.24%)</title><rect x="4.1385%" y="453" width="0.2357%" height="15" fill="rgb(232,18,1)" fg:x="1510" fg:w="86"/><text x="4.3885%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (5 samples, 0.01%)</title><rect x="4.3742%" y="453" width="0.0137%" height="15" fill="rgb(215,41,42)" fg:x="1596" fg:w="5"/><text x="4.6242%" y="463.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (47 samples, 0.13%)</title><rect x="4.3879%" y="453" width="0.1288%" height="15" fill="rgb(224,123,36)" fg:x="1601" fg:w="47"/><text x="4.6379%" y="463.50"></text></g><g><title>dkn-compute`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (144 samples, 0.39%)</title><rect x="4.1302%" y="469" width="0.3947%" height="15" fill="rgb(240,125,3)" fg:x="1507" fg:w="144"/><text x="4.3802%" y="479.50"></text></g><g><title>dkn-compute`libp2p_gossipsub::mcache::MessageCache::get_gossip_message_ids (147 samples, 0.40%)</title><rect x="4.1302%" y="485" width="0.4029%" height="15" fill="rgb(205,98,50)" fg:x="1507" fg:w="147"/><text x="4.3802%" y="495.50"></text></g><g><title>dkn-compute`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (10 samples, 0.03%)</title><rect x="4.5879%" y="469" width="0.0274%" height="15" fill="rgb(205,185,37)" fg:x="1674" fg:w="10"/><text x="4.8379%" y="479.50"></text></g><g><title>dkn-compute`hashbrown::raw::RawTable&lt;T,A&gt;::remove_entry (15 samples, 0.04%)</title><rect x="4.6181%" y="469" width="0.0411%" height="15" fill="rgb(238,207,15)" fg:x="1685" fg:w="15"/><text x="4.8681%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (20 samples, 0.05%)</title><rect x="4.6592%" y="469" width="0.0548%" height="15" fill="rgb(213,199,42)" fg:x="1700" fg:w="20"/><text x="4.9092%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (4 samples, 0.01%)</title><rect x="4.7661%" y="437" width="0.0110%" height="15" fill="rgb(235,201,11)" fg:x="1739" fg:w="4"/><text x="5.0161%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (25 samples, 0.07%)</title><rect x="4.7167%" y="469" width="0.0685%" height="15" fill="rgb(207,46,11)" fg:x="1721" fg:w="25"/><text x="4.9667%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (16 samples, 0.04%)</title><rect x="4.7414%" y="453" width="0.0439%" height="15" fill="rgb(241,35,35)" fg:x="1730" fg:w="16"/><text x="4.9914%" y="463.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (4 samples, 0.01%)</title><rect x="4.7853%" y="469" width="0.0110%" height="15" fill="rgb(243,32,47)" fg:x="1746" fg:w="4"/><text x="5.0353%" y="479.50"></text></g><g><title>dkn-compute`libp2p_gossipsub::mcache::MessageCache::shift (100 samples, 0.27%)</title><rect x="4.5331%" y="485" width="0.2741%" height="15" fill="rgb(247,202,23)" fg:x="1654" fg:w="100"/><text x="4.7831%" y="495.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (4 samples, 0.01%)</title><rect x="4.7962%" y="469" width="0.0110%" height="15" fill="rgb(219,102,11)" fg:x="1750" fg:w="4"/><text x="5.0462%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (7 samples, 0.02%)</title><rect x="4.8072%" y="485" width="0.0192%" height="15" fill="rgb(243,110,44)" fg:x="1754" fg:w="7"/><text x="5.0572%" y="495.50"></text></g><g><title>dkn-compute`libp2p_gossipsub::behaviour::Behaviour&lt;D,F&gt;::heartbeat (262 samples, 0.72%)</title><rect x="4.1193%" y="501" width="0.7181%" height="15" fill="rgb(222,74,54)" fg:x="1503" fg:w="262"/><text x="4.3693%" y="511.50"></text></g><g><title>dkn-compute`tracing::span::Span::log (34 samples, 0.09%)</title><rect x="4.8373%" y="501" width="0.0932%" height="15" fill="rgb(216,99,12)" fg:x="1765" fg:w="34"/><text x="5.0873%" y="511.50"></text></g><g><title>dkn-compute`tracing::span::Span::record_all (21 samples, 0.06%)</title><rect x="4.9305%" y="501" width="0.0576%" height="15" fill="rgb(226,22,26)" fg:x="1799" fg:w="21"/><text x="5.1805%" y="511.50"></text></g><g><title>dkn-compute`tracing::span::Span::log (10 samples, 0.03%)</title><rect x="4.9607%" y="485" width="0.0274%" height="15" fill="rgb(217,163,10)" fg:x="1810" fg:w="10"/><text x="5.2107%" y="495.50"></text></g><g><title>dkn-compute`tracing_core::span::Record::is_empty (11 samples, 0.03%)</title><rect x="4.9881%" y="501" width="0.0301%" height="15" fill="rgb(213,25,53)" fg:x="1820" fg:w="11"/><text x="5.2381%" y="511.50"></text></g><g><title>dkn-compute`&lt;libp2p_gossipsub::behaviour::Behaviour&lt;C,F&gt; as libp2p_swarm::behaviour::NetworkBehaviour&gt;::poll (437 samples, 1.20%)</title><rect x="3.8233%" y="517" width="1.1977%" height="15" fill="rgb(252,105,26)" fg:x="1395" fg:w="437"/><text x="4.0733%" y="527.50"></text></g><g><title>dkn-compute`core::ptr::drop_in_place&lt;tracing::span::Span&gt; (11 samples, 0.03%)</title><rect x="5.0977%" y="501" width="0.0301%" height="15" fill="rgb(220,39,43)" fg:x="1860" fg:w="11"/><text x="5.3477%" y="511.50"></text></g><g><title>dkn-compute`tracing::span::Span::log (5 samples, 0.01%)</title><rect x="5.1142%" y="485" width="0.0137%" height="15" fill="rgb(229,68,48)" fg:x="1866" fg:w="5"/><text x="5.3642%" y="495.50"></text></g><g><title>dkn-compute`tracing::span::Span::log (22 samples, 0.06%)</title><rect x="5.1279%" y="501" width="0.0603%" height="15" fill="rgb(252,8,32)" fg:x="1871" fg:w="22"/><text x="5.3779%" y="511.50"></text></g><g><title>dkn-compute`tracing::span::Span::record_all (11 samples, 0.03%)</title><rect x="5.1881%" y="501" width="0.0301%" height="15" fill="rgb(223,20,43)" fg:x="1893" fg:w="11"/><text x="5.4381%" y="511.50"></text></g><g><title>dkn-compute`&lt;libp2p_identify::behaviour::Behaviour as libp2p_swarm::behaviour::NetworkBehaviour&gt;::poll (75 samples, 0.21%)</title><rect x="5.0210%" y="517" width="0.2056%" height="15" fill="rgb(229,81,49)" fg:x="1832" fg:w="75"/><text x="5.2710%" y="527.50"></text></g><g><title>dkn-compute`core::ptr::drop_in_place&lt;tracing::span::Span&gt; (10 samples, 0.03%)</title><rect x="5.5253%" y="501" width="0.0274%" height="15" fill="rgb(236,28,36)" fg:x="2016" fg:w="10"/><text x="5.7753%" y="511.50"></text></g><g><title>dkn-compute`&lt;futures_timer::native::delay::Delay as core::future::future::Future&gt;::poll (12 samples, 0.03%)</title><rect x="5.5691%" y="485" width="0.0329%" height="15" fill="rgb(249,185,26)" fg:x="2032" fg:w="12"/><text x="5.8191%" y="495.50"></text></g><g><title>dkn-compute`libp2p_kad::jobs::AddProviderJob::poll (22 samples, 0.06%)</title><rect x="5.5527%" y="501" width="0.0603%" height="15" fill="rgb(249,174,33)" fg:x="2026" fg:w="22"/><text x="5.8027%" y="511.50"></text></g><g><title>dkn-compute`libp2p_kad::jobs::PutRecordJob::poll (44 samples, 0.12%)</title><rect x="5.6130%" y="501" width="0.1206%" height="15" fill="rgb(233,201,37)" fg:x="2048" fg:w="44"/><text x="5.8630%" y="511.50"></text></g><g><title>dkn-compute`&lt;futures_timer::native::delay::Delay as core::future::future::Future&gt;::poll (28 samples, 0.08%)</title><rect x="5.6568%" y="485" width="0.0767%" height="15" fill="rgb(221,78,26)" fg:x="2064" fg:w="28"/><text x="5.9068%" y="495.50"></text></g><g><title>dkn-compute`tokio::runtime::park::drop_waker (8 samples, 0.02%)</title><rect x="5.7116%" y="469" width="0.0219%" height="15" fill="rgb(250,127,30)" fg:x="2084" fg:w="8"/><text x="5.9616%" y="479.50"></text></g><g><title>dkn-compute`&lt;alloc::collections::btree::map::ValuesMut&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (39 samples, 0.11%)</title><rect x="5.9501%" y="485" width="0.1069%" height="15" fill="rgb(230,49,44)" fg:x="2171" fg:w="39"/><text x="6.2001%" y="495.50"></text></g><g><title>dkn-compute`&lt;std::time::Instant as core::ops::arith::Sub&gt;::sub (36 samples, 0.10%)</title><rect x="6.0570%" y="485" width="0.0987%" height="15" fill="rgb(229,67,23)" fg:x="2210" fg:w="36"/><text x="6.3070%" y="495.50"></text></g><g><title>dkn-compute`std::sys::pal::unix::time::Timespec::sub_timespec (28 samples, 0.08%)</title><rect x="6.0789%" y="469" width="0.0767%" height="15" fill="rgb(249,83,47)" fg:x="2218" fg:w="28"/><text x="6.3289%" y="479.50"></text></g><g><title>dkn-compute`libp2p_kad::query::QueryPool&lt;TInner&gt;::poll (815 samples, 2.23%)</title><rect x="5.7335%" y="501" width="2.2337%" height="15" fill="rgb(215,43,3)" fg:x="2092" fg:w="815"/><text x="5.9835%" y="511.50">d..</text></g><g><title>dkn-compute`libp2p_kad::query::peers::closest::ClosestPeersIter::next (661 samples, 1.81%)</title><rect x="6.1556%" y="485" width="1.8116%" height="15" fill="rgb(238,154,13)" fg:x="2246" fg:w="661"/><text x="6.4056%" y="495.50">d..</text></g><g><title>dkn-compute`&lt;alloc::collections::btree::map::ValuesMut&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (315 samples, 0.86%)</title><rect x="7.1039%" y="469" width="0.8633%" height="15" fill="rgb(219,56,2)" fg:x="2592" fg:w="315"/><text x="7.3539%" y="479.50"></text></g><g><title>dkn-compute`libp2p_kad::query::peers::closest::ClosestPeersIter::next (6 samples, 0.02%)</title><rect x="7.9672%" y="501" width="0.0164%" height="15" fill="rgb(233,0,4)" fg:x="2907" fg:w="6"/><text x="8.2172%" y="511.50"></text></g><g><title>libsystem_c.dylib`clock_gettime_nsec_np (10 samples, 0.03%)</title><rect x="8.0494%" y="469" width="0.0274%" height="15" fill="rgb(235,30,7)" fg:x="2937" fg:w="10"/><text x="8.2994%" y="479.50"></text></g><g><title>libsystem_kernel.dylib`mach_timebase_info (5 samples, 0.01%)</title><rect x="8.0631%" y="453" width="0.0137%" height="15" fill="rgb(250,79,13)" fg:x="2942" fg:w="5"/><text x="8.3131%" y="463.50"></text></g><g><title>libsystem_kernel.dylib`mach_absolute_time (13 samples, 0.04%)</title><rect x="8.0768%" y="469" width="0.0356%" height="15" fill="rgb(211,146,34)" fg:x="2947" fg:w="13"/><text x="8.3268%" y="479.50"></text></g><g><title>dkn-compute`std::sys::pal::unix::time::Timespec::now (52 samples, 0.14%)</title><rect x="7.9837%" y="501" width="0.1425%" height="15" fill="rgb(228,22,38)" fg:x="2913" fg:w="52"/><text x="8.2337%" y="511.50"></text></g><g><title>libsystem_c.dylib`clock_gettime (47 samples, 0.13%)</title><rect x="7.9974%" y="485" width="0.1288%" height="15" fill="rgb(235,168,5)" fg:x="2918" fg:w="47"/><text x="8.2474%" y="495.50"></text></g><g><title>libsystem_kernel.dylib`mach_timebase_info (5 samples, 0.01%)</title><rect x="8.1125%" y="469" width="0.0137%" height="15" fill="rgb(221,155,16)" fg:x="2960" fg:w="5"/><text x="8.3625%" y="479.50"></text></g><g><title>dkn-compute`tracing::span::Span::log (16 samples, 0.04%)</title><rect x="8.1317%" y="501" width="0.0439%" height="15" fill="rgb(215,215,53)" fg:x="2967" fg:w="16"/><text x="8.3817%" y="511.50"></text></g><g><title>dkn-compute`tracing::span::Span::record_all (29 samples, 0.08%)</title><rect x="8.1755%" y="501" width="0.0795%" height="15" fill="rgb(223,4,10)" fg:x="2983" fg:w="29"/><text x="8.4255%" y="511.50"></text></g><g><title>dkn-compute`tracing::span::Span::log (5 samples, 0.01%)</title><rect x="8.2413%" y="485" width="0.0137%" height="15" fill="rgb(234,103,6)" fg:x="3007" fg:w="5"/><text x="8.4913%" y="495.50"></text></g><g><title>dkn-compute`&lt;libp2p_kad::behaviour::Behaviour&lt;TStore&gt; as libp2p_swarm::behaviour::NetworkBehaviour&gt;::poll (1,120 samples, 3.07%)</title><rect x="5.2265%" y="517" width="3.0696%" height="15" fill="rgb(227,97,0)" fg:x="1907" fg:w="1120"/><text x="5.4765%" y="527.50">dkn..</text></g><g><title>dkn-compute`tracing_core::span::Record::is_empty (15 samples, 0.04%)</title><rect x="8.2550%" y="501" width="0.0411%" height="15" fill="rgb(234,150,53)" fg:x="3012" fg:w="15"/><text x="8.5050%" y="511.50"></text></g><g><title>dkn-compute`futures_channel::mpsc::Receiver&lt;T&gt;::next_message (36 samples, 0.10%)</title><rect x="8.5154%" y="485" width="0.0987%" height="15" fill="rgb(228,201,54)" fg:x="3107" fg:w="36"/><text x="8.7654%" y="495.50"></text></g><g><title>dkn-compute`futures_channel::mpsc::queue::Queue&lt;T&gt;::pop_spin (23 samples, 0.06%)</title><rect x="8.5510%" y="469" width="0.0630%" height="15" fill="rgb(222,22,37)" fg:x="3120" fg:w="23"/><text x="8.8010%" y="479.50"></text></g><g><title>dkn-compute`&lt;futures_channel::mpsc::Receiver&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (78 samples, 0.21%)</title><rect x="8.4962%" y="501" width="0.2138%" height="15" fill="rgb(237,53,32)" fg:x="3100" fg:w="78"/><text x="8.7462%" y="511.50"></text></g><g><title>dkn-compute`futures_core::task::__internal::atomic_waker::AtomicWaker::register (33 samples, 0.09%)</title><rect x="8.6195%" y="485" width="0.0904%" height="15" fill="rgb(233,25,53)" fg:x="3145" fg:w="33"/><text x="8.8695%" y="495.50"></text></g><g><title>dkn-compute`core::ptr::drop_in_place&lt;tracing::span::Span&gt; (27 samples, 0.07%)</title><rect x="8.7100%" y="501" width="0.0740%" height="15" fill="rgb(210,40,34)" fg:x="3178" fg:w="27"/><text x="8.9600%" y="511.50"></text></g><g><title>dkn-compute`tracing::span::Span::log (10 samples, 0.03%)</title><rect x="8.7565%" y="485" width="0.0274%" height="15" fill="rgb(241,220,44)" fg:x="3195" fg:w="10"/><text x="9.0065%" y="495.50"></text></g><g><title>dkn-compute`futures_channel::mpsc::Receiver&lt;T&gt;::next_message (9 samples, 0.02%)</title><rect x="8.7840%" y="501" width="0.0247%" height="15" fill="rgb(235,28,35)" fg:x="3205" fg:w="9"/><text x="9.0340%" y="511.50"></text></g><g><title>dkn-compute`tracing::span::Span::log (34 samples, 0.09%)</title><rect x="8.8141%" y="501" width="0.0932%" height="15" fill="rgb(210,56,17)" fg:x="3216" fg:w="34"/><text x="9.0641%" y="511.50"></text></g><g><title>dkn-compute`tracing::span::Span::record_all (37 samples, 0.10%)</title><rect x="8.9073%" y="501" width="0.1014%" height="15" fill="rgb(224,130,29)" fg:x="3250" fg:w="37"/><text x="9.1573%" y="511.50"></text></g><g><title>dkn-compute`tracing::span::Span::log (9 samples, 0.02%)</title><rect x="8.9840%" y="485" width="0.0247%" height="15" fill="rgb(235,212,8)" fg:x="3278" fg:w="9"/><text x="9.2340%" y="495.50"></text></g><g><title>dkn-compute`&lt;libp2p_relay::priv_client::Behaviour as libp2p_swarm::behaviour::NetworkBehaviour&gt;::poll (272 samples, 0.75%)</title><rect x="8.2961%" y="517" width="0.7455%" height="15" fill="rgb(223,33,50)" fg:x="3027" fg:w="272"/><text x="8.5461%" y="527.50"></text></g><g><title>dkn-compute`tracing_core::span::Record::is_empty (12 samples, 0.03%)</title><rect x="9.0087%" y="501" width="0.0329%" height="15" fill="rgb(219,149,13)" fg:x="3287" fg:w="12"/><text x="9.2587%" y="511.50"></text></g><g><title>dkn-compute`core::ptr::drop_in_place&lt;core::option::Option&lt;libp2p_swarm::behaviour::ToSwarm&lt;libp2p_identify::behaviour::Event,libp2p_identify::handler::InEvent&gt;&gt;&gt; (4 samples, 0.01%)</title><rect x="9.0498%" y="517" width="0.0110%" height="15" fill="rgb(250,156,29)" fg:x="3302" fg:w="4"/><text x="9.2998%" y="527.50"></text></g><g><title>dkn-compute`core::ptr::drop_in_place&lt;tracing::span::Span&gt; (8 samples, 0.02%)</title><rect x="9.0608%" y="517" width="0.0219%" height="15" fill="rgb(216,193,19)" fg:x="3306" fg:w="8"/><text x="9.3108%" y="527.50"></text></g><g><title>dkn-compute`libp2p_autonat::behaviour::as_client::AsClient::poll_auto_probe (4 samples, 0.01%)</title><rect x="9.0882%" y="517" width="0.0110%" height="15" fill="rgb(216,135,14)" fg:x="3316" fg:w="4"/><text x="9.3382%" y="527.50"></text></g><g><title>dkn-compute`libp2p_kad::jobs::AddProviderJob::poll (6 samples, 0.02%)</title><rect x="9.0991%" y="517" width="0.0164%" height="15" fill="rgb(241,47,5)" fg:x="3320" fg:w="6"/><text x="9.3491%" y="527.50"></text></g><g><title>dkn-compute`std::sys::pal::unix::time::Timespec::now (5 samples, 0.01%)</title><rect x="9.1238%" y="517" width="0.0137%" height="15" fill="rgb(233,42,35)" fg:x="3329" fg:w="5"/><text x="9.3738%" y="527.50"></text></g><g><title>dkn-compute`tokio::runtime::park::clone (8 samples, 0.02%)</title><rect x="9.1457%" y="517" width="0.0219%" height="15" fill="rgb(231,13,6)" fg:x="3337" fg:w="8"/><text x="9.3957%" y="527.50"></text></g><g><title>dkn-compute`tracing::span::Span::log (37 samples, 0.10%)</title><rect x="9.1704%" y="517" width="0.1014%" height="15" fill="rgb(207,181,40)" fg:x="3346" fg:w="37"/><text x="9.4204%" y="527.50"></text></g><g><title>dkn-compute`tracing::span::Span::record_all (10 samples, 0.03%)</title><rect x="9.2718%" y="517" width="0.0274%" height="15" fill="rgb(254,173,49)" fg:x="3383" fg:w="10"/><text x="9.5218%" y="527.50"></text></g><g><title>dkn-compute`&lt;dkn_compute::p2p::behaviour::DriaBehaviour as libp2p_swarm::behaviour::NetworkBehaviour&gt;::poll (2,233 samples, 6.12%)</title><rect x="3.1957%" y="533" width="6.1200%" height="15" fill="rgb(221,1,38)" fg:x="1166" fg:w="2233"/><text x="3.4457%" y="543.50">dkn-comp..</text></g><g><title>libsystem_platform.dylib`_platform_memmove (6 samples, 0.02%)</title><rect x="9.2992%" y="517" width="0.0164%" height="15" fill="rgb(206,124,46)" fg:x="3393" fg:w="6"/><text x="9.5492%" y="527.50"></text></g><g><title>dkn-compute`&lt;futures_channel::mpsc::Receiver&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (4 samples, 0.01%)</title><rect x="9.3156%" y="533" width="0.0110%" height="15" fill="rgb(249,21,11)" fg:x="3399" fg:w="4"/><text x="9.5656%" y="543.50"></text></g><g><title>dkn-compute`&lt;libp2p_autonat::behaviour::Behaviour as libp2p_swarm::behaviour::NetworkBehaviour&gt;::poll (6 samples, 0.02%)</title><rect x="9.3348%" y="533" width="0.0164%" height="15" fill="rgb(222,201,40)" fg:x="3406" fg:w="6"/><text x="9.5848%" y="543.50"></text></g><g><title>dkn-compute`&lt;libp2p_dcutr::behaviour::Behaviour as libp2p_swarm::behaviour::NetworkBehaviour&gt;::poll (5 samples, 0.01%)</title><rect x="9.3540%" y="533" width="0.0137%" height="15" fill="rgb(235,61,29)" fg:x="3413" fg:w="5"/><text x="9.6040%" y="543.50"></text></g><g><title>dkn-compute`&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.03%)</title><rect x="9.8117%" y="517" width="0.0329%" height="15" fill="rgb(219,207,3)" fg:x="3580" fg:w="12"/><text x="10.0617%" y="527.50"></text></g><g><title>dkn-compute`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (223 samples, 0.61%)</title><rect x="9.8446%" y="517" width="0.6112%" height="15" fill="rgb(222,56,46)" fg:x="3592" fg:w="223"/><text x="10.0946%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (22 samples, 0.06%)</title><rect x="10.4996%" y="501" width="0.0603%" height="15" fill="rgb(239,76,54)" fg:x="3831" fg:w="22"/><text x="10.7496%" y="511.50"></text></g><g><title>dkn-compute`&lt;libp2p_gossipsub::transform::IdentityTransform as libp2p_gossipsub::transform::DataTransform&gt;::inbound_transform (42 samples, 0.12%)</title><rect x="10.4558%" y="517" width="0.1151%" height="15" fill="rgb(231,124,27)" fg:x="3815" fg:w="42"/><text x="10.7058%" y="527.50"></text></g><g><title>dkn-compute`&lt;alloc::string::String as core::clone::Clone&gt;::clone (11 samples, 0.03%)</title><rect x="10.6613%" y="501" width="0.0301%" height="15" fill="rgb(249,195,6)" fg:x="3890" fg:w="11"/><text x="10.9113%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_outlined (11 samples, 0.03%)</title><rect x="10.7107%" y="501" width="0.0301%" height="15" fill="rgb(237,174,47)" fg:x="3908" fg:w="11"/><text x="10.9607%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_find_block_and_allocate (9 samples, 0.02%)</title><rect x="10.7161%" y="485" width="0.0247%" height="15" fill="rgb(206,201,31)" fg:x="3910" fg:w="9"/><text x="10.9661%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (36 samples, 0.10%)</title><rect x="10.7408%" y="501" width="0.0987%" height="15" fill="rgb(231,57,52)" fg:x="3919" fg:w="36"/><text x="10.9908%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (5 samples, 0.01%)</title><rect x="10.8641%" y="485" width="0.0137%" height="15" fill="rgb(248,177,22)" fg:x="3964" fg:w="5"/><text x="11.1141%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_from_free_list (4 samples, 0.01%)</title><rect x="10.8669%" y="469" width="0.0110%" height="15" fill="rgb(215,211,37)" fg:x="3965" fg:w="4"/><text x="11.1169%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (5 samples, 0.01%)</title><rect x="10.9272%" y="469" width="0.0137%" height="15" fill="rgb(241,128,51)" fg:x="3987" fg:w="5"/><text x="11.1772%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`_tiny_check_and_zero_inline_meta_from_freelist (10 samples, 0.03%)</title><rect x="11.1053%" y="453" width="0.0274%" height="15" fill="rgb(227,165,31)" fg:x="4052" fg:w="10"/><text x="11.3553%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (112 samples, 0.31%)</title><rect x="10.8395%" y="501" width="0.3070%" height="15" fill="rgb(228,167,24)" fg:x="3955" fg:w="112"/><text x="11.0895%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (95 samples, 0.26%)</title><rect x="10.8861%" y="485" width="0.2604%" height="15" fill="rgb(228,143,12)" fg:x="3972" fg:w="95"/><text x="11.1361%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (75 samples, 0.21%)</title><rect x="10.9409%" y="469" width="0.2056%" height="15" fill="rgb(249,149,8)" fg:x="3992" fg:w="75"/><text x="11.1909%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (5 samples, 0.01%)</title><rect x="11.1327%" y="453" width="0.0137%" height="15" fill="rgb(243,35,44)" fg:x="4062" fg:w="5"/><text x="11.3827%" y="463.50"></text></g><g><title>dkn-compute`&lt;libp2p_gossipsub::types::RawMessage as core::clone::Clone&gt;::clone (216 samples, 0.59%)</title><rect x="10.5709%" y="517" width="0.5920%" height="15" fill="rgb(246,89,9)" fg:x="3857" fg:w="216"/><text x="10.8209%" y="527.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (6 samples, 0.02%)</title><rect x="11.1464%" y="501" width="0.0164%" height="15" fill="rgb(233,213,13)" fg:x="4067" fg:w="6"/><text x="11.3964%" y="511.50"></text></g><g><title>dkn-compute`DYLD-STUB$$free (15 samples, 0.04%)</title><rect x="11.1629%" y="517" width="0.0411%" height="15" fill="rgb(233,141,41)" fg:x="4073" fg:w="15"/><text x="11.4129%" y="527.50"></text></g><g><title>dkn-compute`core::hash::BuildHasher::hash_one (5 samples, 0.01%)</title><rect x="11.2204%" y="517" width="0.0137%" height="15" fill="rgb(239,167,4)" fg:x="4094" fg:w="5"/><text x="11.4704%" y="527.50"></text></g><g><title>dkn-compute`&lt;alloc::string::String as core::fmt::Write&gt;::write_str (7 samples, 0.02%)</title><rect x="11.2615%" y="501" width="0.0192%" height="15" fill="rgb(209,217,16)" fg:x="4109" fg:w="7"/><text x="11.5115%" y="511.50"></text></g><g><title>dkn-compute`core::fmt::Formatter::pad_integral (5 samples, 0.01%)</title><rect x="11.2807%" y="501" width="0.0137%" height="15" fill="rgb(219,88,35)" fg:x="4116" fg:w="5"/><text x="11.5307%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (6 samples, 0.02%)</title><rect x="11.3876%" y="453" width="0.0164%" height="15" fill="rgb(220,193,23)" fg:x="4155" fg:w="6"/><text x="11.6376%" y="463.50"></text></g><g><title>dkn-compute`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (29 samples, 0.08%)</title><rect x="11.3794%" y="469" width="0.0795%" height="15" fill="rgb(230,90,52)" fg:x="4152" fg:w="29"/><text x="11.6294%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (17 samples, 0.05%)</title><rect x="11.4123%" y="453" width="0.0466%" height="15" fill="rgb(252,106,19)" fg:x="4164" fg:w="17"/><text x="11.6623%" y="463.50"></text></g><g><title>dkn-compute`&lt;alloc::string::String as core::fmt::Write&gt;::write_str (36 samples, 0.10%)</title><rect x="11.3657%" y="485" width="0.0987%" height="15" fill="rgb(206,74,20)" fg:x="4147" fg:w="36"/><text x="11.6157%" y="495.50"></text></g><g><title>dkn-compute`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (5 samples, 0.01%)</title><rect x="11.4644%" y="485" width="0.0137%" height="15" fill="rgb(230,138,44)" fg:x="4183" fg:w="5"/><text x="11.7144%" y="495.50"></text></g><g><title>dkn-compute`core::fmt::Formatter::pad_integral (4 samples, 0.01%)</title><rect x="11.4781%" y="485" width="0.0110%" height="15" fill="rgb(235,182,43)" fg:x="4188" fg:w="4"/><text x="11.7281%" y="495.50"></text></g><g><title>dkn-compute`dkn_compute::p2p::behaviour::create_gossipsub_behavior::_{{closure}} (97 samples, 0.27%)</title><rect x="11.2396%" y="517" width="0.2658%" height="15" fill="rgb(242,16,51)" fg:x="4101" fg:w="97"/><text x="11.4896%" y="527.50"></text></g><g><title>dkn-compute`core::fmt::num::imp::_&lt;impl core::fmt::Display for u64&gt;::fmt (77 samples, 0.21%)</title><rect x="11.2944%" y="501" width="0.2110%" height="15" fill="rgb(248,9,4)" fg:x="4121" fg:w="77"/><text x="11.5444%" y="511.50"></text></g><g><title>dkn-compute`hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (11 samples, 0.03%)</title><rect x="11.5055%" y="517" width="0.0301%" height="15" fill="rgb(210,31,22)" fg:x="4198" fg:w="11"/><text x="11.7555%" y="527.50"></text></g><g><title>dkn-compute`hashbrown::rustc_entry::_&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (4 samples, 0.01%)</title><rect x="11.5466%" y="517" width="0.0110%" height="15" fill="rgb(239,54,39)" fg:x="4213" fg:w="4"/><text x="11.7966%" y="527.50"></text></g><g><title>dkn-compute`&lt;alloc::collections::btree::map::Keys&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 0.02%)</title><rect x="12.0673%" y="501" width="0.0164%" height="15" fill="rgb(230,99,41)" fg:x="4403" fg:w="6"/><text x="12.3173%" y="511.50"></text></g><g><title>dkn-compute`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (60 samples, 0.16%)</title><rect x="12.0920%" y="501" width="0.1644%" height="15" fill="rgb(253,106,12)" fg:x="4412" fg:w="60"/><text x="12.3420%" y="511.50"></text></g><g><title>dkn-compute`&lt;alloc::string::String as core::clone::Clone&gt;::clone (14 samples, 0.04%)</title><rect x="12.3359%" y="485" width="0.0384%" height="15" fill="rgb(213,46,41)" fg:x="4501" fg:w="14"/><text x="12.5859%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_outlined (10 samples, 0.03%)</title><rect x="12.3469%" y="469" width="0.0274%" height="15" fill="rgb(215,133,35)" fg:x="4505" fg:w="10"/><text x="12.5969%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_find_block_and_allocate (7 samples, 0.02%)</title><rect x="12.3551%" y="453" width="0.0192%" height="15" fill="rgb(213,28,5)" fg:x="4508" fg:w="7"/><text x="12.6051%" y="463.50"></text></g><g><title>dkn-compute`DYLD-STUB$$memcpy (7 samples, 0.02%)</title><rect x="12.3743%" y="485" width="0.0192%" height="15" fill="rgb(215,77,49)" fg:x="4515" fg:w="7"/><text x="12.6243%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_outlined (40 samples, 0.11%)</title><rect x="12.4044%" y="485" width="0.1096%" height="15" fill="rgb(248,100,22)" fg:x="4526" fg:w="40"/><text x="12.6544%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_find_block_and_allocate (30 samples, 0.08%)</title><rect x="12.4318%" y="469" width="0.0822%" height="15" fill="rgb(208,67,9)" fg:x="4536" fg:w="30"/><text x="12.6818%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (12 samples, 0.03%)</title><rect x="12.4812%" y="453" width="0.0329%" height="15" fill="rgb(219,133,21)" fg:x="4554" fg:w="12"/><text x="12.7312%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (57 samples, 0.16%)</title><rect x="12.5140%" y="485" width="0.1562%" height="15" fill="rgb(246,46,29)" fg:x="4566" fg:w="57"/><text x="12.7640%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (4 samples, 0.01%)</title><rect x="12.6785%" y="469" width="0.0110%" height="15" fill="rgb(246,185,52)" fg:x="4626" fg:w="4"/><text x="12.9285%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (16 samples, 0.04%)</title><rect x="12.7717%" y="453" width="0.0439%" height="15" fill="rgb(252,136,11)" fg:x="4660" fg:w="16"/><text x="13.0217%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`_tiny_check_and_zero_inline_meta_from_freelist (40 samples, 0.11%)</title><rect x="12.9169%" y="437" width="0.1096%" height="15" fill="rgb(219,138,53)" fg:x="4713" fg:w="40"/><text x="13.1669%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (149 samples, 0.41%)</title><rect x="12.6703%" y="485" width="0.4084%" height="15" fill="rgb(211,51,23)" fg:x="4623" fg:w="149"/><text x="12.9203%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (140 samples, 0.38%)</title><rect x="12.6949%" y="469" width="0.3837%" height="15" fill="rgb(247,221,28)" fg:x="4632" fg:w="140"/><text x="12.9449%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (96 samples, 0.26%)</title><rect x="12.8155%" y="453" width="0.2631%" height="15" fill="rgb(251,222,45)" fg:x="4676" fg:w="96"/><text x="13.0655%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (19 samples, 0.05%)</title><rect x="13.0266%" y="437" width="0.0521%" height="15" fill="rgb(217,162,53)" fg:x="4753" fg:w="19"/><text x="13.2766%" y="447.50"></text></g><g><title>dkn-compute`&lt;libp2p_gossipsub::types::RawMessage as core::clone::Clone&gt;::clone (307 samples, 0.84%)</title><rect x="12.2564%" y="501" width="0.8414%" height="15" fill="rgb(229,93,14)" fg:x="4472" fg:w="307"/><text x="12.5064%" y="511.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (6 samples, 0.02%)</title><rect x="13.0814%" y="485" width="0.0164%" height="15" fill="rgb(209,67,49)" fg:x="4773" fg:w="6"/><text x="13.3314%" y="495.50"></text></g><g><title>dkn-compute`core::hash::BuildHasher::hash_one (8 samples, 0.02%)</title><rect x="13.1033%" y="501" width="0.0219%" height="15" fill="rgb(213,87,29)" fg:x="4781" fg:w="8"/><text x="13.3533%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (7 samples, 0.02%)</title><rect x="13.1252%" y="485" width="0.0192%" height="15" fill="rgb(205,151,52)" fg:x="4789" fg:w="7"/><text x="13.3752%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (8 samples, 0.02%)</title><rect x="13.1471%" y="485" width="0.0219%" height="15" fill="rgb(253,215,39)" fg:x="4797" fg:w="8"/><text x="13.3971%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (5 samples, 0.01%)</title><rect x="13.1554%" y="469" width="0.0137%" height="15" fill="rgb(221,220,41)" fg:x="4800" fg:w="5"/><text x="13.4054%" y="479.50"></text></g><g><title>dkn-compute`core::ptr::drop_in_place&lt;libp2p_gossipsub::types::RpcOut&gt; (17 samples, 0.05%)</title><rect x="13.1252%" y="501" width="0.0466%" height="15" fill="rgb(218,133,21)" fg:x="4789" fg:w="17"/><text x="13.3752%" y="511.50"></text></g><g><title>dkn-compute`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (47 samples, 0.13%)</title><rect x="13.2869%" y="485" width="0.1288%" height="15" fill="rgb(221,193,43)" fg:x="4848" fg:w="47"/><text x="13.5369%" y="495.50"></text></g><g><title>dkn-compute`core::hash::BuildHasher::hash_one (11 samples, 0.03%)</title><rect x="13.4157%" y="485" width="0.0301%" height="15" fill="rgb(240,128,52)" fg:x="4895" fg:w="11"/><text x="13.6657%" y="495.50"></text></g><g><title>dkn-compute`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (58 samples, 0.16%)</title><rect x="13.5363%" y="469" width="0.1590%" height="15" fill="rgb(253,114,12)" fg:x="4939" fg:w="58"/><text x="13.7863%" y="479.50"></text></g><g><title>dkn-compute`core::hash::BuildHasher::hash_one (6 samples, 0.02%)</title><rect x="13.6953%" y="469" width="0.0164%" height="15" fill="rgb(215,223,47)" fg:x="4997" fg:w="6"/><text x="13.9453%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (4 samples, 0.01%)</title><rect x="13.7501%" y="437" width="0.0110%" height="15" fill="rgb(248,225,23)" fg:x="5017" fg:w="4"/><text x="14.0001%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (17 samples, 0.05%)</title><rect x="13.7172%" y="469" width="0.0466%" height="15" fill="rgb(250,108,0)" fg:x="5005" fg:w="17"/><text x="13.9672%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (14 samples, 0.04%)</title><rect x="13.7254%" y="453" width="0.0384%" height="15" fill="rgb(228,208,7)" fg:x="5008" fg:w="14"/><text x="13.9754%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (9 samples, 0.02%)</title><rect x="13.7665%" y="453" width="0.0247%" height="15" fill="rgb(244,45,10)" fg:x="5023" fg:w="9"/><text x="14.0165%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_from_free_list (6 samples, 0.02%)</title><rect x="13.7748%" y="437" width="0.0164%" height="15" fill="rgb(207,125,25)" fg:x="5026" fg:w="6"/><text x="14.0248%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_remove_ptr_no_clear (5 samples, 0.01%)</title><rect x="13.7775%" y="421" width="0.0137%" height="15" fill="rgb(210,195,18)" fg:x="5027" fg:w="5"/><text x="14.0275%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`_tiny_check_and_zero_inline_meta_from_freelist (5 samples, 0.01%)</title><rect x="13.8296%" y="421" width="0.0137%" height="15" fill="rgb(249,80,12)" fg:x="5046" fg:w="5"/><text x="14.0796%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (33 samples, 0.09%)</title><rect x="13.7638%" y="469" width="0.0904%" height="15" fill="rgb(221,65,9)" fg:x="5022" fg:w="33"/><text x="14.0138%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (23 samples, 0.06%)</title><rect x="13.7912%" y="453" width="0.0630%" height="15" fill="rgb(235,49,36)" fg:x="5032" fg:w="23"/><text x="14.0412%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (20 samples, 0.05%)</title><rect x="13.7994%" y="437" width="0.0548%" height="15" fill="rgb(225,32,20)" fg:x="5035" fg:w="20"/><text x="14.0494%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (4 samples, 0.01%)</title><rect x="13.8433%" y="421" width="0.0110%" height="15" fill="rgb(215,141,46)" fg:x="5051" fg:w="4"/><text x="14.0933%" y="431.50"></text></g><g><title>dkn-compute`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (152 samples, 0.42%)</title><rect x="13.4459%" y="485" width="0.4166%" height="15" fill="rgb(250,160,47)" fg:x="4906" fg:w="152"/><text x="13.6959%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`free (4 samples, 0.01%)</title><rect x="13.8734%" y="485" width="0.0110%" height="15" fill="rgb(216,222,40)" fg:x="5062" fg:w="4"/><text x="14.1234%" y="495.50"></text></g><g><title>dkn-compute`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (268 samples, 0.73%)</title><rect x="13.1746%" y="501" width="0.7345%" height="15" fill="rgb(234,217,39)" fg:x="4807" fg:w="268"/><text x="13.4246%" y="511.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (7 samples, 0.02%)</title><rect x="13.8899%" y="485" width="0.0192%" height="15" fill="rgb(207,178,40)" fg:x="5068" fg:w="7"/><text x="14.1399%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (4 samples, 0.01%)</title><rect x="13.9118%" y="501" width="0.0110%" height="15" fill="rgb(221,136,13)" fg:x="5076" fg:w="4"/><text x="14.1618%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (5 samples, 0.01%)</title><rect x="13.9228%" y="501" width="0.0137%" height="15" fill="rgb(249,199,10)" fg:x="5080" fg:w="5"/><text x="14.1728%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`_szone_free (4 samples, 0.01%)</title><rect x="13.9365%" y="501" width="0.0110%" height="15" fill="rgb(249,222,13)" fg:x="5085" fg:w="4"/><text x="14.1865%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`free (4 samples, 0.01%)</title><rect x="13.9474%" y="501" width="0.0110%" height="15" fill="rgb(244,185,38)" fg:x="5089" fg:w="4"/><text x="14.1974%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (11 samples, 0.03%)</title><rect x="13.9666%" y="501" width="0.0301%" height="15" fill="rgb(236,202,9)" fg:x="5096" fg:w="11"/><text x="14.2166%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (6 samples, 0.02%)</title><rect x="13.9803%" y="485" width="0.0164%" height="15" fill="rgb(250,229,37)" fg:x="5101" fg:w="6"/><text x="14.2303%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (65 samples, 0.18%)</title><rect x="14.0022%" y="501" width="0.1781%" height="15" fill="rgb(206,174,23)" fg:x="5109" fg:w="65"/><text x="14.2522%" y="511.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (59 samples, 0.16%)</title><rect x="14.1996%" y="501" width="0.1617%" height="15" fill="rgb(211,33,43)" fg:x="5181" fg:w="59"/><text x="14.4496%" y="511.50"></text></g><g><title>dkn-compute`libp2p_gossipsub::behaviour::Behaviour&lt;D,F&gt;::forward_msg (1,025 samples, 2.81%)</title><rect x="11.5575%" y="517" width="2.8092%" height="15" fill="rgb(245,58,50)" fg:x="4217" fg:w="1025"/><text x="11.8075%" y="527.50">dk..</text></g><g><title>dkn-compute`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (28 samples, 0.08%)</title><rect x="14.9313%" y="485" width="0.0767%" height="15" fill="rgb(244,68,36)" fg:x="5448" fg:w="28"/><text x="15.1813%" y="495.50"></text></g><g><title>dkn-compute`hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_mut (232 samples, 0.64%)</title><rect x="14.3887%" y="501" width="0.6358%" height="15" fill="rgb(232,229,15)" fg:x="5250" fg:w="232"/><text x="14.6387%" y="511.50"></text></g><g><title>dkn-compute`core::hash::BuildHasher::hash_one (6 samples, 0.02%)</title><rect x="15.0081%" y="485" width="0.0164%" height="15" fill="rgb(254,30,23)" fg:x="5476" fg:w="6"/><text x="15.2581%" y="495.50"></text></g><g><title>dkn-compute`libp2p_gossipsub::mcache::MessageCache::observe_duplicate (323 samples, 0.89%)</title><rect x="14.3695%" y="517" width="0.8852%" height="15" fill="rgb(235,160,14)" fg:x="5243" fg:w="323"/><text x="14.6195%" y="527.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (84 samples, 0.23%)</title><rect x="15.0245%" y="501" width="0.2302%" height="15" fill="rgb(212,155,44)" fg:x="5482" fg:w="84"/><text x="15.2745%" y="511.50"></text></g><g><title>dkn-compute`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (7 samples, 0.02%)</title><rect x="15.3233%" y="485" width="0.0192%" height="15" fill="rgb(226,2,50)" fg:x="5591" fg:w="7"/><text x="15.5733%" y="495.50"></text></g><g><title>dkn-compute`core::hash::BuildHasher::hash_one (6 samples, 0.02%)</title><rect x="15.3260%" y="469" width="0.0164%" height="15" fill="rgb(234,177,6)" fg:x="5592" fg:w="6"/><text x="15.5760%" y="479.50"></text></g><g><title>dkn-compute`hashbrown::rustc_entry::_&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (24 samples, 0.07%)</title><rect x="15.2822%" y="501" width="0.0658%" height="15" fill="rgb(217,24,9)" fg:x="5576" fg:w="24"/><text x="15.5322%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_outlined (4 samples, 0.01%)</title><rect x="15.3479%" y="501" width="0.0110%" height="15" fill="rgb(220,13,46)" fg:x="5600" fg:w="4"/><text x="15.5979%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (8 samples, 0.02%)</title><rect x="15.3589%" y="501" width="0.0219%" height="15" fill="rgb(239,221,27)" fg:x="5604" fg:w="8"/><text x="15.6089%" y="511.50"></text></g><g><title>dkn-compute`libp2p_gossipsub::mcache::MessageCache::put (47 samples, 0.13%)</title><rect x="15.2547%" y="517" width="0.1288%" height="15" fill="rgb(222,198,25)" fg:x="5566" fg:w="47"/><text x="15.5047%" y="527.50"></text></g><g><title>dkn-compute`hashbrown::rustc_entry::_&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (274 samples, 0.75%)</title><rect x="15.4302%" y="501" width="0.7510%" height="15" fill="rgb(211,99,13)" fg:x="5630" fg:w="274"/><text x="15.6802%" y="511.50"></text></g><g><title>dkn-compute`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (4 samples, 0.01%)</title><rect x="16.1701%" y="485" width="0.0110%" height="15" fill="rgb(232,111,31)" fg:x="5900" fg:w="4"/><text x="16.4201%" y="495.50"></text></g><g><title>libsystem_c.dylib`clock_gettime_nsec_np (8 samples, 0.02%)</title><rect x="16.2222%" y="469" width="0.0219%" height="15" fill="rgb(245,82,37)" fg:x="5919" fg:w="8"/><text x="16.4722%" y="479.50"></text></g><g><title>libsystem_kernel.dylib`mach_absolute_time (10 samples, 0.03%)</title><rect x="16.2441%" y="469" width="0.0274%" height="15" fill="rgb(227,149,46)" fg:x="5927" fg:w="10"/><text x="16.4941%" y="479.50"></text></g><g><title>libsystem_c.dylib`clock_gettime (39 samples, 0.11%)</title><rect x="16.1866%" y="485" width="0.1069%" height="15" fill="rgb(218,36,50)" fg:x="5906" fg:w="39"/><text x="16.4366%" y="495.50"></text></g><g><title>libsystem_kernel.dylib`mach_timebase_info (8 samples, 0.02%)</title><rect x="16.2715%" y="469" width="0.0219%" height="15" fill="rgb(226,80,48)" fg:x="5937" fg:w="8"/><text x="16.5215%" y="479.50"></text></g><g><title>dkn-compute`std::sys::pal::unix::time::Timespec::now (42 samples, 0.12%)</title><rect x="16.1811%" y="501" width="0.1151%" height="15" fill="rgb(238,224,15)" fg:x="5904" fg:w="42"/><text x="16.4311%" y="511.50"></text></g><g><title>dkn-compute`std::time::Instant::now (9 samples, 0.02%)</title><rect x="16.2962%" y="501" width="0.0247%" height="15" fill="rgb(241,136,10)" fg:x="5946" fg:w="9"/><text x="16.5462%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (28 samples, 0.08%)</title><rect x="16.3264%" y="501" width="0.0767%" height="15" fill="rgb(208,32,45)" fg:x="5957" fg:w="28"/><text x="16.5764%" y="511.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (117 samples, 0.32%)</title><rect x="16.4031%" y="501" width="0.3207%" height="15" fill="rgb(207,135,9)" fg:x="5985" fg:w="117"/><text x="16.6531%" y="511.50"></text></g><g><title>dkn-compute`libp2p_gossipsub::time_cache::DuplicateCache&lt;Key&gt;::insert (492 samples, 1.35%)</title><rect x="15.3836%" y="517" width="1.3484%" height="15" fill="rgb(206,86,44)" fg:x="5613" fg:w="492"/><text x="15.6336%" y="527.50"></text></g><g><title>dkn-compute`std::sys::pal::unix::time::Timespec::now (4 samples, 0.01%)</title><rect x="16.7320%" y="517" width="0.0110%" height="15" fill="rgb(245,177,15)" fg:x="6105" fg:w="4"/><text x="16.9820%" y="527.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (4 samples, 0.01%)</title><rect x="16.7457%" y="517" width="0.0110%" height="15" fill="rgb(206,64,50)" fg:x="6110" fg:w="4"/><text x="16.9957%" y="527.50"></text></g><g><title>libsystem_kernel.dylib`__ulock_wake (8 samples, 0.02%)</title><rect x="16.7567%" y="517" width="0.0219%" height="15" fill="rgb(234,36,40)" fg:x="6114" fg:w="8"/><text x="17.0067%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (11 samples, 0.03%)</title><rect x="16.7813%" y="517" width="0.0301%" height="15" fill="rgb(213,64,8)" fg:x="6123" fg:w="11"/><text x="17.0313%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (113 samples, 0.31%)</title><rect x="16.8115%" y="517" width="0.3097%" height="15" fill="rgb(210,75,36)" fg:x="6134" fg:w="113"/><text x="17.0615%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`_szone_free (16 samples, 0.04%)</title><rect x="17.1212%" y="517" width="0.0439%" height="15" fill="rgb(229,88,21)" fg:x="6247" fg:w="16"/><text x="17.3712%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`free (15 samples, 0.04%)</title><rect x="17.1650%" y="517" width="0.0411%" height="15" fill="rgb(252,204,47)" fg:x="6263" fg:w="15"/><text x="17.4150%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`free_small (4 samples, 0.01%)</title><rect x="17.2061%" y="517" width="0.0110%" height="15" fill="rgb(208,77,27)" fg:x="6278" fg:w="4"/><text x="17.4561%" y="527.50"></text></g><g><title>libsystem_kernel.dylib`__ulock_wait (12 samples, 0.03%)</title><rect x="17.2856%" y="501" width="0.0329%" height="15" fill="rgb(221,76,26)" fg:x="6307" fg:w="12"/><text x="17.5356%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`get_tiny_previous_free_msize (7 samples, 0.02%)</title><rect x="17.3185%" y="501" width="0.0192%" height="15" fill="rgb(225,139,18)" fg:x="6319" fg:w="7"/><text x="17.5685%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (46 samples, 0.13%)</title><rect x="17.4309%" y="485" width="0.1261%" height="15" fill="rgb(230,137,11)" fg:x="6360" fg:w="46"/><text x="17.6809%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (87 samples, 0.24%)</title><rect x="17.3459%" y="501" width="0.2384%" height="15" fill="rgb(212,28,1)" fg:x="6329" fg:w="87"/><text x="17.5959%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (10 samples, 0.03%)</title><rect x="17.5569%" y="485" width="0.0274%" height="15" fill="rgb(248,164,17)" fg:x="6406" fg:w="10"/><text x="17.8069%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (136 samples, 0.37%)</title><rect x="17.2171%" y="517" width="0.3727%" height="15" fill="rgb(222,171,42)" fg:x="6282" fg:w="136"/><text x="17.4671%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (44 samples, 0.12%)</title><rect x="17.5980%" y="517" width="0.1206%" height="15" fill="rgb(243,84,45)" fg:x="6421" fg:w="44"/><text x="17.8480%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc (4 samples, 0.01%)</title><rect x="17.7186%" y="517" width="0.0110%" height="15" fill="rgb(252,49,23)" fg:x="6465" fg:w="4"/><text x="17.9686%" y="527.50"></text></g><g><title>libsystem_platform.dylib`__bzero (6 samples, 0.02%)</title><rect x="17.7433%" y="517" width="0.0164%" height="15" fill="rgb(215,19,7)" fg:x="6474" fg:w="6"/><text x="17.9933%" y="527.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (54 samples, 0.15%)</title><rect x="17.7598%" y="517" width="0.1480%" height="15" fill="rgb(238,81,41)" fg:x="6480" fg:w="54"/><text x="18.0098%" y="527.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (61 samples, 0.17%)</title><rect x="17.9077%" y="517" width="0.1672%" height="15" fill="rgb(210,199,37)" fg:x="6534" fg:w="61"/><text x="18.1577%" y="527.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (19 samples, 0.05%)</title><rect x="18.0749%" y="517" width="0.0521%" height="15" fill="rgb(244,192,49)" fg:x="6595" fg:w="19"/><text x="18.3249%" y="527.50"></text></g><g><title>dkn-compute`&lt;libp2p_gossipsub::behaviour::Behaviour&lt;C,F&gt; as libp2p_swarm::behaviour::NetworkBehaviour&gt;::on_connection_handler_event (3,197 samples, 8.76%)</title><rect x="9.3677%" y="533" width="8.7620%" height="15" fill="rgb(226,211,11)" fg:x="3418" fg:w="3197"/><text x="9.6177%" y="543.50">dkn-compute`..</text></g><g><title>dkn-compute`&lt;libp2p_identify::behaviour::Behaviour as libp2p_swarm::behaviour::NetworkBehaviour&gt;::poll (7 samples, 0.02%)</title><rect x="18.1462%" y="533" width="0.0192%" height="15" fill="rgb(236,162,54)" fg:x="6621" fg:w="7"/><text x="18.3962%" y="543.50"></text></g><g><title>dkn-compute`&lt;smallvec::SmallVec&lt;A&gt; as core::iter::traits::collect::Extend&lt;&lt;A as smallvec::Array&gt;::Item&gt;&gt;::extend (10 samples, 0.03%)</title><rect x="18.1818%" y="533" width="0.0274%" height="15" fill="rgb(220,229,9)" fg:x="6634" fg:w="10"/><text x="18.4318%" y="543.50"></text></g><g><title>dkn-compute`DYLD-STUB$$free (4 samples, 0.01%)</title><rect x="18.2092%" y="533" width="0.0110%" height="15" fill="rgb(250,87,22)" fg:x="6644" fg:w="4"/><text x="18.4592%" y="543.50"></text></g><g><title>libsystem_kernel.dylib`__fcntl (4 samples, 0.01%)</title><rect x="18.2531%" y="389" width="0.0110%" height="15" fill="rgb(239,43,17)" fg:x="6660" fg:w="4"/><text x="18.5031%" y="399.50"></text></g><g><title>dkn-compute`socket2::socket::Socket::new (5 samples, 0.01%)</title><rect x="18.2531%" y="405" width="0.0137%" height="15" fill="rgb(231,177,25)" fg:x="6660" fg:w="5"/><text x="18.5031%" y="415.50"></text></g><g><title>dkn-compute`libp2p_tcp::Transport&lt;T&gt;::create_socket (32 samples, 0.09%)</title><rect x="18.2531%" y="421" width="0.0877%" height="15" fill="rgb(219,179,1)" fg:x="6660" fg:w="32"/><text x="18.5031%" y="431.50"></text></g><g><title>libsystem_kernel.dylib`socket (24 samples, 0.07%)</title><rect x="18.2750%" y="405" width="0.0658%" height="15" fill="rgb(238,219,53)" fg:x="6668" fg:w="24"/><text x="18.5250%" y="415.50"></text></g><g><title>dkn-compute`&lt;libp2p_tcp::Transport&lt;T&gt; as libp2p_core::transport::Transport&gt;::dial (47 samples, 0.13%)</title><rect x="18.2503%" y="437" width="0.1288%" height="15" fill="rgb(232,167,36)" fg:x="6659" fg:w="47"/><text x="18.5003%" y="447.50"></text></g><g><title>libsystem_kernel.dylib`__bind (10 samples, 0.03%)</title><rect x="18.3517%" y="421" width="0.0274%" height="15" fill="rgb(244,19,51)" fg:x="6696" fg:w="10"/><text x="18.6017%" y="431.50"></text></g><g><title>dkn-compute`&lt;libp2p_core::transport::choice::OrTransport&lt;A,B&gt; as libp2p_core::transport::Transport&gt;::dial (48 samples, 0.13%)</title><rect x="18.2503%" y="469" width="0.1316%" height="15" fill="rgb(224,6,22)" fg:x="6659" fg:w="48"/><text x="18.5003%" y="479.50"></text></g><g><title>dkn-compute`&lt;libp2p_core::transport::map::Map&lt;T,F&gt; as libp2p_core::transport::Transport&gt;::dial (48 samples, 0.13%)</title><rect x="18.2503%" y="453" width="0.1316%" height="15" fill="rgb(224,145,5)" fg:x="6659" fg:w="48"/><text x="18.5003%" y="463.50"></text></g><g><title>dkn-compute`&lt;libp2p_core::transport::choice::OrTransport&lt;A,B&gt; as libp2p_core::transport::Transport&gt;::dial (52 samples, 0.14%)</title><rect x="18.2503%" y="485" width="0.1425%" height="15" fill="rgb(234,130,49)" fg:x="6659" fg:w="52"/><text x="18.5003%" y="495.50"></text></g><g><title>dkn-compute`&lt;libp2p_core::transport::map::Map&lt;T,F&gt; as libp2p_core::transport::Transport&gt;::dial (4 samples, 0.01%)</title><rect x="18.3819%" y="469" width="0.0110%" height="15" fill="rgb(254,6,2)" fg:x="6707" fg:w="4"/><text x="18.6319%" y="479.50"></text></g><g><title>dkn-compute`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (62 samples, 0.17%)</title><rect x="18.2421%" y="517" width="0.1699%" height="15" fill="rgb(208,96,46)" fg:x="6656" fg:w="62"/><text x="18.4921%" y="527.50"></text></g><g><title>dkn-compute`&lt;T as libp2p_core::transport::boxed::Abstract&lt;O&gt;&gt;::dial (60 samples, 0.16%)</title><rect x="18.2476%" y="501" width="0.1644%" height="15" fill="rgb(239,3,39)" fg:x="6658" fg:w="60"/><text x="18.4976%" y="511.50"></text></g><g><title>dkn-compute`futures_timer::native::delay::Delay::new_handle (7 samples, 0.02%)</title><rect x="18.3929%" y="485" width="0.0192%" height="15" fill="rgb(233,210,1)" fg:x="6711" fg:w="7"/><text x="18.6429%" y="495.50"></text></g><g><title>dkn-compute`futures_timer::native::global::raw_wake (7 samples, 0.02%)</title><rect x="18.3929%" y="469" width="0.0192%" height="15" fill="rgb(244,137,37)" fg:x="6711" fg:w="7"/><text x="18.6429%" y="479.50"></text></g><g><title>libdispatch.dylib`_dispatch_semaphore_signal_slow (6 samples, 0.02%)</title><rect x="18.3956%" y="453" width="0.0164%" height="15" fill="rgb(240,136,2)" fg:x="6712" fg:w="6"/><text x="18.6456%" y="463.50"></text></g><g><title>libsystem_kernel.dylib`semaphore_signal_trap (6 samples, 0.02%)</title><rect x="18.3956%" y="437" width="0.0164%" height="15" fill="rgb(239,18,37)" fg:x="6712" fg:w="6"/><text x="18.6456%" y="447.50"></text></g><g><title>dkn-compute`alloc::vec::in_place_collect::_&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (63 samples, 0.17%)</title><rect x="18.2421%" y="533" width="0.1727%" height="15" fill="rgb(218,185,22)" fg:x="6656" fg:w="63"/><text x="18.4921%" y="543.50"></text></g><g><title>dkn-compute`core::ptr::drop_in_place&lt;tracing::span::Span&gt; (5 samples, 0.01%)</title><rect x="18.4257%" y="533" width="0.0137%" height="15" fill="rgb(225,218,4)" fg:x="6723" fg:w="5"/><text x="18.6757%" y="543.50"></text></g><g><title>dkn-compute`dkn_compute::p2p::behaviour::create_gossipsub_behavior::_{{closure}} (8 samples, 0.02%)</title><rect x="18.4394%" y="533" width="0.0219%" height="15" fill="rgb(230,182,32)" fg:x="6728" fg:w="8"/><text x="18.6894%" y="543.50"></text></g><g><title>dkn-compute`futures_channel::mpsc::BoundedSenderInner&lt;T&gt;::poll_unparked (11 samples, 0.03%)</title><rect x="18.5354%" y="517" width="0.0301%" height="15" fill="rgb(242,56,43)" fg:x="6763" fg:w="11"/><text x="18.7854%" y="527.50"></text></g><g><title>dkn-compute`tokio::runtime::task::raw::schedule (4 samples, 0.01%)</title><rect x="18.5655%" y="517" width="0.0110%" height="15" fill="rgb(233,99,24)" fg:x="6774" fg:w="4"/><text x="18.8155%" y="527.50"></text></g><g><title>dkn-compute`parking_lot::condvar::Condvar::notify_one_slow (67 samples, 0.18%)</title><rect x="18.6011%" y="469" width="0.1836%" height="15" fill="rgb(234,209,42)" fg:x="6787" fg:w="67"/><text x="18.8511%" y="479.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvsignal (66 samples, 0.18%)</title><rect x="18.6039%" y="453" width="0.1809%" height="15" fill="rgb(227,7,12)" fg:x="6788" fg:w="66"/><text x="18.8539%" y="463.50"></text></g><g><title>dkn-compute`tokio::runtime::driver::Handle::unpark (15 samples, 0.04%)</title><rect x="18.7848%" y="469" width="0.0411%" height="15" fill="rgb(245,203,43)" fg:x="6854" fg:w="15"/><text x="19.0348%" y="479.50"></text></g><g><title>libsystem_kernel.dylib`kevent (15 samples, 0.04%)</title><rect x="18.7848%" y="453" width="0.0411%" height="15" fill="rgb(238,205,33)" fg:x="6854" fg:w="15"/><text x="19.0348%" y="463.50"></text></g><g><title>dkn-compute`tokio::runtime::scheduler::multi_thread::worker::_&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::notify_parked_remote (10 samples, 0.03%)</title><rect x="18.8314%" y="469" width="0.0274%" height="15" fill="rgb(231,56,7)" fg:x="6871" fg:w="10"/><text x="19.0814%" y="479.50"></text></g><g><title>dkn-compute`tokio::runtime::context::with_scheduler (125 samples, 0.34%)</title><rect x="18.5847%" y="485" width="0.3426%" height="15" fill="rgb(244,186,29)" fg:x="6781" fg:w="125"/><text x="18.8347%" y="495.50"></text></g><g><title>dkn-compute`tokio::runtime::scheduler::multi_thread::worker::_&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::push_remote_task (25 samples, 0.07%)</title><rect x="18.8588%" y="469" width="0.0685%" height="15" fill="rgb(234,111,31)" fg:x="6881" fg:w="25"/><text x="19.1088%" y="479.50"></text></g><g><title>dkn-compute`tokio::runtime::scheduler::multi_thread::worker::_&lt;impl tokio::runtime::task::Schedule for alloc::sync::Arc&lt;tokio::runtime::scheduler::multi_thread::handle::Handle&gt;&gt;::schedule (130 samples, 0.36%)</title><rect x="18.5820%" y="501" width="0.3563%" height="15" fill="rgb(241,149,10)" fg:x="6780" fg:w="130"/><text x="18.8320%" y="511.50"></text></g><g><title>dkn-compute`futures_channel::mpsc::Sender&lt;T&gt;::try_send (191 samples, 0.52%)</title><rect x="18.4669%" y="533" width="0.5235%" height="15" fill="rgb(249,206,44)" fg:x="6738" fg:w="191"/><text x="18.7169%" y="543.50"></text></g><g><title>dkn-compute`tokio::runtime::task::waker::wake_by_val (151 samples, 0.41%)</title><rect x="18.5765%" y="517" width="0.4138%" height="15" fill="rgb(251,153,30)" fg:x="6778" fg:w="151"/><text x="18.8265%" y="527.50"></text></g><g><title>dkn-compute`tokio::runtime::task::state::State::transition_to_notified_by_val (19 samples, 0.05%)</title><rect x="18.9383%" y="501" width="0.0521%" height="15" fill="rgb(239,152,38)" fg:x="6910" fg:w="19"/><text x="19.1883%" y="511.50"></text></g><g><title>dkn-compute`futures_core::task::__internal::atomic_waker::AtomicWaker::wake (29 samples, 0.08%)</title><rect x="18.9903%" y="533" width="0.0795%" height="15" fill="rgb(249,139,47)" fg:x="6929" fg:w="29"/><text x="19.2403%" y="543.50"></text></g><g><title>dkn-compute`hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (9 samples, 0.02%)</title><rect x="19.0698%" y="533" width="0.0247%" height="15" fill="rgb(244,64,35)" fg:x="6958" fg:w="9"/><text x="19.3198%" y="543.50"></text></g><g><title>dkn-compute`libp2p_gossipsub::behaviour::Behaviour&lt;D,F&gt;::forward_msg (4 samples, 0.01%)</title><rect x="19.0945%" y="533" width="0.0110%" height="15" fill="rgb(216,46,15)" fg:x="6967" fg:w="4"/><text x="19.3445%" y="543.50"></text></g><g><title>dkn-compute`libp2p_swarm::behaviour::ToSwarm&lt;TOutEvent,TInEventOld&gt;::map_in (17 samples, 0.05%)</title><rect x="19.1246%" y="533" width="0.0466%" height="15" fill="rgb(250,74,19)" fg:x="6978" fg:w="17"/><text x="19.3746%" y="543.50"></text></g><g><title>dkn-compute`libp2p_swarm::connection::pool::Pool&lt;THandler&gt;::add_outgoing (4 samples, 0.01%)</title><rect x="19.1794%" y="533" width="0.0110%" height="15" fill="rgb(249,42,33)" fg:x="6998" fg:w="4"/><text x="19.4294%" y="543.50"></text></g><g><title>dkn-compute`libp2p_swarm::connection::pool::Pool&lt;THandler&gt;::iter_established_connections_of_peer (97 samples, 0.27%)</title><rect x="19.1904%" y="533" width="0.2658%" height="15" fill="rgb(242,149,17)" fg:x="7002" fg:w="97"/><text x="19.4404%" y="543.50"></text></g><g><title>dkn-compute`futures_channel::mpsc::Receiver&lt;T&gt;::next_message (10 samples, 0.03%)</title><rect x="19.5659%" y="501" width="0.0274%" height="15" fill="rgb(244,29,21)" fg:x="7139" fg:w="10"/><text x="19.8159%" y="511.50"></text></g><g><title>dkn-compute`futures_channel::mpsc::queue::Queue&lt;T&gt;::pop_spin (5 samples, 0.01%)</title><rect x="19.5796%" y="485" width="0.0137%" height="15" fill="rgb(220,130,37)" fg:x="7144" fg:w="5"/><text x="19.8296%" y="495.50"></text></g><g><title>dkn-compute`&lt;futures_channel::mpsc::Receiver&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (14 samples, 0.04%)</title><rect x="19.5659%" y="517" width="0.0384%" height="15" fill="rgb(211,67,2)" fg:x="7139" fg:w="14"/><text x="19.8159%" y="527.50"></text></g><g><title>dkn-compute`&lt;futures_util::stream::futures_unordered::FuturesUnordered&lt;Fut&gt; as futures_core::stream::Stream&gt;::poll_next (9 samples, 0.02%)</title><rect x="19.6042%" y="517" width="0.0247%" height="15" fill="rgb(235,68,52)" fg:x="7153" fg:w="9"/><text x="19.8542%" y="527.50"></text></g><g><title>dkn-compute`alloc::sync::Arc&lt;T,A&gt;::drop_slow (4 samples, 0.01%)</title><rect x="19.8372%" y="485" width="0.0110%" height="15" fill="rgb(246,142,3)" fg:x="7238" fg:w="4"/><text x="20.0872%" y="495.50"></text></g><g><title>dkn-compute`futures_core::task::__internal::atomic_waker::AtomicWaker::register (27 samples, 0.07%)</title><rect x="19.8536%" y="485" width="0.0740%" height="15" fill="rgb(241,25,7)" fg:x="7244" fg:w="27"/><text x="20.1036%" y="495.50"></text></g><g><title>dkn-compute`alloc::sync::Arc&lt;T,A&gt;::drop_slow (5 samples, 0.01%)</title><rect x="19.9660%" y="469" width="0.0137%" height="15" fill="rgb(242,119,39)" fg:x="7285" fg:w="5"/><text x="20.2160%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (23 samples, 0.06%)</title><rect x="19.9797%" y="469" width="0.0630%" height="15" fill="rgb(241,98,45)" fg:x="7290" fg:w="23"/><text x="20.2297%" y="479.50"></text></g><g><title>dkn-compute`futures_util::stream::futures_unordered::FuturesUnordered&lt;Fut&gt;::release_task (43 samples, 0.12%)</title><rect x="19.9276%" y="485" width="0.1179%" height="15" fill="rgb(254,28,30)" fg:x="7271" fg:w="43"/><text x="20.1776%" y="495.50"></text></g><g><title>dkn-compute`DYLD-STUB$$free (10 samples, 0.03%)</title><rect x="20.1496%" y="453" width="0.0274%" height="15" fill="rgb(241,142,54)" fg:x="7352" fg:w="10"/><text x="20.3996%" y="463.50"></text></g><g><title>dkn-compute`__rdl_dealloc (14 samples, 0.04%)</title><rect x="20.3552%" y="437" width="0.0384%" height="15" fill="rgb(222,85,15)" fg:x="7427" fg:w="14"/><text x="20.6052%" y="447.50"></text></g><g><title>libsystem_kernel.dylib`__ulock_wake (5 samples, 0.01%)</title><rect x="20.3936%" y="437" width="0.0137%" height="15" fill="rgb(210,85,47)" fg:x="7441" fg:w="5"/><text x="20.6436%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (4 samples, 0.01%)</title><rect x="20.4155%" y="437" width="0.0110%" height="15" fill="rgb(224,206,25)" fg:x="7449" fg:w="4"/><text x="20.6655%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`_szone_free (18 samples, 0.05%)</title><rect x="20.4265%" y="437" width="0.0493%" height="15" fill="rgb(243,201,19)" fg:x="7453" fg:w="18"/><text x="20.6765%" y="447.50"></text></g><g><title>libsystem_kernel.dylib`__ulock_wait (11 samples, 0.03%)</title><rect x="20.5635%" y="421" width="0.0301%" height="15" fill="rgb(236,59,4)" fg:x="7503" fg:w="11"/><text x="20.8135%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (4 samples, 0.01%)</title><rect x="20.5991%" y="421" width="0.0110%" height="15" fill="rgb(254,179,45)" fg:x="7516" fg:w="4"/><text x="20.8491%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (35 samples, 0.10%)</title><rect x="20.7060%" y="405" width="0.0959%" height="15" fill="rgb(226,14,10)" fg:x="7555" fg:w="35"/><text x="20.9560%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (83 samples, 0.23%)</title><rect x="20.6101%" y="421" width="0.2275%" height="15" fill="rgb(244,27,41)" fg:x="7520" fg:w="83"/><text x="20.8601%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (13 samples, 0.04%)</title><rect x="20.8019%" y="405" width="0.0356%" height="15" fill="rgb(235,35,32)" fg:x="7590" fg:w="13"/><text x="21.0519%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (133 samples, 0.36%)</title><rect x="20.4758%" y="437" width="0.3645%" height="15" fill="rgb(218,68,31)" fg:x="7471" fg:w="133"/><text x="20.7258%" y="447.50"></text></g><g><title>dkn-compute`futures_channel::mpsc::queue::Queue&lt;T&gt;::pop_spin (251 samples, 0.69%)</title><rect x="20.1798%" y="453" width="0.6879%" height="15" fill="rgb(207,120,37)" fg:x="7363" fg:w="251"/><text x="20.4298%" y="463.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (10 samples, 0.03%)</title><rect x="20.8403%" y="437" width="0.0274%" height="15" fill="rgb(227,98,0)" fg:x="7604" fg:w="10"/><text x="21.0903%" y="447.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvsignal (68 samples, 0.19%)</title><rect x="20.9033%" y="389" width="0.1864%" height="15" fill="rgb(207,7,3)" fg:x="7627" fg:w="68"/><text x="21.1533%" y="399.50"></text></g><g><title>dkn-compute`parking_lot::condvar::Condvar::notify_one_slow (82 samples, 0.22%)</title><rect x="20.8787%" y="405" width="0.2247%" height="15" fill="rgb(206,98,19)" fg:x="7618" fg:w="82"/><text x="21.1287%" y="415.50"></text></g><g><title>dkn-compute`tokio::runtime::driver::Handle::unpark (10 samples, 0.03%)</title><rect x="21.1034%" y="405" width="0.0274%" height="15" fill="rgb(217,5,26)" fg:x="7700" fg:w="10"/><text x="21.3534%" y="415.50"></text></g><g><title>libsystem_kernel.dylib`kevent (10 samples, 0.03%)</title><rect x="21.1034%" y="389" width="0.0274%" height="15" fill="rgb(235,190,38)" fg:x="7700" fg:w="10"/><text x="21.3534%" y="399.50"></text></g><g><title>dkn-compute`tokio::runtime::context::with_scheduler (107 samples, 0.29%)</title><rect x="20.8732%" y="421" width="0.2933%" height="15" fill="rgb(247,86,24)" fg:x="7616" fg:w="107"/><text x="21.1232%" y="431.50"></text></g><g><title>dkn-compute`tokio::runtime::scheduler::multi_thread::worker::_&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::push_remote_task (7 samples, 0.02%)</title><rect x="21.1473%" y="405" width="0.0192%" height="15" fill="rgb(205,101,16)" fg:x="7716" fg:w="7"/><text x="21.3973%" y="415.50"></text></g><g><title>dkn-compute`tokio::runtime::scheduler::multi_thread::worker::_&lt;impl tokio::runtime::task::Schedule for alloc::sync::Arc&lt;tokio::runtime::scheduler::multi_thread::handle::Handle&gt;&gt;::schedule (111 samples, 0.30%)</title><rect x="20.8704%" y="437" width="0.3042%" height="15" fill="rgb(246,168,33)" fg:x="7615" fg:w="111"/><text x="21.1204%" y="447.50"></text></g><g><title>dkn-compute`tokio::runtime::task::waker::wake_by_val (112 samples, 0.31%)</title><rect x="20.8704%" y="453" width="0.3070%" height="15" fill="rgb(231,114,1)" fg:x="7615" fg:w="112"/><text x="21.1204%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (6 samples, 0.02%)</title><rect x="21.1774%" y="453" width="0.0164%" height="15" fill="rgb(207,184,53)" fg:x="7727" fg:w="6"/><text x="21.4274%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`free (15 samples, 0.04%)</title><rect x="21.1993%" y="453" width="0.0411%" height="15" fill="rgb(224,95,51)" fg:x="7735" fg:w="15"/><text x="21.4493%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`szone_try_free_default (7 samples, 0.02%)</title><rect x="21.2459%" y="453" width="0.0192%" height="15" fill="rgb(212,188,45)" fg:x="7752" fg:w="7"/><text x="21.4959%" y="463.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (35 samples, 0.10%)</title><rect x="21.2651%" y="453" width="0.0959%" height="15" fill="rgb(223,154,38)" fg:x="7759" fg:w="35"/><text x="21.5151%" y="463.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_unlock_slow (6 samples, 0.02%)</title><rect x="21.3665%" y="453" width="0.0164%" height="15" fill="rgb(251,22,52)" fg:x="7796" fg:w="6"/><text x="21.6165%" y="463.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_mutexdrop (6 samples, 0.02%)</title><rect x="21.3665%" y="437" width="0.0164%" height="15" fill="rgb(229,209,22)" fg:x="7796" fg:w="6"/><text x="21.6165%" y="447.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_lock (4 samples, 0.01%)</title><rect x="21.3830%" y="453" width="0.0110%" height="15" fill="rgb(234,138,34)" fg:x="7802" fg:w="4"/><text x="21.6330%" y="463.50"></text></g><g><title>dkn-compute`futures_channel::mpsc::Receiver&lt;T&gt;::next_message (476 samples, 1.30%)</title><rect x="20.0921%" y="469" width="1.3046%" height="15" fill="rgb(212,95,11)" fg:x="7331" fg:w="476"/><text x="20.3421%" y="479.50"></text></g><g><title>dkn-compute`futures_channel::mpsc::queue::Queue&lt;T&gt;::pop_spin (4 samples, 0.01%)</title><rect x="21.3967%" y="469" width="0.0110%" height="15" fill="rgb(240,179,47)" fg:x="7807" fg:w="4"/><text x="21.6467%" y="479.50"></text></g><g><title>dkn-compute`futures_util::stream::stream::StreamExt::poll_next_unpin (519 samples, 1.42%)</title><rect x="20.0455%" y="485" width="1.4224%" height="15" fill="rgb(240,163,11)" fg:x="7314" fg:w="519"/><text x="20.2955%" y="495.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (18 samples, 0.05%)</title><rect x="21.4186%" y="469" width="0.0493%" height="15" fill="rgb(236,37,12)" fg:x="7815" fg:w="18"/><text x="21.6686%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`free (11 samples, 0.03%)</title><rect x="21.4761%" y="485" width="0.0301%" height="15" fill="rgb(232,164,16)" fg:x="7836" fg:w="11"/><text x="21.7261%" y="495.50"></text></g><g><title>dkn-compute`&lt;futures_util::stream::futures_unordered::FuturesUnordered&lt;Fut&gt; as futures_core::stream::Stream&gt;::poll_next (692 samples, 1.90%)</title><rect x="19.6591%" y="501" width="1.8966%" height="15" fill="rgb(244,205,15)" fg:x="7173" fg:w="692"/><text x="19.9091%" y="511.50">d..</text></g><g><title>libsystem_platform.dylib`_platform_memmove (18 samples, 0.05%)</title><rect x="21.5063%" y="485" width="0.0493%" height="15" fill="rgb(223,117,47)" fg:x="7847" fg:w="18"/><text x="21.7563%" y="495.50"></text></g><g><title>dkn-compute`futures_util::stream::futures_unordered::FuturesUnordered&lt;Fut&gt;::push (17 samples, 0.05%)</title><rect x="21.5638%" y="501" width="0.0466%" height="15" fill="rgb(244,107,35)" fg:x="7868" fg:w="17"/><text x="21.8138%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (6 samples, 0.02%)</title><rect x="21.6132%" y="501" width="0.0164%" height="15" fill="rgb(205,140,8)" fg:x="7886" fg:w="6"/><text x="21.8632%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (24 samples, 0.07%)</title><rect x="21.6324%" y="501" width="0.0658%" height="15" fill="rgb(228,84,46)" fg:x="7893" fg:w="24"/><text x="21.8824%" y="511.50"></text></g><g><title>dkn-compute`&lt;futures_util::stream::select_all::SelectAll&lt;St&gt; as futures_core::stream::Stream&gt;::poll_next (776 samples, 2.13%)</title><rect x="19.6289%" y="517" width="2.1268%" height="15" fill="rgb(254,188,9)" fg:x="7162" fg:w="776"/><text x="19.8789%" y="527.50">d..</text></g><g><title>libsystem_platform.dylib`_platform_memmove (21 samples, 0.06%)</title><rect x="21.6981%" y="501" width="0.0576%" height="15" fill="rgb(206,112,54)" fg:x="7917" fg:w="21"/><text x="21.9481%" y="511.50"></text></g><g><title>dkn-compute`core::ptr::drop_in_place&lt;tracing::span::Span&gt; (7 samples, 0.02%)</title><rect x="21.7612%" y="517" width="0.0192%" height="15" fill="rgb(216,84,49)" fg:x="7940" fg:w="7"/><text x="22.0112%" y="527.50"></text></g><g><title>dkn-compute`tracing::span::Span::log (23 samples, 0.06%)</title><rect x="21.7913%" y="517" width="0.0630%" height="15" fill="rgb(214,194,35)" fg:x="7951" fg:w="23"/><text x="22.0413%" y="527.50"></text></g><g><title>dkn-compute`tracing::span::Span::record_all (12 samples, 0.03%)</title><rect x="21.8544%" y="517" width="0.0329%" height="15" fill="rgb(249,28,3)" fg:x="7974" fg:w="12"/><text x="22.1044%" y="527.50"></text></g><g><title>dkn-compute`tracing::span::Span::log (4 samples, 0.01%)</title><rect x="21.8763%" y="501" width="0.0110%" height="15" fill="rgb(222,56,52)" fg:x="7982" fg:w="4"/><text x="22.1263%" y="511.50"></text></g><g><title>dkn-compute`tracing_core::span::Record::is_empty (4 samples, 0.01%)</title><rect x="21.8872%" y="517" width="0.0110%" height="15" fill="rgb(245,217,50)" fg:x="7986" fg:w="4"/><text x="22.1372%" y="527.50"></text></g><g><title>dkn-compute`libp2p_swarm::connection::pool::Pool&lt;THandler&gt;::poll (921 samples, 2.52%)</title><rect x="19.4562%" y="533" width="2.5242%" height="15" fill="rgb(213,201,24)" fg:x="7099" fg:w="921"/><text x="19.7062%" y="543.50">dk..</text></g><g><title>libsystem_platform.dylib`_platform_memmove (30 samples, 0.08%)</title><rect x="21.8982%" y="517" width="0.0822%" height="15" fill="rgb(248,116,28)" fg:x="7990" fg:w="30"/><text x="22.1482%" y="527.50"></text></g><g><title>dkn-compute`tracing::span::Span::log (21 samples, 0.06%)</title><rect x="21.9887%" y="533" width="0.0576%" height="15" fill="rgb(219,72,43)" fg:x="8023" fg:w="21"/><text x="22.2387%" y="543.50"></text></g><g><title>dkn-compute`tracing::span::Span::record_all (8 samples, 0.02%)</title><rect x="22.0462%" y="533" width="0.0219%" height="15" fill="rgb(209,138,14)" fg:x="8044" fg:w="8"/><text x="22.2962%" y="543.50"></text></g><g><title>dkn-compute`tracing::span::Span::log (7 samples, 0.02%)</title><rect x="22.0489%" y="517" width="0.0192%" height="15" fill="rgb(222,18,33)" fg:x="8045" fg:w="7"/><text x="22.2989%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (15 samples, 0.04%)</title><rect x="22.0901%" y="533" width="0.0411%" height="15" fill="rgb(213,199,7)" fg:x="8060" fg:w="15"/><text x="22.3401%" y="543.50"></text></g><g><title>libsystem_malloc.dylib`_szone_free (11 samples, 0.03%)</title><rect x="22.1312%" y="533" width="0.0301%" height="15" fill="rgb(250,110,10)" fg:x="8075" fg:w="11"/><text x="22.3812%" y="543.50"></text></g><g><title>libsystem_malloc.dylib`free (51 samples, 0.14%)</title><rect x="22.1613%" y="533" width="0.1398%" height="15" fill="rgb(248,123,6)" fg:x="8086" fg:w="51"/><text x="22.4113%" y="543.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (69 samples, 0.19%)</title><rect x="22.3093%" y="533" width="0.1891%" height="15" fill="rgb(206,91,31)" fg:x="8140" fg:w="69"/><text x="22.5593%" y="543.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (16 samples, 0.04%)</title><rect x="22.4984%" y="533" width="0.0439%" height="15" fill="rgb(211,154,13)" fg:x="8209" fg:w="16"/><text x="22.7484%" y="543.50"></text></g><g><title>dkn-compute`libp2p_swarm::Swarm&lt;TBehaviour&gt;::poll_next_event (7,554 samples, 20.70%)</title><rect x="1.8801%" y="549" width="20.7033%" height="15" fill="rgb(225,148,7)" fg:x="686" fg:w="7554"/><text x="2.1301%" y="559.50">dkn-compute`libp2p_swarm::Swarm&lt;T..</text></g><g><title>libsystem_platform.dylib`_platform_memmove (15 samples, 0.04%)</title><rect x="22.5423%" y="533" width="0.0411%" height="15" fill="rgb(220,160,43)" fg:x="8225" fg:w="15"/><text x="22.7923%" y="543.50"></text></g><g><title>dkn-compute`libp2p_swarm::connection::pool::Pool&lt;THandler&gt;::poll (5 samples, 0.01%)</title><rect x="22.5889%" y="549" width="0.0137%" height="15" fill="rgb(213,52,39)" fg:x="8242" fg:w="5"/><text x="22.8389%" y="559.50"></text></g><g><title>dkn-compute`tokio::macros::support::thread_rng_n (4 samples, 0.01%)</title><rect x="22.6053%" y="549" width="0.0110%" height="15" fill="rgb(243,137,7)" fg:x="8248" fg:w="4"/><text x="22.8553%" y="559.50"></text></g><g><title>dkn-compute`tokio::signal::make_future::_{{closure}} (12 samples, 0.03%)</title><rect x="22.6327%" y="517" width="0.0329%" height="15" fill="rgb(230,79,13)" fg:x="8258" fg:w="12"/><text x="22.8827%" y="527.50"></text></g><g><title>dkn-compute`tokio::sync::notify::Notified::poll_notified (5 samples, 0.01%)</title><rect x="22.6519%" y="501" width="0.0137%" height="15" fill="rgb(247,105,23)" fg:x="8265" fg:w="5"/><text x="22.9019%" y="511.50"></text></g><g><title>dkn-compute`tokio::signal::RxFuture::poll_recv (14 samples, 0.04%)</title><rect x="22.6300%" y="533" width="0.0384%" height="15" fill="rgb(223,179,41)" fg:x="8257" fg:w="14"/><text x="22.8800%" y="543.50"></text></g><g><title>dkn-compute`tokio::signal::unix::Signal::recv::_{{closure}} (21 samples, 0.06%)</title><rect x="22.6218%" y="549" width="0.0576%" height="15" fill="rgb(218,9,34)" fg:x="8254" fg:w="21"/><text x="22.8718%" y="559.50"></text></g><g><title>dkn-compute`tokio::signal::make_future::_{{closure}} (4 samples, 0.01%)</title><rect x="22.6683%" y="533" width="0.0110%" height="15" fill="rgb(222,106,8)" fg:x="8271" fg:w="4"/><text x="22.9183%" y="543.50"></text></g><g><title>dkn-compute`std::sys::pal::unix::time::Timespec::now (11 samples, 0.03%)</title><rect x="22.6848%" y="533" width="0.0301%" height="15" fill="rgb(211,220,0)" fg:x="8277" fg:w="11"/><text x="22.9348%" y="543.50"></text></g><g><title>libsystem_c.dylib`clock_gettime (10 samples, 0.03%)</title><rect x="22.6875%" y="517" width="0.0274%" height="15" fill="rgb(229,52,16)" fg:x="8278" fg:w="10"/><text x="22.9375%" y="527.50"></text></g><g><title>dkn-compute`tokio::time::instant::Instant::elapsed (14 samples, 0.04%)</title><rect x="22.6821%" y="549" width="0.0384%" height="15" fill="rgb(212,155,18)" fg:x="8276" fg:w="14"/><text x="22.9321%" y="559.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (4 samples, 0.01%)</title><rect x="22.7314%" y="549" width="0.0110%" height="15" fill="rgb(242,21,14)" fg:x="8294" fg:w="4"/><text x="22.9814%" y="559.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (4 samples, 0.01%)</title><rect x="22.7423%" y="549" width="0.0110%" height="15" fill="rgb(222,19,48)" fg:x="8298" fg:w="4"/><text x="22.9923%" y="559.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (7 samples, 0.02%)</title><rect x="22.7588%" y="549" width="0.0192%" height="15" fill="rgb(232,45,27)" fg:x="8304" fg:w="7"/><text x="23.0088%" y="559.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (17 samples, 0.05%)</title><rect x="22.7780%" y="549" width="0.0466%" height="15" fill="rgb(249,103,42)" fg:x="8311" fg:w="17"/><text x="23.0280%" y="559.50"></text></g><g><title>dkn-compute`&lt;tokio::future::poll_fn::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (7,719 samples, 21.16%)</title><rect x="1.6718%" y="565" width="21.1555%" height="15" fill="rgb(246,81,33)" fg:x="610" fg:w="7719"/><text x="1.9218%" y="575.50">dkn-compute`&lt;tokio::future::poll_..</text></g><g><title>Security`SecTrustCopyPublicKey (4 samples, 0.01%)</title><rect x="22.8383%" y="245" width="0.0110%" height="15" fill="rgb(252,33,42)" fg:x="8333" fg:w="4"/><text x="23.0883%" y="255.50"></text></g><g><title>Security`SecCertificateCopyPublicKey$LEGACYMAC (4 samples, 0.01%)</title><rect x="22.8383%" y="229" width="0.0110%" height="15" fill="rgb(209,212,41)" fg:x="8333" fg:w="4"/><text x="23.0883%" y="239.50"></text></g><g><title>Security`Security::KeychainCore::Certificate::publicKey (4 samples, 0.01%)</title><rect x="22.8383%" y="213" width="0.0110%" height="15" fill="rgb(207,154,6)" fg:x="8333" fg:w="4"/><text x="23.0883%" y="223.50"></text></g><g><title>Security`Security::KeychainCore::Certificate::copyFirstFieldValue (4 samples, 0.01%)</title><rect x="22.8383%" y="197" width="0.0110%" height="15" fill="rgb(223,64,47)" fg:x="8333" fg:w="4"/><text x="23.0883%" y="207.50"></text></g><g><title>Security`Security::KeychainCore::Certificate::clHandle (4 samples, 0.01%)</title><rect x="22.8383%" y="181" width="0.0110%" height="15" fill="rgb(211,161,38)" fg:x="8333" fg:w="4"/><text x="23.0883%" y="191.50"></text></g><g><title>Security`Security::CssmClient::AttachmentImpl::activate (4 samples, 0.01%)</title><rect x="22.8383%" y="165" width="0.0110%" height="15" fill="rgb(219,138,40)" fg:x="8333" fg:w="4"/><text x="23.0883%" y="175.50"></text></g><g><title>Security`Security::CssmClient::ModuleImpl::activate (4 samples, 0.01%)</title><rect x="22.8383%" y="149" width="0.0110%" height="15" fill="rgb(241,228,46)" fg:x="8333" fg:w="4"/><text x="23.0883%" y="159.50"></text></g><g><title>Security`CSSM_ModuleLoad (4 samples, 0.01%)</title><rect x="22.8383%" y="133" width="0.0110%" height="15" fill="rgb(223,209,38)" fg:x="8333" fg:w="4"/><text x="23.0883%" y="143.50"></text></g><g><title>Security`Security::CssmClient::Table&lt;Security::MDSClient::Common&gt;::fetch (4 samples, 0.01%)</title><rect x="22.8383%" y="117" width="0.0110%" height="15" fill="rgb(236,164,45)" fg:x="8333" fg:w="4"/><text x="23.0883%" y="127.50"></text></g><g><title>Security`Security::CssmClient::Table&lt;Security::MDSClient::Common&gt;::startQuery (4 samples, 0.01%)</title><rect x="22.8383%" y="101" width="0.0110%" height="15" fill="rgb(231,15,5)" fg:x="8333" fg:w="4"/><text x="23.0883%" y="111.50"></text></g><g><title>Security`Security::MDSClient::Directory::dlGetFirst (4 samples, 0.01%)</title><rect x="22.8383%" y="85" width="0.0110%" height="15" fill="rgb(252,35,15)" fg:x="8333" fg:w="4"/><text x="23.0883%" y="95.50"></text></g><g><title>Security`Security::MDSClient::Directory::cdsa (4 samples, 0.01%)</title><rect x="22.8383%" y="69" width="0.0110%" height="15" fill="rgb(248,181,18)" fg:x="8333" fg:w="4"/><text x="23.0883%" y="79.50"></text></g><g><title>Security`mds_DbOpen(long, char const*, cssm_net_address const*, unsigned int, cssm_access_credentials const*, void const*, long*) (4 samples, 0.01%)</title><rect x="22.8383%" y="53" width="0.0110%" height="15" fill="rgb(233,39,42)" fg:x="8333" fg:w="4"/><text x="23.0883%" y="63.50"></text></g><g><title>Security`Security::MDSSession::DbOpen (4 samples, 0.01%)</title><rect x="22.8383%" y="37" width="0.0110%" height="15" fill="rgb(238,110,33)" fg:x="8333" fg:w="4"/><text x="23.0883%" y="47.50"></text></g><g><title>Security`SSLHandshake (6 samples, 0.02%)</title><rect x="22.8355%" y="341" width="0.0164%" height="15" fill="rgb(233,195,10)" fg:x="8332" fg:w="6"/><text x="23.0855%" y="351.50"></text></g><g><title>Security`SSLHandshakeProceed (6 samples, 0.02%)</title><rect x="22.8355%" y="325" width="0.0164%" height="15" fill="rgb(254,105,3)" fg:x="8332" fg:w="6"/><text x="23.0855%" y="335.50"></text></g><g><title>libcoretls.dylib`tls_handshake_process (5 samples, 0.01%)</title><rect x="22.8383%" y="309" width="0.0137%" height="15" fill="rgb(221,225,9)" fg:x="8333" fg:w="5"/><text x="23.0883%" y="319.50"></text></g><g><title>libcoretls.dylib`SSLProcessHandshakeRecordInner (5 samples, 0.01%)</title><rect x="22.8383%" y="293" width="0.0137%" height="15" fill="rgb(224,227,45)" fg:x="8333" fg:w="5"/><text x="23.0883%" y="303.50"></text></g><g><title>Security`tls_handshake_message_callback (5 samples, 0.01%)</title><rect x="22.8383%" y="277" width="0.0137%" height="15" fill="rgb(229,198,43)" fg:x="8333" fg:w="5"/><text x="23.0883%" y="287.50"></text></g><g><title>libcoretls_cfhelpers.dylib`tls_helper_set_peer_pubkey (5 samples, 0.01%)</title><rect x="22.8383%" y="261" width="0.0137%" height="15" fill="rgb(206,209,35)" fg:x="8333" fg:w="5"/><text x="23.0883%" y="271.50"></text></g><g><title>dkn-compute`&lt;tokio_native_tls::MidHandshake&lt;S&gt; as core::future::future::Future&gt;::poll (7 samples, 0.02%)</title><rect x="22.8355%" y="389" width="0.0192%" height="15" fill="rgb(245,195,53)" fg:x="8332" fg:w="7"/><text x="23.0855%" y="399.50"></text></g><g><title>dkn-compute`native_tls::imp::MidHandshakeTlsStream&lt;S&gt;::handshake (7 samples, 0.02%)</title><rect x="22.8355%" y="373" width="0.0192%" height="15" fill="rgb(240,92,26)" fg:x="8332" fg:w="7"/><text x="23.0855%" y="383.50"></text></g><g><title>dkn-compute`security_framework::secure_transport::MidHandshakeClientBuilder&lt;S&gt;::handshake (7 samples, 0.02%)</title><rect x="22.8355%" y="357" width="0.0192%" height="15" fill="rgb(207,40,23)" fg:x="8332" fg:w="7"/><text x="23.0855%" y="367.50"></text></g><g><title>dkn-compute`&lt;reqwest::async_impl::client::PendingRequest as core::future::future::Future&gt;::poll (8 samples, 0.02%)</title><rect x="22.8355%" y="549" width="0.0219%" height="15" fill="rgb(223,111,35)" fg:x="8332" fg:w="8"/><text x="23.0855%" y="559.50"></text></g><g><title>dkn-compute`hyper_util::client::legacy::client::Client&lt;C,B&gt;::send_request::_{{closure}} (8 samples, 0.02%)</title><rect x="22.8355%" y="533" width="0.0219%" height="15" fill="rgb(229,147,28)" fg:x="8332" fg:w="8"/><text x="23.0855%" y="543.50"></text></g><g><title>dkn-compute`&lt;futures_util::future::select::Select&lt;A,B&gt; as core::future::future::Future&gt;::poll (8 samples, 0.02%)</title><rect x="22.8355%" y="517" width="0.0219%" height="15" fill="rgb(211,29,28)" fg:x="8332" fg:w="8"/><text x="23.0855%" y="527.50"></text></g><g><title>dkn-compute`&lt;futures_util::future::try_future::try_flatten::TryFlatten&lt;Fut,&lt;Fut as futures_core::future::TryFuture&gt;::Ok&gt; as core::future::future::Future&gt;::poll (8 samples, 0.02%)</title><rect x="22.8355%" y="501" width="0.0219%" height="15" fill="rgb(228,72,33)" fg:x="8332" fg:w="8"/><text x="23.0855%" y="511.50"></text></g><g><title>dkn-compute`&lt;futures_util::future::future::map::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (8 samples, 0.02%)</title><rect x="22.8355%" y="485" width="0.0219%" height="15" fill="rgb(205,214,31)" fg:x="8332" fg:w="8"/><text x="23.0855%" y="495.50"></text></g><g><title>dkn-compute`&lt;futures_util::future::future::map::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (8 samples, 0.02%)</title><rect x="22.8355%" y="469" width="0.0219%" height="15" fill="rgb(224,111,15)" fg:x="8332" fg:w="8"/><text x="23.0855%" y="479.50"></text></g><g><title>dkn-compute`&lt;tower::util::oneshot::Oneshot&lt;S,Req&gt; as core::future::future::Future&gt;::poll (8 samples, 0.02%)</title><rect x="22.8355%" y="453" width="0.0219%" height="15" fill="rgb(253,21,26)" fg:x="8332" fg:w="8"/><text x="23.0855%" y="463.50"></text></g><g><title>dkn-compute`reqwest::connect::with_timeout::_{{closure}} (8 samples, 0.02%)</title><rect x="22.8355%" y="437" width="0.0219%" height="15" fill="rgb(245,139,43)" fg:x="8332" fg:w="8"/><text x="23.0855%" y="447.50"></text></g><g><title>dkn-compute`reqwest::connect::Connector::connect_with_maybe_proxy::_{{closure}} (8 samples, 0.02%)</title><rect x="22.8355%" y="421" width="0.0219%" height="15" fill="rgb(252,170,7)" fg:x="8332" fg:w="8"/><text x="23.0855%" y="431.50"></text></g><g><title>dkn-compute`&lt;hyper_tls::client::HttpsConnector&lt;T&gt; as tower_service::Service&lt;http::uri::Uri&gt;&gt;::call::_{{closure}} (8 samples, 0.02%)</title><rect x="22.8355%" y="405" width="0.0219%" height="15" fill="rgb(231,118,14)" fg:x="8332" fg:w="8"/><text x="23.0855%" y="415.50"></text></g><g><title>dkn-compute`dkn_compute::p2p::available_nodes::AvailableNodes::get_available_nodes::_{{closure}} (11 samples, 0.03%)</title><rect x="22.8355%" y="565" width="0.0301%" height="15" fill="rgb(238,83,0)" fg:x="8332" fg:w="11"/><text x="23.0855%" y="575.50"></text></g><g><title>dkn-compute`dkn_compute::p2p::client::P2PClient::new (7 samples, 0.02%)</title><rect x="22.8657%" y="565" width="0.0192%" height="15" fill="rgb(221,39,39)" fg:x="8343" fg:w="7"/><text x="23.1157%" y="575.50"></text></g><g><title>libsystem_malloc.dylib`free (4 samples, 0.01%)</title><rect x="22.9123%" y="565" width="0.0110%" height="15" fill="rgb(222,119,46)" fg:x="8360" fg:w="4"/><text x="23.1623%" y="575.50"></text></g><g><title>dkn-compute`dkn_compute::main::_{{closure}} (7,774 samples, 21.31%)</title><rect x="1.6362%" y="581" width="21.3062%" height="15" fill="rgb(222,165,49)" fg:x="597" fg:w="7774"/><text x="1.8862%" y="591.50">dkn-compute`dkn_compute::main::_{{..</text></g><g><title>libsystem_platform.dylib`_platform_memmove (7 samples, 0.02%)</title><rect x="22.9232%" y="565" width="0.0192%" height="15" fill="rgb(219,113,52)" fg:x="8364" fg:w="7"/><text x="23.1732%" y="575.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvwait (422 samples, 1.16%)</title><rect x="23.0164%" y="549" width="1.1566%" height="15" fill="rgb(214,7,15)" fg:x="8398" fg:w="422"/><text x="23.2664%" y="559.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_cond_wait (25 samples, 0.07%)</title><rect x="24.1730%" y="549" width="0.0685%" height="15" fill="rgb(235,32,4)" fg:x="8820" fg:w="25"/><text x="24.4230%" y="559.50"></text></g><g><title>libsystem_pthread.dylib`pthread_testcancel (6 samples, 0.02%)</title><rect x="24.2251%" y="533" width="0.0164%" height="15" fill="rgb(238,90,54)" fg:x="8839" fg:w="6"/><text x="24.4751%" y="543.50"></text></g><g><title>dkn-compute`parking_lot::condvar::Condvar::wait_until_internal (467 samples, 1.28%)</title><rect x="22.9643%" y="565" width="1.2799%" height="15" fill="rgb(213,208,19)" fg:x="8379" fg:w="467"/><text x="23.2143%" y="575.50"></text></g><g><title>dkn-compute`tokio::runtime::park::Inner::park (476 samples, 1.30%)</title><rect x="22.9424%" y="581" width="1.3046%" height="15" fill="rgb(233,156,4)" fg:x="8371" fg:w="476"/><text x="23.1924%" y="591.50"></text></g><g><title>dkn-compute`tokio::runtime::park::CachedParkThread::block_on (8,266 samples, 22.65%)</title><rect x="1.6033%" y="597" width="22.6546%" height="15" fill="rgb(207,194,5)" fg:x="585" fg:w="8266"/><text x="1.8533%" y="607.50">dkn-compute`tokio::runtime::park::Ca..</text></g><g><title>libdyld.dylib`tlv_get_addr (4 samples, 0.01%)</title><rect x="24.2470%" y="581" width="0.0110%" height="15" fill="rgb(206,111,30)" fg:x="8847" fg:w="4"/><text x="24.4970%" y="591.50"></text></g><g><title>dyld`start (8,275 samples, 22.68%)</title><rect x="1.6006%" y="725" width="22.6793%" height="15" fill="rgb(243,70,54)" fg:x="584" fg:w="8275"/><text x="1.8506%" y="735.50">dyld`start</text></g><g><title>dkn-compute`main (8,275 samples, 22.68%)</title><rect x="1.6006%" y="709" width="22.6793%" height="15" fill="rgb(242,28,8)" fg:x="584" fg:w="8275"/><text x="1.8506%" y="719.50">dkn-compute`main</text></g><g><title>dkn-compute`std::rt::lang_start_internal (8,275 samples, 22.68%)</title><rect x="1.6006%" y="693" width="22.6793%" height="15" fill="rgb(219,106,18)" fg:x="584" fg:w="8275"/><text x="1.8506%" y="703.50">dkn-compute`std::rt::lang_start_inte..</text></g><g><title>dkn-compute`std::rt::lang_start::_{{closure}} (8,274 samples, 22.68%)</title><rect x="1.6033%" y="677" width="22.6766%" height="15" fill="rgb(244,222,10)" fg:x="585" fg:w="8274"/><text x="1.8533%" y="687.50">dkn-compute`std::rt::lang_start::_{{..</text></g><g><title>dkn-compute`std::sys_common::backtrace::__rust_begin_short_backtrace (8,274 samples, 22.68%)</title><rect x="1.6033%" y="661" width="22.6766%" height="15" fill="rgb(236,179,52)" fg:x="585" fg:w="8274"/><text x="1.8533%" y="671.50">dkn-compute`std::sys_common::backtra..</text></g><g><title>dkn-compute`dkn_compute::main (8,274 samples, 22.68%)</title><rect x="1.6033%" y="645" width="22.6766%" height="15" fill="rgb(213,23,39)" fg:x="585" fg:w="8274"/><text x="1.8533%" y="655.50">dkn-compute`dkn_compute::main</text></g><g><title>dkn-compute`tokio::runtime::runtime::Runtime::block_on (8,274 samples, 22.68%)</title><rect x="1.6033%" y="629" width="22.6766%" height="15" fill="rgb(238,48,10)" fg:x="585" fg:w="8274"/><text x="1.8533%" y="639.50">dkn-compute`tokio::runtime::runtime:..</text></g><g><title>dkn-compute`tokio::runtime::context::runtime::enter_runtime (8,274 samples, 22.68%)</title><rect x="1.6033%" y="613" width="22.6766%" height="15" fill="rgb(251,196,23)" fg:x="585" fg:w="8274"/><text x="1.8533%" y="623.50">dkn-compute`tokio::runtime::context:..</text></g><g><title>libdyld.dylib`tlv_get_addr (8 samples, 0.02%)</title><rect x="24.2580%" y="597" width="0.0219%" height="15" fill="rgb(250,152,24)" fg:x="8851" fg:w="8"/><text x="24.5080%" y="607.50"></text></g><g><title>dkn-compute`alloc::sync::Arc&lt;T,A&gt;::drop_slow (8 samples, 0.02%)</title><rect x="24.2854%" y="613" width="0.0219%" height="15" fill="rgb(209,150,17)" fg:x="8861" fg:w="8"/><text x="24.5354%" y="623.50"></text></g><g><title>dkn-compute`&lt;futures_timer::native::timer::Timer as core::future::future::Future&gt;::poll (21 samples, 0.06%)</title><rect x="24.2826%" y="629" width="0.0576%" height="15" fill="rgb(234,202,34)" fg:x="8860" fg:w="21"/><text x="24.5326%" y="639.50"></text></g><g><title>libdispatch.dylib`_dispatch_semaphore_wait_slow (50 samples, 0.14%)</title><rect x="24.3566%" y="613" width="0.1370%" height="15" fill="rgb(253,148,53)" fg:x="8887" fg:w="50"/><text x="24.6066%" y="623.50"></text></g><g><title>libsystem_kernel.dylib`semaphore_timedwait_trap (49 samples, 0.13%)</title><rect x="24.3594%" y="597" width="0.1343%" height="15" fill="rgb(218,129,16)" fg:x="8888" fg:w="49"/><text x="24.6094%" y="607.50"></text></g><g><title>dkn-compute`std::thread::park_timeout (52 samples, 0.14%)</title><rect x="24.3539%" y="629" width="0.1425%" height="15" fill="rgb(216,85,19)" fg:x="8886" fg:w="52"/><text x="24.6039%" y="639.50"></text></g><g><title>dkn-compute`futures_timer::native::global::run (81 samples, 0.22%)</title><rect x="24.2799%" y="645" width="0.2220%" height="15" fill="rgb(235,228,7)" fg:x="8859" fg:w="81"/><text x="24.5299%" y="655.50"></text></g><g><title>dkn-compute`__floatuntidf (6 samples, 0.02%)</title><rect x="24.5101%" y="549" width="0.0164%" height="15" fill="rgb(245,175,0)" fg:x="8943" fg:w="6"/><text x="24.7601%" y="559.50"></text></g><g><title>dkn-compute`tokio::runtime::scheduler::multi_thread::idle::Idle::transition_worker_to_parked (7 samples, 0.02%)</title><rect x="24.5265%" y="549" width="0.0192%" height="15" fill="rgb(208,168,36)" fg:x="8949" fg:w="7"/><text x="24.7765%" y="559.50"></text></g><g><title>dkn-compute`tokio::runtime::scheduler::multi_thread::queue::Steal&lt;T&gt;::steal_into (7 samples, 0.02%)</title><rect x="24.5512%" y="549" width="0.0192%" height="15" fill="rgb(246,171,24)" fg:x="8958" fg:w="7"/><text x="24.8012%" y="559.50"></text></g><g><title>dkn-compute`&lt;std::time::Instant as core::ops::arith::Sub&gt;::sub (6 samples, 0.02%)</title><rect x="25.1980%" y="533" width="0.0164%" height="15" fill="rgb(215,142,24)" fg:x="9194" fg:w="6"/><text x="25.4480%" y="543.50"></text></g><g><title>dkn-compute`std::sys::pal::unix::time::Timespec::sub_timespec (4 samples, 0.01%)</title><rect x="25.2035%" y="517" width="0.0110%" height="15" fill="rgb(250,187,7)" fg:x="9196" fg:w="4"/><text x="25.4535%" y="527.50"></text></g><g><title>dkn-compute`parking_lot::raw_mutex::RawMutex::lock_slow (8 samples, 0.02%)</title><rect x="25.2227%" y="533" width="0.0219%" height="15" fill="rgb(228,66,33)" fg:x="9203" fg:w="8"/><text x="25.4727%" y="543.50"></text></g><g><title>libsystem_kernel.dylib`swtch_pri (4 samples, 0.01%)</title><rect x="25.2336%" y="517" width="0.0110%" height="15" fill="rgb(234,215,21)" fg:x="9207" fg:w="4"/><text x="25.4836%" y="527.50"></text></g><g><title>libsystem_c.dylib`clock_gettime_nsec_np (13 samples, 0.04%)</title><rect x="25.3762%" y="501" width="0.0356%" height="15" fill="rgb(222,191,20)" fg:x="9259" fg:w="13"/><text x="25.6262%" y="511.50"></text></g><g><title>libsystem_kernel.dylib`mach_timebase_info (8 samples, 0.02%)</title><rect x="25.3899%" y="485" width="0.0219%" height="15" fill="rgb(245,79,54)" fg:x="9264" fg:w="8"/><text x="25.6399%" y="495.50"></text></g><g><title>libsystem_kernel.dylib`mach_absolute_time (17 samples, 0.05%)</title><rect x="25.4118%" y="501" width="0.0466%" height="15" fill="rgb(240,10,37)" fg:x="9272" fg:w="17"/><text x="25.6618%" y="511.50"></text></g><g><title>dkn-compute`std::sys::pal::unix::time::Timespec::now (92 samples, 0.25%)</title><rect x="25.2446%" y="533" width="0.2521%" height="15" fill="rgb(214,192,32)" fg:x="9211" fg:w="92"/><text x="25.4946%" y="543.50"></text></g><g><title>libsystem_c.dylib`clock_gettime (79 samples, 0.22%)</title><rect x="25.2802%" y="517" width="0.2165%" height="15" fill="rgb(209,36,54)" fg:x="9224" fg:w="79"/><text x="25.5302%" y="527.50"></text></g><g><title>libsystem_kernel.dylib`mach_timebase_info (14 samples, 0.04%)</title><rect x="25.4584%" y="501" width="0.0384%" height="15" fill="rgb(220,10,11)" fg:x="9289" fg:w="14"/><text x="25.7084%" y="511.50"></text></g><g><title>dkn-compute`tokio::runtime::scheduler::multi_thread::idle::Idle::transition_worker_to_parked (20 samples, 0.05%)</title><rect x="25.4968%" y="533" width="0.0548%" height="15" fill="rgb(221,106,17)" fg:x="9303" fg:w="20"/><text x="25.7468%" y="543.50"></text></g><g><title>dkn-compute`tokio::runtime::scheduler::multi_thread::idle::Idle::unpark_worker_by_id (7 samples, 0.02%)</title><rect x="25.5516%" y="533" width="0.0192%" height="15" fill="rgb(251,142,44)" fg:x="9323" fg:w="7"/><text x="25.8016%" y="543.50"></text></g><g><title>dkn-compute`tokio::runtime::scheduler::multi_thread::queue::Steal&lt;T&gt;::steal_into (63 samples, 0.17%)</title><rect x="25.5872%" y="533" width="0.1727%" height="15" fill="rgb(238,13,15)" fg:x="9336" fg:w="63"/><text x="25.8372%" y="543.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvsignal (19 samples, 0.05%)</title><rect x="25.8585%" y="501" width="0.0521%" height="15" fill="rgb(208,107,27)" fg:x="9435" fg:w="19"/><text x="26.1085%" y="511.50"></text></g><g><title>dkn-compute`parking_lot::condvar::Condvar::notify_one_slow (22 samples, 0.06%)</title><rect x="25.8530%" y="517" width="0.0603%" height="15" fill="rgb(205,136,37)" fg:x="9433" fg:w="22"/><text x="26.1030%" y="527.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvwait (1,585 samples, 4.34%)</title><rect x="26.2121%" y="485" width="4.3440%" height="15" fill="rgb(250,205,27)" fg:x="9564" fg:w="1585"/><text x="26.4621%" y="495.50">libsy..</text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_droplock (4 samples, 0.01%)</title><rect x="30.6493%" y="469" width="0.0110%" height="15" fill="rgb(210,80,43)" fg:x="11183" fg:w="4"/><text x="30.8993%" y="479.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_lock_slow (9 samples, 0.02%)</title><rect x="30.6602%" y="469" width="0.0247%" height="15" fill="rgb(247,160,36)" fg:x="11187" fg:w="9"/><text x="30.9102%" y="479.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_mutexwait (9 samples, 0.02%)</title><rect x="30.6602%" y="453" width="0.0247%" height="15" fill="rgb(234,13,49)" fg:x="11187" fg:w="9"/><text x="30.9102%" y="463.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_lock (8 samples, 0.02%)</title><rect x="30.6849%" y="469" width="0.0219%" height="15" fill="rgb(234,122,0)" fg:x="11196" fg:w="8"/><text x="30.9349%" y="479.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_cond_wait (76 samples, 0.21%)</title><rect x="30.5561%" y="485" width="0.2083%" height="15" fill="rgb(207,146,38)" fg:x="11149" fg:w="76"/><text x="30.8061%" y="495.50"></text></g><g><title>libsystem_pthread.dylib`pthread_testcancel (21 samples, 0.06%)</title><rect x="30.7068%" y="469" width="0.0576%" height="15" fill="rgb(207,177,25)" fg:x="11204" fg:w="21"/><text x="30.9568%" y="479.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_lock (4 samples, 0.01%)</title><rect x="30.7644%" y="485" width="0.0110%" height="15" fill="rgb(211,178,42)" fg:x="11225" fg:w="4"/><text x="31.0144%" y="495.50"></text></g><g><title>dkn-compute`parking_lot::condvar::Condvar::wait_until_internal (1,720 samples, 4.71%)</title><rect x="26.0805%" y="501" width="4.7140%" height="15" fill="rgb(230,69,54)" fg:x="9516" fg:w="1720"/><text x="26.3305%" y="511.50">dkn-c..</text></g><g><title>libsystem_pthread.dylib`pthread_testcancel (4 samples, 0.01%)</title><rect x="30.7836%" y="485" width="0.0110%" height="15" fill="rgb(214,135,41)" fg:x="11232" fg:w="4"/><text x="31.0336%" y="495.50"></text></g><g><title>dkn-compute`&lt;mio::event::events::Iter as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.01%)</title><rect x="30.9343%" y="485" width="0.0137%" height="15" fill="rgb(237,67,25)" fg:x="11287" fg:w="5"/><text x="31.1843%" y="495.50"></text></g><g><title>dkn-compute`mio::poll::Poll::poll (6 samples, 0.02%)</title><rect x="30.9480%" y="485" width="0.0164%" height="15" fill="rgb(222,189,50)" fg:x="11292" fg:w="6"/><text x="31.1980%" y="495.50"></text></g><g><title>dkn-compute`std::sys::pal::unix::time::Timespec::now (8 samples, 0.02%)</title><rect x="30.9645%" y="485" width="0.0219%" height="15" fill="rgb(245,148,34)" fg:x="11298" fg:w="8"/><text x="31.2145%" y="495.50"></text></g><g><title>dkn-compute`std::time::Instant::now (5 samples, 0.01%)</title><rect x="30.9864%" y="485" width="0.0137%" height="15" fill="rgb(222,29,6)" fg:x="11306" fg:w="5"/><text x="31.2364%" y="495.50"></text></g><g><title>dkn-compute`tokio::process::imp::orphan::OrphanQueueImpl&lt;T&gt;::reap_orphans (12 samples, 0.03%)</title><rect x="31.0001%" y="485" width="0.0329%" height="15" fill="rgb(221,189,43)" fg:x="11311" fg:w="12"/><text x="31.2501%" y="495.50"></text></g><g><title>dkn-compute`DYLD-STUB$$kevent (6 samples, 0.02%)</title><rect x="31.1179%" y="469" width="0.0164%" height="15" fill="rgb(207,36,27)" fg:x="11354" fg:w="6"/><text x="31.3679%" y="479.50"></text></g><g><title>dkn-compute`mio::poll::Poll::poll (34 samples, 0.09%)</title><rect x="31.1344%" y="469" width="0.0932%" height="15" fill="rgb(217,90,24)" fg:x="11360" fg:w="34"/><text x="31.3844%" y="479.50"></text></g><g><title>dkn-compute`tokio::runtime::scheduler::multi_thread::worker::_&lt;impl tokio::runtime::task::Schedule for alloc::sync::Arc&lt;tokio::runtime::scheduler::multi_thread::handle::Handle&gt;&gt;::schedule (6 samples, 0.02%)</title><rect x="31.2522%" y="453" width="0.0164%" height="15" fill="rgb(224,66,35)" fg:x="11403" fg:w="6"/><text x="31.5022%" y="463.50"></text></g><g><title>dkn-compute`tokio::runtime::task::raw::schedule (6 samples, 0.02%)</title><rect x="31.2687%" y="453" width="0.0164%" height="15" fill="rgb(221,13,50)" fg:x="11409" fg:w="6"/><text x="31.5187%" y="463.50"></text></g><g><title>dkn-compute`tokio::runtime::context::with_scheduler (4 samples, 0.01%)</title><rect x="31.2961%" y="437" width="0.0110%" height="15" fill="rgb(236,68,49)" fg:x="11419" fg:w="4"/><text x="31.5461%" y="447.50"></text></g><g><title>dkn-compute`tokio::runtime::context::with_scheduler (23 samples, 0.06%)</title><rect x="31.3070%" y="421" width="0.0630%" height="15" fill="rgb(229,146,28)" fg:x="11423" fg:w="23"/><text x="31.5570%" y="431.50"></text></g><g><title>dkn-compute`tokio::runtime::scheduler::multi_thread::worker::_&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::schedule_local (5 samples, 0.01%)</title><rect x="31.3564%" y="405" width="0.0137%" height="15" fill="rgb(225,31,38)" fg:x="11441" fg:w="5"/><text x="31.6064%" y="415.50"></text></g><g><title>dkn-compute`tokio::runtime::scheduler::multi_thread::worker::_&lt;impl tokio::runtime::task::Schedule for alloc::sync::Arc&lt;tokio::runtime::scheduler::multi_thread::handle::Handle&gt;&gt;::schedule (38 samples, 0.10%)</title><rect x="31.3070%" y="437" width="0.1041%" height="15" fill="rgb(250,208,3)" fg:x="11423" fg:w="38"/><text x="31.5570%" y="447.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (15 samples, 0.04%)</title><rect x="31.3701%" y="421" width="0.0411%" height="15" fill="rgb(246,54,23)" fg:x="11446" fg:w="15"/><text x="31.6201%" y="431.50"></text></g><g><title>dkn-compute`tokio::runtime::io::scheduled_io::ScheduledIo::wake (81 samples, 0.22%)</title><rect x="31.2276%" y="469" width="0.2220%" height="15" fill="rgb(243,76,11)" fg:x="11394" fg:w="81"/><text x="31.4776%" y="479.50"></text></g><g><title>dkn-compute`tokio::runtime::task::waker::wake_by_val (60 samples, 0.16%)</title><rect x="31.2851%" y="453" width="0.1644%" height="15" fill="rgb(245,21,50)" fg:x="11415" fg:w="60"/><text x="31.5351%" y="463.50"></text></g><g><title>dkn-compute`tokio::runtime::task::state::State::transition_to_notified_by_val (14 samples, 0.04%)</title><rect x="31.4112%" y="437" width="0.0384%" height="15" fill="rgb(228,9,43)" fg:x="11461" fg:w="14"/><text x="31.6612%" y="447.50"></text></g><g><title>dkn-compute`tokio::runtime::task::waker::wake_by_val (10 samples, 0.03%)</title><rect x="31.4496%" y="469" width="0.0274%" height="15" fill="rgb(208,100,47)" fg:x="11475" fg:w="10"/><text x="31.6996%" y="479.50"></text></g><g><title>dkn-compute`tokio::runtime::io::driver::Driver::turn (1,463 samples, 4.01%)</title><rect x="31.0330%" y="485" width="4.0096%" height="15" fill="rgb(232,26,8)" fg:x="11323" fg:w="1463"/><text x="31.2830%" y="495.50">dkn-..</text></g><g><title>libsystem_kernel.dylib`kevent (1,301 samples, 3.57%)</title><rect x="31.4770%" y="469" width="3.5657%" height="15" fill="rgb(216,166,38)" fg:x="11485" fg:w="1301"/><text x="31.7270%" y="479.50">libs..</text></g><g><title>dkn-compute`DYLD-STUB$$clock_gettime (7 samples, 0.02%)</title><rect x="35.0892%" y="469" width="0.0192%" height="15" fill="rgb(251,202,51)" fg:x="12803" fg:w="7"/><text x="35.3392%" y="479.50"></text></g><g><title>libsystem_c.dylib`clock_gettime_nsec_np (11 samples, 0.03%)</title><rect x="35.1440%" y="437" width="0.0301%" height="15" fill="rgb(254,216,34)" fg:x="12823" fg:w="11"/><text x="35.3940%" y="447.50"></text></g><g><title>libsystem_kernel.dylib`mach_timebase_info (9 samples, 0.02%)</title><rect x="35.1495%" y="421" width="0.0247%" height="15" fill="rgb(251,32,27)" fg:x="12825" fg:w="9"/><text x="35.3995%" y="431.50"></text></g><g><title>libsystem_kernel.dylib`mach_absolute_time (11 samples, 0.03%)</title><rect x="35.1742%" y="437" width="0.0301%" height="15" fill="rgb(208,127,28)" fg:x="12834" fg:w="11"/><text x="35.4242%" y="447.50"></text></g><g><title>dkn-compute`std::sys::pal::unix::time::Timespec::now (48 samples, 0.13%)</title><rect x="35.1084%" y="469" width="0.1316%" height="15" fill="rgb(224,137,22)" fg:x="12810" fg:w="48"/><text x="35.3584%" y="479.50"></text></g><g><title>libsystem_c.dylib`clock_gettime (48 samples, 0.13%)</title><rect x="35.1084%" y="453" width="0.1316%" height="15" fill="rgb(254,70,32)" fg:x="12810" fg:w="48"/><text x="35.3584%" y="463.50"></text></g><g><title>libsystem_kernel.dylib`mach_timebase_info (13 samples, 0.04%)</title><rect x="35.2043%" y="437" width="0.0356%" height="15" fill="rgb(229,75,37)" fg:x="12845" fg:w="13"/><text x="35.4543%" y="447.50"></text></g><g><title>dkn-compute`std::time::Instant::duration_since (11 samples, 0.03%)</title><rect x="35.2399%" y="469" width="0.0301%" height="15" fill="rgb(252,64,23)" fg:x="12858" fg:w="11"/><text x="35.4899%" y="479.50"></text></g><g><title>dkn-compute`std::sys::pal::unix::time::Timespec::sub_timespec (10 samples, 0.03%)</title><rect x="35.2427%" y="453" width="0.0274%" height="15" fill="rgb(232,162,48)" fg:x="12859" fg:w="10"/><text x="35.4927%" y="463.50"></text></g><g><title>dkn-compute`tokio::runtime::time::wheel::Wheel::next_expiration (22 samples, 0.06%)</title><rect x="35.3934%" y="453" width="0.0603%" height="15" fill="rgb(246,160,12)" fg:x="12914" fg:w="22"/><text x="35.6434%" y="463.50"></text></g><g><title>dkn-compute`tokio::runtime::time::_&lt;impl tokio::runtime::time::handle::Handle&gt;::process_at_sharded_time (167 samples, 0.46%)</title><rect x="35.2728%" y="469" width="0.4577%" height="15" fill="rgb(247,166,0)" fg:x="12870" fg:w="167"/><text x="35.5228%" y="479.50"></text></g><g><title>dkn-compute`tokio::runtime::time::wheel::Wheel::poll (101 samples, 0.28%)</title><rect x="35.4537%" y="453" width="0.2768%" height="15" fill="rgb(249,219,21)" fg:x="12936" fg:w="101"/><text x="35.7037%" y="463.50"></text></g><g><title>dkn-compute`tokio::runtime::time::wheel::Wheel::next_expiration (94 samples, 0.26%)</title><rect x="35.4729%" y="437" width="0.2576%" height="15" fill="rgb(205,209,3)" fg:x="12943" fg:w="94"/><text x="35.7229%" y="447.50"></text></g><g><title>dkn-compute`tokio::runtime::time::_&lt;impl tokio::runtime::time::handle::Handle&gt;::process (260 samples, 0.71%)</title><rect x="35.0426%" y="485" width="0.7126%" height="15" fill="rgb(243,44,1)" fg:x="12786" fg:w="260"/><text x="35.2926%" y="495.50"></text></g><g><title>libsystem_c.dylib`clock_gettime (6 samples, 0.02%)</title><rect x="35.7388%" y="469" width="0.0164%" height="15" fill="rgb(206,159,16)" fg:x="13040" fg:w="6"/><text x="35.9888%" y="479.50"></text></g><g><title>dkn-compute`tokio::runtime::time::_&lt;impl tokio::runtime::time::handle::Handle&gt;::process_at_sharded_time (9 samples, 0.02%)</title><rect x="35.7552%" y="485" width="0.0247%" height="15" fill="rgb(244,77,30)" fg:x="13046" fg:w="9"/><text x="36.0052%" y="495.50"></text></g><g><title>dkn-compute`tokio::runtime::time::wheel::Wheel::next_expiration (49 samples, 0.13%)</title><rect x="35.7799%" y="485" width="0.1343%" height="15" fill="rgb(218,69,12)" fg:x="13055" fg:w="49"/><text x="36.0299%" y="495.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (5 samples, 0.01%)</title><rect x="35.9142%" y="485" width="0.0137%" height="15" fill="rgb(212,87,7)" fg:x="13104" fg:w="5"/><text x="36.1642%" y="495.50"></text></g><g><title>dkn-compute`tokio::runtime::time::Driver::park_internal (1,869 samples, 5.12%)</title><rect x="30.8082%" y="501" width="5.1224%" height="15" fill="rgb(245,114,25)" fg:x="11241" fg:w="1869"/><text x="31.0582%" y="511.50">dkn-co..</text></g><g><title>libdyld.dylib`tlv_get_addr (4 samples, 0.01%)</title><rect x="35.9416%" y="501" width="0.0110%" height="15" fill="rgb(210,61,42)" fg:x="13114" fg:w="4"/><text x="36.1916%" y="511.50"></text></g><g><title>dkn-compute`tokio::runtime::scheduler::multi_thread::park::Parker::park (3,674 samples, 10.07%)</title><rect x="25.9243%" y="517" width="10.0693%" height="15" fill="rgb(211,52,33)" fg:x="9459" fg:w="3674"/><text x="26.1743%" y="527.50">dkn-compute`tok..</text></g><g><title>libsystem_pthread.dylib`pthread_mutex_unlock (10 samples, 0.03%)</title><rect x="35.9662%" y="501" width="0.0274%" height="15" fill="rgb(234,58,33)" fg:x="13123" fg:w="10"/><text x="36.2162%" y="511.50"></text></g><g><title>dkn-compute`tokio::runtime::io::driver::Driver::turn (48 samples, 0.13%)</title><rect x="36.0073%" y="501" width="0.1316%" height="15" fill="rgb(220,115,36)" fg:x="13138" fg:w="48"/><text x="36.2573%" y="511.50"></text></g><g><title>libsystem_kernel.dylib`kevent (48 samples, 0.13%)</title><rect x="36.0073%" y="485" width="0.1316%" height="15" fill="rgb(243,153,54)" fg:x="13138" fg:w="48"/><text x="36.2573%" y="495.50"></text></g><g><title>dkn-compute`tokio::runtime::time::_&lt;impl tokio::runtime::time::handle::Handle&gt;::process (6 samples, 0.02%)</title><rect x="36.1389%" y="501" width="0.0164%" height="15" fill="rgb(251,47,18)" fg:x="13186" fg:w="6"/><text x="36.3889%" y="511.50"></text></g><g><title>dkn-compute`tokio::runtime::time::_&lt;impl tokio::runtime::time::handle::Handle&gt;::process_at_sharded_time (4 samples, 0.01%)</title><rect x="36.1444%" y="485" width="0.0110%" height="15" fill="rgb(242,102,42)" fg:x="13188" fg:w="4"/><text x="36.3944%" y="495.50"></text></g><g><title>dkn-compute`tokio::runtime::scheduler::multi_thread::worker::Context::park_timeout (3,798 samples, 10.41%)</title><rect x="25.7599%" y="533" width="10.4092%" height="15" fill="rgb(234,31,38)" fg:x="9399" fg:w="3798"/><text x="26.0099%" y="543.50">dkn-compute`tok..</text></g><g><title>dkn-compute`tokio::runtime::time::Driver::park_internal (61 samples, 0.17%)</title><rect x="36.0019%" y="517" width="0.1672%" height="15" fill="rgb(221,117,51)" fg:x="13136" fg:w="61"/><text x="36.2519%" y="527.50"></text></g><g><title>dkn-compute`parking_lot_core::parking_lot::lock_bucket_pair (12 samples, 0.03%)</title><rect x="36.3417%" y="501" width="0.0329%" height="15" fill="rgb(212,20,18)" fg:x="13260" fg:w="12"/><text x="36.5917%" y="511.50"></text></g><g><title>dkn-compute`std::sys::pal::unix::time::Timespec::now (10 samples, 0.03%)</title><rect x="36.3746%" y="501" width="0.0274%" height="15" fill="rgb(245,133,36)" fg:x="13272" fg:w="10"/><text x="36.6246%" y="511.50"></text></g><g><title>libsystem_c.dylib`clock_gettime (8 samples, 0.02%)</title><rect x="36.3801%" y="485" width="0.0219%" height="15" fill="rgb(212,6,19)" fg:x="13274" fg:w="8"/><text x="36.6301%" y="495.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvsignal (312 samples, 0.86%)</title><rect x="36.4020%" y="501" width="0.8551%" height="15" fill="rgb(218,1,36)" fg:x="13282" fg:w="312"/><text x="36.6520%" y="511.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_unlock_slow (4 samples, 0.01%)</title><rect x="37.2653%" y="501" width="0.0110%" height="15" fill="rgb(246,84,54)" fg:x="13597" fg:w="4"/><text x="37.5153%" y="511.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_mutexdrop (4 samples, 0.01%)</title><rect x="37.2653%" y="485" width="0.0110%" height="15" fill="rgb(242,110,6)" fg:x="13597" fg:w="4"/><text x="37.5153%" y="495.50"></text></g><g><title>libsystem_pthread.dylib`pthread_cond_signal (6 samples, 0.02%)</title><rect x="37.2763%" y="501" width="0.0164%" height="15" fill="rgb(214,47,5)" fg:x="13601" fg:w="6"/><text x="37.5263%" y="511.50"></text></g><g><title>dkn-compute`parking_lot::condvar::Condvar::notify_one_slow (365 samples, 1.00%)</title><rect x="36.3006%" y="517" width="1.0004%" height="15" fill="rgb(218,159,25)" fg:x="13245" fg:w="365"/><text x="36.5506%" y="527.50"></text></g><g><title>dkn-compute`tokio::runtime::driver::Handle::unpark (124 samples, 0.34%)</title><rect x="37.3092%" y="517" width="0.3398%" height="15" fill="rgb(215,211,28)" fg:x="13613" fg:w="124"/><text x="37.5592%" y="527.50"></text></g><g><title>libsystem_kernel.dylib`kevent (122 samples, 0.33%)</title><rect x="37.3147%" y="501" width="0.3344%" height="15" fill="rgb(238,59,32)" fg:x="13615" fg:w="122"/><text x="37.5647%" y="511.50"></text></g><g><title>dkn-compute`tokio::runtime::scheduler::multi_thread::park::Unparker::unpark (8 samples, 0.02%)</title><rect x="37.6490%" y="517" width="0.0219%" height="15" fill="rgb(226,82,3)" fg:x="13737" fg:w="8"/><text x="37.8990%" y="527.50"></text></g><g><title>dkn-compute`tokio::runtime::scheduler::multi_thread::worker::_&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::transition_worker_from_searching (16 samples, 0.04%)</title><rect x="37.6710%" y="517" width="0.0439%" height="15" fill="rgb(240,164,32)" fg:x="13745" fg:w="16"/><text x="37.9210%" y="527.50"></text></g><g><title>dkn-compute`tokio::runtime::task::core::Core&lt;T,S&gt;::poll (8 samples, 0.02%)</title><rect x="37.7148%" y="517" width="0.0219%" height="15" fill="rgb(232,46,7)" fg:x="13761" fg:w="8"/><text x="37.9648%" y="527.50"></text></g><g><title>dkn-compute`&lt;tracing::instrument::Instrumented&lt;T&gt; as core::future::future::Future&gt;::poll (18 samples, 0.05%)</title><rect x="37.7751%" y="501" width="0.0493%" height="15" fill="rgb(229,129,53)" fg:x="13783" fg:w="18"/><text x="38.0251%" y="511.50"></text></g><g><title>dkn-compute`parking_lot_core::parking_lot::lock_bucket_pair (10 samples, 0.03%)</title><rect x="37.9039%" y="453" width="0.0274%" height="15" fill="rgb(234,188,29)" fg:x="13830" fg:w="10"/><text x="38.1539%" y="463.50"></text></g><g><title>libsystem_c.dylib`clock_gettime_nsec_np (4 samples, 0.01%)</title><rect x="37.9423%" y="421" width="0.0110%" height="15" fill="rgb(246,141,4)" fg:x="13844" fg:w="4"/><text x="38.1923%" y="431.50"></text></g><g><title>libsystem_kernel.dylib`mach_timebase_info (4 samples, 0.01%)</title><rect x="37.9423%" y="405" width="0.0110%" height="15" fill="rgb(229,23,39)" fg:x="13844" fg:w="4"/><text x="38.1923%" y="415.50"></text></g><g><title>dkn-compute`std::sys::pal::unix::time::Timespec::now (12 samples, 0.03%)</title><rect x="37.9313%" y="453" width="0.0329%" height="15" fill="rgb(206,12,3)" fg:x="13840" fg:w="12"/><text x="38.1813%" y="463.50"></text></g><g><title>libsystem_c.dylib`clock_gettime (10 samples, 0.03%)</title><rect x="37.9368%" y="437" width="0.0274%" height="15" fill="rgb(252,226,20)" fg:x="13842" fg:w="10"/><text x="38.1868%" y="447.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvsignal (246 samples, 0.67%)</title><rect x="37.9669%" y="453" width="0.6742%" height="15" fill="rgb(216,123,35)" fg:x="13853" fg:w="246"/><text x="38.2169%" y="463.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_cond_updateval (4 samples, 0.01%)</title><rect x="38.6412%" y="453" width="0.0110%" height="15" fill="rgb(212,68,40)" fg:x="14099" fg:w="4"/><text x="38.8912%" y="463.50"></text></g><g><title>dkn-compute`parking_lot::condvar::Condvar::notify_one_slow (285 samples, 0.78%)</title><rect x="37.8765%" y="469" width="0.7811%" height="15" fill="rgb(254,125,32)" fg:x="13820" fg:w="285"/><text x="38.1265%" y="479.50"></text></g><g><title>dkn-compute`tokio::runtime::driver::Handle::unpark (116 samples, 0.32%)</title><rect x="38.6658%" y="469" width="0.3179%" height="15" fill="rgb(253,97,22)" fg:x="14108" fg:w="116"/><text x="38.9158%" y="479.50"></text></g><g><title>libsystem_kernel.dylib`kevent (116 samples, 0.32%)</title><rect x="38.6658%" y="453" width="0.3179%" height="15" fill="rgb(241,101,14)" fg:x="14108" fg:w="116"/><text x="38.9158%" y="463.50"></text></g><g><title>dkn-compute`tokio::runtime::scheduler::multi_thread::park::Unparker::unpark (6 samples, 0.02%)</title><rect x="38.9837%" y="469" width="0.0164%" height="15" fill="rgb(238,103,29)" fg:x="14224" fg:w="6"/><text x="39.2337%" y="479.50"></text></g><g><title>dkn-compute`tokio::runtime::scheduler::multi_thread::worker::_&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::schedule_local (34 samples, 0.09%)</title><rect x="39.0002%" y="469" width="0.0932%" height="15" fill="rgb(233,195,47)" fg:x="14230" fg:w="34"/><text x="39.2502%" y="479.50"></text></g><g><title>libsystem_pthread.dylib`pthread_cond_signal (4 samples, 0.01%)</title><rect x="39.0934%" y="469" width="0.0110%" height="15" fill="rgb(246,218,30)" fg:x="14264" fg:w="4"/><text x="39.3434%" y="479.50"></text></g><g><title>dkn-compute`tokio::runtime::context::with_scheduler (465 samples, 1.27%)</title><rect x="37.8354%" y="485" width="1.2744%" height="15" fill="rgb(219,145,47)" fg:x="13805" fg:w="465"/><text x="38.0854%" y="495.50"></text></g><g><title>dkn-compute`tokio::runtime::scheduler::multi_thread::worker::_&lt;impl tokio::runtime::task::Schedule for alloc::sync::Arc&lt;tokio::runtime::scheduler::multi_thread::handle::Handle&gt;&gt;::yield_now (471 samples, 1.29%)</title><rect x="37.8327%" y="501" width="1.2909%" height="15" fill="rgb(243,12,26)" fg:x="13804" fg:w="471"/><text x="38.0827%" y="511.50"></text></g><g><title>dkn-compute`&lt;futures_util::future::select::Select&lt;A,B&gt; as core::future::future::Future&gt;::poll (7 samples, 0.02%)</title><rect x="39.1646%" y="485" width="0.0192%" height="15" fill="rgb(214,87,16)" fg:x="14290" fg:w="7"/><text x="39.4146%" y="495.50"></text></g><g><title>dkn-compute`&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.01%)</title><rect x="39.9293%" y="453" width="0.0110%" height="15" fill="rgb(208,99,42)" fg:x="14569" fg:w="4"/><text x="40.1793%" y="463.50"></text></g><g><title>dkn-compute`&lt;futures_util::future::future::map::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (4 samples, 0.01%)</title><rect x="39.9403%" y="453" width="0.0110%" height="15" fill="rgb(253,99,2)" fg:x="14573" fg:w="4"/><text x="40.1903%" y="463.50"></text></g><g><title>dkn-compute`&lt;libp2p_core::transport::map::MapFuture&lt;T,F&gt; as core::future::future::Future&gt;::poll (4 samples, 0.01%)</title><rect x="39.9403%" y="437" width="0.0110%" height="15" fill="rgb(220,168,23)" fg:x="14573" fg:w="4"/><text x="40.1903%" y="447.50"></text></g><g><title>dkn-compute`&lt;libp2p_core::upgrade::apply::InboundUpgradeApply&lt;C,U&gt; as core::future::future::Future&gt;::poll (4 samples, 0.01%)</title><rect x="39.9403%" y="421" width="0.0110%" height="15" fill="rgb(242,38,24)" fg:x="14573" fg:w="4"/><text x="40.1903%" y="431.50"></text></g><g><title>dkn-compute`&lt;libp2p_noise::Config as libp2p_core::upgrade::InboundConnectionUpgrade&lt;T&gt;&gt;::upgrade_inbound::_{{closure}} (4 samples, 0.01%)</title><rect x="39.9403%" y="405" width="0.0110%" height="15" fill="rgb(225,182,9)" fg:x="14573" fg:w="4"/><text x="40.1903%" y="415.50"></text></g><g><title>dkn-compute`&lt;futures_util::stream::futures_unordered::FuturesUnordered&lt;Fut&gt; as futures_core::stream::Stream&gt;::poll_next (15 samples, 0.04%)</title><rect x="39.9594%" y="453" width="0.0411%" height="15" fill="rgb(243,178,37)" fg:x="14580" fg:w="15"/><text x="40.2094%" y="463.50"></text></g><g><title>dkn-compute`&lt;libp2p_core::muxing::boxed::Wrap&lt;T&gt; as libp2p_core::muxing::StreamMuxer&gt;::poll (13 samples, 0.04%)</title><rect x="40.0033%" y="453" width="0.0356%" height="15" fill="rgb(232,139,19)" fg:x="14596" fg:w="13"/><text x="40.2533%" y="463.50"></text></g><g><title>dkn-compute`&lt;libp2p_core::muxing::boxed::Wrap&lt;T&gt; as libp2p_core::muxing::StreamMuxer&gt;::poll_inbound (8 samples, 0.02%)</title><rect x="40.0389%" y="453" width="0.0219%" height="15" fill="rgb(225,201,24)" fg:x="14609" fg:w="8"/><text x="40.2889%" y="463.50"></text></g><g><title>dkn-compute`&lt;libp2p_noise::io::framed::Codec&lt;snow::handshakestate::HandshakeState&gt; as asynchronous_codec::encoder::Encoder&gt;::encode (8 samples, 0.02%)</title><rect x="40.0828%" y="309" width="0.0219%" height="15" fill="rgb(221,47,46)" fg:x="14625" fg:w="8"/><text x="40.3328%" y="319.50"></text></g><g><title>dkn-compute`snow::handshakestate::HandshakeState::write_message (8 samples, 0.02%)</title><rect x="40.0828%" y="293" width="0.0219%" height="15" fill="rgb(249,23,13)" fg:x="14625" fg:w="8"/><text x="40.3328%" y="303.50"></text></g><g><title>dkn-compute`&lt;libp2p_noise::protocol::Keypair as snow::types::Dh&gt;::generate (8 samples, 0.02%)</title><rect x="40.0828%" y="277" width="0.0219%" height="15" fill="rgb(219,9,5)" fg:x="14625" fg:w="8"/><text x="40.3328%" y="287.50"></text></g><g><title>dkn-compute`x25519_dalek::x25519::x25519 (7 samples, 0.02%)</title><rect x="40.0855%" y="261" width="0.0192%" height="15" fill="rgb(254,171,16)" fg:x="14626" fg:w="7"/><text x="40.3355%" y="271.50"></text></g><g><title>dkn-compute`curve25519_dalek::montgomery::MontgomeryPoint::mul_clamped (7 samples, 0.02%)</title><rect x="40.0855%" y="245" width="0.0192%" height="15" fill="rgb(230,171,20)" fg:x="14626" fg:w="7"/><text x="40.3355%" y="255.50"></text></g><g><title>dkn-compute`&lt;&amp;curve25519_dalek::montgomery::MontgomeryPoint as core::ops::arith::Mul&lt;&amp;curve25519_dalek::scalar::Scalar&gt;&gt;::mul (7 samples, 0.02%)</title><rect x="40.0855%" y="229" width="0.0192%" height="15" fill="rgb(210,71,41)" fg:x="14626" fg:w="7"/><text x="40.3355%" y="239.50"></text></g><g><title>dkn-compute`libsecp256k1_core::ecmult::ECMultContext::ecmult (10 samples, 0.03%)</title><rect x="40.1102%" y="261" width="0.0274%" height="15" fill="rgb(206,173,20)" fg:x="14635" fg:w="10"/><text x="40.3602%" y="271.50"></text></g><g><title>dkn-compute`libsecp256k1_core::field::Field::sqr_in_place (7 samples, 0.02%)</title><rect x="40.1184%" y="245" width="0.0192%" height="15" fill="rgb(233,88,34)" fg:x="14638" fg:w="7"/><text x="40.3684%" y="255.50"></text></g><g><title>dkn-compute`libp2p_identity::keypair::PublicKey::verify (14 samples, 0.04%)</title><rect x="40.1047%" y="293" width="0.0384%" height="15" fill="rgb(223,209,46)" fg:x="14633" fg:w="14"/><text x="40.3547%" y="303.50"></text></g><g><title>dkn-compute`libsecp256k1_core::ecdsa::_&lt;impl libsecp256k1_core::ecmult::ECMultContext&gt;::verify_raw (14 samples, 0.04%)</title><rect x="40.1047%" y="277" width="0.0384%" height="15" fill="rgb(250,43,18)" fg:x="14633" fg:w="14"/><text x="40.3547%" y="287.50"></text></g><g><title>dkn-compute`libp2p_noise::io::handshake::State&lt;T&gt;::finish (15 samples, 0.04%)</title><rect x="40.1047%" y="309" width="0.0411%" height="15" fill="rgb(208,13,10)" fg:x="14633" fg:w="15"/><text x="40.3547%" y="319.50"></text></g><g><title>dkn-compute`&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51 as core::ops::arith::Mul&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;&gt;::mul (5 samples, 0.01%)</title><rect x="40.1458%" y="181" width="0.0137%" height="15" fill="rgb(212,200,36)" fg:x="14648" fg:w="5"/><text x="40.3958%" y="191.50"></text></g><g><title>dkn-compute`curve25519_dalek::backend::serial::u64::field::FieldElement51::pow2k (6 samples, 0.02%)</title><rect x="40.1595%" y="181" width="0.0164%" height="15" fill="rgb(225,90,30)" fg:x="14653" fg:w="6"/><text x="40.4095%" y="191.50"></text></g><g><title>dkn-compute`&lt;libp2p_noise::io::framed::Codec&lt;snow::handshakestate::HandshakeState&gt; as asynchronous_codec::decoder::Decoder&gt;::decode (13 samples, 0.04%)</title><rect x="40.1458%" y="277" width="0.0356%" height="15" fill="rgb(236,182,39)" fg:x="14648" fg:w="13"/><text x="40.3958%" y="287.50"></text></g><g><title>dkn-compute`snow::handshakestate::HandshakeState::read_message (13 samples, 0.04%)</title><rect x="40.1458%" y="261" width="0.0356%" height="15" fill="rgb(212,144,35)" fg:x="14648" fg:w="13"/><text x="40.3958%" y="271.50"></text></g><g><title>dkn-compute`&lt;libp2p_noise::protocol::Keypair as snow::types::Dh&gt;::dh (13 samples, 0.04%)</title><rect x="40.1458%" y="245" width="0.0356%" height="15" fill="rgb(228,63,44)" fg:x="14648" fg:w="13"/><text x="40.3958%" y="255.50"></text></g><g><title>dkn-compute`x25519_dalek::x25519::x25519 (13 samples, 0.04%)</title><rect x="40.1458%" y="229" width="0.0356%" height="15" fill="rgb(228,109,6)" fg:x="14648" fg:w="13"/><text x="40.3958%" y="239.50"></text></g><g><title>dkn-compute`curve25519_dalek::montgomery::MontgomeryPoint::mul_clamped (13 samples, 0.04%)</title><rect x="40.1458%" y="213" width="0.0356%" height="15" fill="rgb(238,117,24)" fg:x="14648" fg:w="13"/><text x="40.3958%" y="223.50"></text></g><g><title>dkn-compute`&lt;&amp;curve25519_dalek::montgomery::MontgomeryPoint as core::ops::arith::Mul&lt;&amp;curve25519_dalek::scalar::Scalar&gt;&gt;::mul (13 samples, 0.04%)</title><rect x="40.1458%" y="197" width="0.0356%" height="15" fill="rgb(242,26,26)" fg:x="14648" fg:w="13"/><text x="40.3958%" y="207.50"></text></g><g><title>dkn-compute`libp2p_noise::io::handshake::recv_identity::_{{closure}} (15 samples, 0.04%)</title><rect x="40.1458%" y="309" width="0.0411%" height="15" fill="rgb(221,92,48)" fg:x="14648" fg:w="15"/><text x="40.3958%" y="319.50"></text></g><g><title>dkn-compute`futures_util::stream::stream::StreamExt::poll_next_unpin (15 samples, 0.04%)</title><rect x="40.1458%" y="293" width="0.0411%" height="15" fill="rgb(209,209,32)" fg:x="14648" fg:w="15"/><text x="40.3958%" y="303.50"></text></g><g><title>dkn-compute`&lt;asynchronous_codec::framed::Framed&lt;T,U&gt; as futures_sink::Sink&lt;&lt;U as asynchronous_codec::encoder::Encoder&gt;::Item&gt;&gt;::poll_flush (4 samples, 0.01%)</title><rect x="40.1869%" y="293" width="0.0110%" height="15" fill="rgb(221,70,22)" fg:x="14663" fg:w="4"/><text x="40.4369%" y="303.50"></text></g><g><title>dkn-compute`tokio::net::tcp::stream::TcpStream::poll_write_priv (4 samples, 0.01%)</title><rect x="40.1869%" y="277" width="0.0110%" height="15" fill="rgb(248,145,5)" fg:x="14663" fg:w="4"/><text x="40.4369%" y="287.50"></text></g><g><title>dkn-compute`&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Write&gt;::write (4 samples, 0.01%)</title><rect x="40.1869%" y="261" width="0.0110%" height="15" fill="rgb(226,116,26)" fg:x="14663" fg:w="4"/><text x="40.4369%" y="271.50"></text></g><g><title>libsystem_kernel.dylib`__sendto (4 samples, 0.01%)</title><rect x="40.1869%" y="245" width="0.0110%" height="15" fill="rgb(244,5,17)" fg:x="14663" fg:w="4"/><text x="40.4369%" y="255.50"></text></g><g><title>dkn-compute`libp2p_noise::io::handshake::send_identity::_{{closure}} (10 samples, 0.03%)</title><rect x="40.1869%" y="309" width="0.0274%" height="15" fill="rgb(252,159,33)" fg:x="14663" fg:w="10"/><text x="40.4369%" y="319.50"></text></g><g><title>dkn-compute`&lt;libp2p_noise::io::framed::Codec&lt;snow::handshakestate::HandshakeState&gt; as asynchronous_codec::encoder::Encoder&gt;::encode (6 samples, 0.02%)</title><rect x="40.1979%" y="293" width="0.0164%" height="15" fill="rgb(206,71,0)" fg:x="14667" fg:w="6"/><text x="40.4479%" y="303.50"></text></g><g><title>dkn-compute`snow::handshakestate::HandshakeState::write_message (6 samples, 0.02%)</title><rect x="40.1979%" y="277" width="0.0164%" height="15" fill="rgb(233,118,54)" fg:x="14667" fg:w="6"/><text x="40.4479%" y="287.50"></text></g><g><title>dkn-compute`&lt;libp2p_noise::protocol::Keypair as snow::types::Dh&gt;::dh (6 samples, 0.02%)</title><rect x="40.1979%" y="261" width="0.0164%" height="15" fill="rgb(234,83,48)" fg:x="14667" fg:w="6"/><text x="40.4479%" y="271.50"></text></g><g><title>dkn-compute`x25519_dalek::x25519::x25519 (6 samples, 0.02%)</title><rect x="40.1979%" y="245" width="0.0164%" height="15" fill="rgb(228,3,54)" fg:x="14667" fg:w="6"/><text x="40.4479%" y="255.50"></text></g><g><title>dkn-compute`curve25519_dalek::montgomery::MontgomeryPoint::mul_clamped (6 samples, 0.02%)</title><rect x="40.1979%" y="229" width="0.0164%" height="15" fill="rgb(226,155,13)" fg:x="14667" fg:w="6"/><text x="40.4479%" y="239.50"></text></g><g><title>dkn-compute`&lt;&amp;curve25519_dalek::montgomery::MontgomeryPoint as core::ops::arith::Mul&lt;&amp;curve25519_dalek::scalar::Scalar&gt;&gt;::mul (6 samples, 0.02%)</title><rect x="40.1979%" y="213" width="0.0164%" height="15" fill="rgb(241,28,37)" fg:x="14667" fg:w="6"/><text x="40.4479%" y="223.50"></text></g><g><title>dkn-compute`&lt;libp2p_noise::protocol::Keypair as snow::types::Dh&gt;::set (5 samples, 0.01%)</title><rect x="40.2143%" y="293" width="0.0137%" height="15" fill="rgb(233,93,10)" fg:x="14673" fg:w="5"/><text x="40.4643%" y="303.50"></text></g><g><title>dkn-compute`x25519_dalek::x25519::x25519 (5 samples, 0.01%)</title><rect x="40.2143%" y="277" width="0.0137%" height="15" fill="rgb(225,113,19)" fg:x="14673" fg:w="5"/><text x="40.4643%" y="287.50"></text></g><g><title>dkn-compute`curve25519_dalek::montgomery::MontgomeryPoint::mul_clamped (5 samples, 0.01%)</title><rect x="40.2143%" y="261" width="0.0137%" height="15" fill="rgb(241,2,18)" fg:x="14673" fg:w="5"/><text x="40.4643%" y="271.50"></text></g><g><title>dkn-compute`&lt;&amp;curve25519_dalek::montgomery::MontgomeryPoint as core::ops::arith::Mul&lt;&amp;curve25519_dalek::scalar::Scalar&gt;&gt;::mul (5 samples, 0.01%)</title><rect x="40.2143%" y="245" width="0.0137%" height="15" fill="rgb(228,207,21)" fg:x="14673" fg:w="5"/><text x="40.4643%" y="255.50"></text></g><g><title>dkn-compute`&lt;libp2p_noise::Config as libp2p_core::upgrade::OutboundConnectionUpgrade&lt;T&gt;&gt;::upgrade_outbound::_{{closure}} (55 samples, 0.15%)</title><rect x="40.0828%" y="325" width="0.1507%" height="15" fill="rgb(213,211,35)" fg:x="14625" fg:w="55"/><text x="40.3328%" y="335.50"></text></g><g><title>dkn-compute`snow::builder::Builder::build (7 samples, 0.02%)</title><rect x="40.2143%" y="309" width="0.0192%" height="15" fill="rgb(209,83,10)" fg:x="14673" fg:w="7"/><text x="40.4643%" y="319.50"></text></g><g><title>dkn-compute`&lt;libp2p_core::upgrade::apply::OutboundUpgradeApply&lt;C,U&gt; as core::future::future::Future&gt;::poll (57 samples, 0.16%)</title><rect x="40.0800%" y="341" width="0.1562%" height="15" fill="rgb(209,164,1)" fg:x="14624" fg:w="57"/><text x="40.3300%" y="351.50"></text></g><g><title>dkn-compute`&lt;tokio::net::tcp::stream::TcpStream as core::convert::TryFrom&lt;std::net::tcp::TcpStream&gt;&gt;::try_from (4 samples, 0.01%)</title><rect x="40.2362%" y="309" width="0.0110%" height="15" fill="rgb(213,184,43)" fg:x="14681" fg:w="4"/><text x="40.4862%" y="319.50"></text></g><g><title>dkn-compute`tokio::io::poll_evented::PollEvented&lt;E&gt;::new_with_interest (4 samples, 0.01%)</title><rect x="40.2362%" y="293" width="0.0110%" height="15" fill="rgb(231,61,34)" fg:x="14681" fg:w="4"/><text x="40.4862%" y="303.50"></text></g><g><title>dkn-compute`tokio::runtime::io::registration::Registration::new_with_interest_and_handle (4 samples, 0.01%)</title><rect x="40.2362%" y="277" width="0.0110%" height="15" fill="rgb(235,75,3)" fg:x="14681" fg:w="4"/><text x="40.4862%" y="287.50"></text></g><g><title>dkn-compute`tokio::runtime::io::driver::Handle::add_source (4 samples, 0.01%)</title><rect x="40.2362%" y="261" width="0.0110%" height="15" fill="rgb(220,106,47)" fg:x="14681" fg:w="4"/><text x="40.4862%" y="271.50"></text></g><g><title>libsystem_kernel.dylib`kevent (4 samples, 0.01%)</title><rect x="40.2362%" y="245" width="0.0110%" height="15" fill="rgb(210,196,33)" fg:x="14681" fg:w="4"/><text x="40.4862%" y="255.50"></text></g><g><title>dkn-compute`&lt;libp2p_tcp::provider::tokio::Tcp as libp2p_tcp::provider::Provider&gt;::new_stream::_{{closure}} (5 samples, 0.01%)</title><rect x="40.2362%" y="325" width="0.0137%" height="15" fill="rgb(229,154,42)" fg:x="14681" fg:w="5"/><text x="40.4862%" y="335.50"></text></g><g><title>dkn-compute`&lt;libp2p_tcp::Transport&lt;T&gt; as libp2p_core::transport::Transport&gt;::dial::_{{closure}} (96 samples, 0.26%)</title><rect x="40.2362%" y="341" width="0.2631%" height="15" fill="rgb(228,114,26)" fg:x="14681" fg:w="96"/><text x="40.4862%" y="351.50"></text></g><g><title>libsystem_kernel.dylib`__connect (89 samples, 0.24%)</title><rect x="40.2554%" y="325" width="0.2439%" height="15" fill="rgb(208,144,1)" fg:x="14688" fg:w="89"/><text x="40.5054%" y="335.50"></text></g><g><title>dkn-compute`&lt;libp2p_core::transport::map::MapFuture&lt;T,F&gt; as core::future::future::Future&gt;::poll (159 samples, 0.44%)</title><rect x="40.0773%" y="357" width="0.4358%" height="15" fill="rgb(239,112,37)" fg:x="14623" fg:w="159"/><text x="40.3273%" y="367.50"></text></g><g><title>libsystem_kernel.dylib`close (5 samples, 0.01%)</title><rect x="40.4994%" y="341" width="0.0137%" height="15" fill="rgb(210,96,50)" fg:x="14777" fg:w="5"/><text x="40.7494%" y="351.50"></text></g><g><title>dkn-compute`&lt;futures_util::sink::send::Send&lt;Si,Item&gt; as core::future::future::Future&gt;::poll (4 samples, 0.01%)</title><rect x="40.5213%" y="341" width="0.0110%" height="15" fill="rgb(222,178,2)" fg:x="14785" fg:w="4"/><text x="40.7713%" y="351.50"></text></g><g><title>dkn-compute`&lt;libp2p_relay::priv_client::transport::Transport as libp2p_core::transport::Transport&gt;::dial::_{{closure}} (6 samples, 0.02%)</title><rect x="40.5213%" y="357" width="0.0164%" height="15" fill="rgb(226,74,18)" fg:x="14785" fg:w="6"/><text x="40.7713%" y="367.50"></text></g><g><title>dkn-compute`&lt;libp2p_core::transport::map::MapFuture&lt;T,F&gt; as core::future::future::Future&gt;::poll (173 samples, 0.47%)</title><rect x="40.0745%" y="373" width="0.4741%" height="15" fill="rgb(225,67,54)" fg:x="14622" fg:w="173"/><text x="40.3245%" y="383.50"></text></g><g><title>dkn-compute`core::ptr::drop_in_place&lt;core::option::Option&lt;(libp2p_core::transport::upgrade::Builder&lt;libp2p_relay::priv_client::transport::Transport&gt;::authenticate&lt;libp2p_relay::priv_client::Connection,libp2p_noise::io::Output&lt;multistream_select::negotiated::Negotiated&lt;libp2p_relay::priv_client::Connection&gt;&gt;,libp2p_noise::Config,libp2p_noise::Error&gt;::{{closure}},libp2p_core::connection::ConnectedPoint)&gt;&gt; (6 samples, 0.02%)</title><rect x="40.5624%" y="341" width="0.0164%" height="15" fill="rgb(251,92,32)" fg:x="14800" fg:w="6"/><text x="40.8124%" y="351.50"></text></g><g><title>dkn-compute`&lt;tokio::io::poll_evented::PollEvented&lt;E&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.01%)</title><rect x="40.5788%" y="293" width="0.0110%" height="15" fill="rgb(228,149,22)" fg:x="14806" fg:w="4"/><text x="40.8288%" y="303.50"></text></g><g><title>dkn-compute`tokio::runtime::io::driver::Handle::deregister_source (4 samples, 0.01%)</title><rect x="40.5788%" y="277" width="0.0110%" height="15" fill="rgb(243,54,13)" fg:x="14806" fg:w="4"/><text x="40.8288%" y="287.50"></text></g><g><title>libsystem_kernel.dylib`kevent (4 samples, 0.01%)</title><rect x="40.5788%" y="261" width="0.0110%" height="15" fill="rgb(243,180,28)" fg:x="14806" fg:w="4"/><text x="40.8288%" y="271.50"></text></g><g><title>dkn-compute`core::ptr::drop_in_place&lt;&lt;libp2p_tcp::Transport&lt;libp2p_tcp::provider::tokio::Tcp&gt; as libp2p_core::transport::Transport&gt;::dial::{{closure}}&gt; (13 samples, 0.04%)</title><rect x="40.5788%" y="325" width="0.0356%" height="15" fill="rgb(208,167,24)" fg:x="14806" fg:w="13"/><text x="40.8288%" y="335.50"></text></g><g><title>dkn-compute`core::ptr::drop_in_place&lt;&lt;libp2p_tcp::provider::tokio::Tcp as libp2p_tcp::provider::Provider&gt;::new_stream::{{closure}}&gt; (13 samples, 0.04%)</title><rect x="40.5788%" y="309" width="0.0356%" height="15" fill="rgb(245,73,45)" fg:x="14806" fg:w="13"/><text x="40.8288%" y="319.50"></text></g><g><title>libsystem_kernel.dylib`close (9 samples, 0.02%)</title><rect x="40.5898%" y="293" width="0.0247%" height="15" fill="rgb(237,203,48)" fg:x="14810" fg:w="9"/><text x="40.8398%" y="303.50"></text></g><g><title>dkn-compute`core::ptr::drop_in_place&lt;either::Either&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;libp2p_tcp::provider::tokio::TcpStream,std::io::error::Error&gt;+core::marker::Send&gt;&gt;&gt;&gt;,core::pin::Pin&lt;alloc::boxed::Box&lt;libp2p_core::transport::upgrade::Authenticate&lt;libp2p_tcp::provider::tokio::TcpStream,libp2p_noise::Config&gt;&gt;&gt;&gt;&gt; (14 samples, 0.04%)</title><rect x="40.5788%" y="341" width="0.0384%" height="15" fill="rgb(211,197,16)" fg:x="14806" fg:w="14"/><text x="40.8288%" y="351.50"></text></g><g><title>dkn-compute`core::ptr::drop_in_place$LT$libp2p_core..transport..map..MapFuture$LT$libp2p_core..either..EitherFuture$LT$libp2p_core..transport..map..MapFuture$LT$libp2p_core..transport..and_then..AndThenFuture$LT$libp2p_core..transport..and_then..AndThenFuture$LT$core..pin..Pin$LT$alloc..boxed..Box$LT$dyn$u20$core..future..future..Future$u2b$Output$u20$$u3d$$u20$core..result..Result$LT$libp2p_relay..priv_client..Connection$C$libp2p_relay..priv_client..transport..Error$GT$$u2b$core..marker..Send$GT$$GT$$C$libp2p_core..transport..upgrade..Builder$LT$libp2p_relay..priv_client..transport..Transport$GT$..authenticate$LT$libp2p_relay..priv_client..Connection$C$libp2p_noise..io..Output$LT$multistream_select..negotiated..Negotiated$LT$libp2p_relay..priv_client..Connection$GT$$GT$$C$libp2p_noise..Config$C$libp2p_noise..Error$GT$..$u7b$$u7b$closure$u7d$$u7d$$C$libp2p_core..transport..upgrade..Authenticate$LT$libp2p_relay..priv_client..Connection$C$libp2p_noise..Config$GT$$GT$$C$libp2p_core..transport..upgrade..Authenticated$LT$libp2 (24 samples, 0.07%)</title><rect x="40.5569%" y="357" width="0.0658%" height="15" fill="rgb(243,99,51)" fg:x="14798" fg:w="24"/><text x="40.8069%" y="367.50"></text></g><g><title>dkn-compute`core::ptr::drop_in_place$LT$futures_util..future..try_future..into_future..IntoFuture$LT$libp2p_core..transport..timeout..Timeout$LT$libp2p_core..transport..map..MapFuture$LT$libp2p_core..either..EitherFuture$LT$libp2p_core..transport..map..MapFuture$LT$libp2p_core..transport..and_then..AndThenFuture$LT$libp2p_core..transport..and_then..AndThenFuture$LT$core..pin..Pin$LT$alloc..boxed..Box$LT$dyn$u20$core..future..future..Future$u2b$Output$u20$$u3d$$u20$core..result..Result$LT$libp2p_relay..priv_client..Connection$C$libp2p_relay..priv_client..transport..Error$GT$$u2b$core..marker..Send$GT$$GT$$C$libp2p_core..transport..upgrade..Builder$LT$libp2p_relay..priv_client..transport..Transport$GT$..authenticate$LT$libp2p_relay..priv_client..Connection$C$libp2p_noise..io..Output$LT$multistream_select..negotiated..Negotiated$LT$libp2p_relay..priv_client..Connection$GT$$GT$$C$libp2p_noise..Config$C$libp2p_noise..Error$GT$..$u7b$$u7b$closure$u7d$$u7d$$C$libp2p_core..transport..upgrade..Authenticate$LT$libp2p_relay..priv_c2 (28 samples, 0.08%)</title><rect x="40.5487%" y="373" width="0.0767%" height="15" fill="rgb(215,123,29)" fg:x="14795" fg:w="28"/><text x="40.7987%" y="383.50"></text></g><g><title>dkn-compute`&lt;futures_util::future::future::map::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (204 samples, 0.56%)</title><rect x="40.0691%" y="389" width="0.5591%" height="15" fill="rgb(239,186,37)" fg:x="14620" fg:w="204"/><text x="40.3191%" y="399.50"></text></g><g><title>dkn-compute`&lt;tracing::instrument::Instrumented&lt;T&gt; as core::future::future::Future&gt;::poll (210 samples, 0.58%)</title><rect x="40.0608%" y="421" width="0.5755%" height="15" fill="rgb(252,136,39)" fg:x="14617" fg:w="210"/><text x="40.3108%" y="431.50"></text></g><g><title>dkn-compute`&lt;futures_util::future::future::map::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (207 samples, 0.57%)</title><rect x="40.0691%" y="405" width="0.5673%" height="15" fill="rgb(223,213,32)" fg:x="14620" fg:w="207"/><text x="40.3191%" y="415.50"></text></g><g><title>dkn-compute`&lt;futures_util::stream::futures_unordered::FuturesUnordered&lt;Fut&gt; as futures_core::stream::Stream&gt;::poll_next (212 samples, 0.58%)</title><rect x="40.0608%" y="437" width="0.5810%" height="15" fill="rgb(233,115,5)" fg:x="14617" fg:w="212"/><text x="40.3108%" y="447.50"></text></g><g><title>dkn-compute`&lt;libp2p_swarm::connection::pool::concurrent_dial::ConcurrentDial as core::future::future::Future&gt;::poll (213 samples, 0.58%)</title><rect x="40.0608%" y="453" width="0.5838%" height="15" fill="rgb(207,226,44)" fg:x="14617" fg:w="213"/><text x="40.3108%" y="463.50"></text></g><g><title>dkn-compute`alloc::sync::Arc&lt;T,A&gt;::drop_slow (14 samples, 0.04%)</title><rect x="40.6720%" y="453" width="0.0384%" height="15" fill="rgb(208,126,0)" fg:x="14840" fg:w="14"/><text x="40.9220%" y="463.50"></text></g><g><title>dkn-compute`futures_channel::mpsc::Receiver&lt;T&gt;::next_message (19 samples, 0.05%)</title><rect x="40.7104%" y="453" width="0.0521%" height="15" fill="rgb(244,66,21)" fg:x="14854" fg:w="19"/><text x="40.9604%" y="463.50"></text></g><g><title>dkn-compute`futures_channel::mpsc::queue::Queue&lt;T&gt;::pop_spin (5 samples, 0.01%)</title><rect x="40.7488%" y="437" width="0.0137%" height="15" fill="rgb(222,97,12)" fg:x="14868" fg:w="5"/><text x="40.9988%" y="447.50"></text></g><g><title>dkn-compute`futures_channel::mpsc::queue::Queue&lt;T&gt;::pop_spin (5 samples, 0.01%)</title><rect x="40.7625%" y="453" width="0.0137%" height="15" fill="rgb(219,213,19)" fg:x="14873" fg:w="5"/><text x="41.0125%" y="463.50"></text></g><g><title>dkn-compute`&lt;T as libp2p_swarm::upgrade::UpgradeInfoSend&gt;::protocol_info (5 samples, 0.01%)</title><rect x="41.4093%" y="437" width="0.0137%" height="15" fill="rgb(252,169,30)" fg:x="15109" fg:w="5"/><text x="41.6593%" y="447.50"></text></g><g><title>dkn-compute`&lt;T as libp2p_swarm::upgrade::InboundUpgradeSend&gt;::upgrade_inbound (4 samples, 0.01%)</title><rect x="41.5710%" y="389" width="0.0110%" height="15" fill="rgb(206,32,51)" fg:x="15168" fg:w="4"/><text x="41.8210%" y="399.50"></text></g><g><title>dkn-compute`&lt;T as libp2p_swarm::upgrade::InboundUpgradeSend&gt;::upgrade_inbound (4 samples, 0.01%)</title><rect x="41.5710%" y="373" width="0.0110%" height="15" fill="rgb(250,172,42)" fg:x="15168" fg:w="4"/><text x="41.8210%" y="383.50"></text></g><g><title>dkn-compute`&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (4 samples, 0.01%)</title><rect x="41.5902%" y="357" width="0.0110%" height="15" fill="rgb(209,34,43)" fg:x="15175" fg:w="4"/><text x="41.8402%" y="367.50"></text></g><g><title>dkn-compute`libp2p_swarm::connection::StreamUpgrade&lt;UserData,TOk,TErr&gt;::new_inbound::_{{closure}} (13 samples, 0.04%)</title><rect x="41.5682%" y="405" width="0.0356%" height="15" fill="rgb(223,11,35)" fg:x="15167" fg:w="13"/><text x="41.8182%" y="415.50"></text></g><g><title>dkn-compute`multistream_select::listener_select::listener_select_proto (5 samples, 0.01%)</title><rect x="41.5902%" y="389" width="0.0137%" height="15" fill="rgb(251,219,26)" fg:x="15175" fg:w="5"/><text x="41.8402%" y="399.50"></text></g><g><title>dkn-compute`&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.01%)</title><rect x="41.5902%" y="373" width="0.0137%" height="15" fill="rgb(231,119,3)" fg:x="15175" fg:w="5"/><text x="41.8402%" y="383.50"></text></g><g><title>dkn-compute`&lt;multistream_select::dialer_select::DialerSelectFuture&lt;R,I&gt; as core::future::future::Future&gt;::poll (17 samples, 0.05%)</title><rect x="41.6203%" y="389" width="0.0466%" height="15" fill="rgb(216,97,11)" fg:x="15186" fg:w="17"/><text x="41.8703%" y="399.50"></text></g><g><title>dkn-compute`&lt;libp2p_swarm::connection::StreamUpgrade&lt;UserData,TOk,TErr&gt; as core::future::future::Future&gt;::poll (50 samples, 0.14%)</title><rect x="41.5490%" y="421" width="0.1370%" height="15" fill="rgb(223,59,9)" fg:x="15160" fg:w="50"/><text x="41.7990%" y="431.50"></text></g><g><title>dkn-compute`libp2p_swarm::connection::StreamUpgrade&lt;UserData,TOk,TErr&gt;::new_outbound::_{{closure}} (30 samples, 0.08%)</title><rect x="41.6039%" y="405" width="0.0822%" height="15" fill="rgb(233,93,31)" fg:x="15180" fg:w="30"/><text x="41.8539%" y="415.50"></text></g><g><title>dkn-compute`&lt;futures_timer::native::delay::Delay as core::ops::drop::Drop&gt;::drop (9 samples, 0.02%)</title><rect x="41.6916%" y="389" width="0.0247%" height="15" fill="rgb(239,81,33)" fg:x="15212" fg:w="9"/><text x="41.9416%" y="399.50"></text></g><g><title>dkn-compute`futures_timer::native::global::raw_wake (9 samples, 0.02%)</title><rect x="41.6916%" y="373" width="0.0247%" height="15" fill="rgb(213,120,34)" fg:x="15212" fg:w="9"/><text x="41.9416%" y="383.50"></text></g><g><title>libdispatch.dylib`_dispatch_semaphore_signal_slow (9 samples, 0.02%)</title><rect x="41.6916%" y="357" width="0.0247%" height="15" fill="rgb(243,49,53)" fg:x="15212" fg:w="9"/><text x="41.9416%" y="367.50"></text></g><g><title>libsystem_kernel.dylib`semaphore_signal_trap (9 samples, 0.02%)</title><rect x="41.6916%" y="341" width="0.0247%" height="15" fill="rgb(247,216,33)" fg:x="15212" fg:w="9"/><text x="41.9416%" y="351.50"></text></g><g><title>dkn-compute`core::ptr::drop_in_place$LT$core..option..Option$LT$libp2p_swarm..connection..StreamUpgrade$LT$either..Either$LT$either..Either$LT$either..Either$LT$either..Either$LT$either..Either$LT$either..Either$LT$$LP$$RP$$C$void..Void$GT$$C$$LP$$RP$$GT$$C$$LP$$RP$$GT$$C$$LP$$RP$$GT$$C$$LP$$RP$$GT$$C$either..Either$LT$$LP$$RP$$C$void..Void$GT$$GT$$C$futures_util..future..either..Either$LT$futures_util..future..either..Either$LT$futures_util..future..either..Either$LT$futures_util..future..either..Either$LT$futures_util..future..either..Either$LT$futures_util..future..either..Either$LT$libp2p_swarm..stream..Stream$C$void..Void$GT$$C$$LP$asynchronous_codec..framed..Framed$LT$libp2p_swarm..stream..Stream$C$libp2p_gossipsub..protocol..GossipsubCodec$GT$$C$libp2p_gossipsub..types..PeerKind$RP$$GT$$C$asynchronous_codec..framed..Framed$LT$libp2p_swarm..stream..Stream$C$libp2p_kad..protocol..Codec$LT$libp2p_kad..protocol..KadRequestMsg$C$libp2p_kad..protocol..KadResponseMsg$GT$$GT$$GT$$C$futures_util..future..either..Either$LT$2 (10 samples, 0.03%)</title><rect x="41.6916%" y="405" width="0.0274%" height="15" fill="rgb(226,26,14)" fg:x="15212" fg:w="10"/><text x="41.9416%" y="415.50"></text></g><g><title>dkn-compute`core::ptr::drop_in_place$LT$$LT$futures_util..stream..futures_unordered..FuturesUnordered$LT$Fut$GT$$u20$as$u20$futures_core..stream..Stream$GT$..poll_next..Bomb$LT$libp2p_swarm..connection..StreamUpgrade$LT$either..Either$LT$either..Either$LT$either..Either$LT$either..Either$LT$either..Either$LT$either..Either$LT$$LP$$RP$$C$void..Void$GT$$C$$LP$$RP$$GT$$C$$LP$$RP$$GT$$C$$LP$$RP$$GT$$C$$LP$$RP$$GT$$C$either..Either$LT$$LP$$RP$$C$void..Void$GT$$GT$$C$futures_util..future..either..Either$LT$futures_util..future..either..Either$LT$futures_util..future..either..Either$LT$futures_util..future..either..Either$LT$futures_util..future..either..Either$LT$futures_util..future..either..Either$LT$libp2p_swarm..stream..Stream$C$void..Void$GT$$C$$LP$asynchronous_codec..framed..Framed$LT$libp2p_swarm..stream..Stream$C$libp2p_gossipsub..protocol..GossipsubCodec$GT$$C$libp2p_gossipsub..types..PeerKind$RP$$GT$$C$asynchronous_codec..framed..Framed$LT$libp2p_swarm..stream..Stream$C$libp2p_kad..protocol..Codec$LT$libp2p_kad..prot2 (11 samples, 0.03%)</title><rect x="41.6916%" y="421" width="0.0301%" height="15" fill="rgb(215,49,53)" fg:x="15212" fg:w="11"/><text x="41.9416%" y="431.50"></text></g><g><title>dkn-compute`&lt;futures_util::stream::futures_unordered::FuturesUnordered&lt;Fut&gt; as futures_core::stream::Stream&gt;::poll_next (232 samples, 0.64%)</title><rect x="41.4230%" y="437" width="0.6358%" height="15" fill="rgb(245,162,40)" fg:x="15114" fg:w="232"/><text x="41.6730%" y="447.50"></text></g><g><title>dkn-compute`futures_core::task::__internal::atomic_waker::AtomicWaker::register (123 samples, 0.34%)</title><rect x="41.7217%" y="421" width="0.3371%" height="15" fill="rgb(229,68,17)" fg:x="15223" fg:w="123"/><text x="41.9717%" y="431.50"></text></g><g><title>dkn-compute`&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (7 samples, 0.02%)</title><rect x="42.0588%" y="437" width="0.0192%" height="15" fill="rgb(213,182,10)" fg:x="15346" fg:w="7"/><text x="42.3088%" y="447.50"></text></g><g><title>dkn-compute`&lt;futures_util::stream::select_all::SelectAll&lt;St&gt; as futures_core::stream::Stream&gt;::poll_next (4 samples, 0.01%)</title><rect x="42.3356%" y="405" width="0.0110%" height="15" fill="rgb(245,125,30)" fg:x="15447" fg:w="4"/><text x="42.5856%" y="415.50"></text></g><g><title>dkn-compute`&lt;libp2p_noise::io::Output&lt;T&gt; as futures_io::if_std::AsyncWrite&gt;::poll_flush (5 samples, 0.01%)</title><rect x="42.3466%" y="405" width="0.0137%" height="15" fill="rgb(232,202,2)" fg:x="15451" fg:w="5"/><text x="42.5966%" y="415.50"></text></g><g><title>dkn-compute`&lt;yamux::frame::io::Io&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (7 samples, 0.02%)</title><rect x="42.3603%" y="405" width="0.0192%" height="15" fill="rgb(237,140,51)" fg:x="15456" fg:w="7"/><text x="42.6103%" y="415.50"></text></g><g><title>dkn-compute`&lt;yamux::frame::io::Io&lt;T&gt; as futures_sink::Sink&lt;yamux::frame::Frame&lt;()&gt;&gt;&gt;::poll_flush (4 samples, 0.01%)</title><rect x="42.3795%" y="405" width="0.0110%" height="15" fill="rgb(236,157,25)" fg:x="15463" fg:w="4"/><text x="42.6295%" y="415.50"></text></g><g><title>dkn-compute`&lt;yamux::frame::io::Io&lt;T&gt; as futures_sink::Sink&lt;yamux::frame::Frame&lt;()&gt;&gt;&gt;::poll_ready (6 samples, 0.02%)</title><rect x="42.3904%" y="405" width="0.0164%" height="15" fill="rgb(219,209,0)" fg:x="15467" fg:w="6"/><text x="42.6404%" y="415.50"></text></g><g><title>dkn-compute`core::ptr::drop_in_place&lt;tracing::span::Span&gt; (14 samples, 0.04%)</title><rect x="42.4069%" y="405" width="0.0384%" height="15" fill="rgb(240,116,54)" fg:x="15473" fg:w="14"/><text x="42.6569%" y="415.50"></text></g><g><title>dkn-compute`tracing::span::Span::log (5 samples, 0.01%)</title><rect x="42.4316%" y="389" width="0.0137%" height="15" fill="rgb(216,10,36)" fg:x="15482" fg:w="5"/><text x="42.6816%" y="399.50"></text></g><g><title>dkn-compute`tracing::span::Span::log (25 samples, 0.07%)</title><rect x="42.4644%" y="405" width="0.0685%" height="15" fill="rgb(222,72,44)" fg:x="15494" fg:w="25"/><text x="42.7144%" y="415.50"></text></g><g><title>dkn-compute`tracing::span::Span::record_all (14 samples, 0.04%)</title><rect x="42.5330%" y="405" width="0.0384%" height="15" fill="rgb(232,159,9)" fg:x="15519" fg:w="14"/><text x="42.7830%" y="415.50"></text></g><g><title>dkn-compute`tracing::span::Span::log (5 samples, 0.01%)</title><rect x="42.5576%" y="389" width="0.0137%" height="15" fill="rgb(210,39,32)" fg:x="15528" fg:w="5"/><text x="42.8076%" y="399.50"></text></g><g><title>dkn-compute`tracing_core::span::Record::is_empty (5 samples, 0.01%)</title><rect x="42.5713%" y="405" width="0.0137%" height="15" fill="rgb(216,194,45)" fg:x="15533" fg:w="5"/><text x="42.8213%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (6 samples, 0.02%)</title><rect x="43.3086%" y="309" width="0.0164%" height="15" fill="rgb(218,18,35)" fg:x="15802" fg:w="6"/><text x="43.5586%" y="319.50"></text></g><g><title>dkn-compute`futures_channel::mpsc::queue::Queue&lt;T&gt;::pop_spin (26 samples, 0.07%)</title><rect x="43.2592%" y="325" width="0.0713%" height="15" fill="rgb(207,83,51)" fg:x="15784" fg:w="26"/><text x="43.5092%" y="335.50"></text></g><g><title>dkn-compute`futures_channel::mpsc::Receiver&lt;T&gt;::next_message (35 samples, 0.10%)</title><rect x="43.2401%" y="341" width="0.0959%" height="15" fill="rgb(225,63,43)" fg:x="15777" fg:w="35"/><text x="43.4901%" y="351.50"></text></g><g><title>dkn-compute`futures_channel::mpsc::queue::Queue&lt;T&gt;::pop_spin (4 samples, 0.01%)</title><rect x="43.3360%" y="341" width="0.0110%" height="15" fill="rgb(207,57,36)" fg:x="15812" fg:w="4"/><text x="43.5860%" y="351.50"></text></g><g><title>dkn-compute`&lt;futures_channel::mpsc::Receiver&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (45 samples, 0.12%)</title><rect x="43.2291%" y="357" width="0.1233%" height="15" fill="rgb(216,99,33)" fg:x="15773" fg:w="45"/><text x="43.4791%" y="367.50"></text></g><g><title>dkn-compute`&lt;futures_util::stream::stream::into_future::StreamFuture&lt;St&gt; as core::future::future::Future&gt;::poll (59 samples, 0.16%)</title><rect x="43.1962%" y="373" width="0.1617%" height="15" fill="rgb(225,42,16)" fg:x="15761" fg:w="59"/><text x="43.4462%" y="383.50"></text></g><g><title>dkn-compute`futures_core::task::__internal::atomic_waker::AtomicWaker::register (17 samples, 0.05%)</title><rect x="43.3881%" y="373" width="0.0466%" height="15" fill="rgb(220,201,45)" fg:x="15831" fg:w="17"/><text x="43.6381%" y="383.50"></text></g><g><title>dkn-compute`futures_util::stream::futures_unordered::FuturesUnordered&lt;Fut&gt;::push (9 samples, 0.02%)</title><rect x="43.4346%" y="373" width="0.0247%" height="15" fill="rgb(225,33,4)" fg:x="15848" fg:w="9"/><text x="43.6846%" y="383.50"></text></g><g><title>dkn-compute`futures_util::stream::futures_unordered::FuturesUnordered&lt;Fut&gt;::release_task (26 samples, 0.07%)</title><rect x="43.4593%" y="373" width="0.0713%" height="15" fill="rgb(224,33,50)" fg:x="15857" fg:w="26"/><text x="43.7093%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (17 samples, 0.05%)</title><rect x="43.4840%" y="357" width="0.0466%" height="15" fill="rgb(246,198,51)" fg:x="15866" fg:w="17"/><text x="43.7340%" y="367.50"></text></g><g><title>dkn-compute`&lt;futures_util::stream::select_all::SelectAll&lt;St&gt; as futures_core::stream::Stream&gt;::poll_next (180 samples, 0.49%)</title><rect x="43.0701%" y="389" width="0.4933%" height="15" fill="rgb(205,22,4)" fg:x="15715" fg:w="180"/><text x="43.3201%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (8 samples, 0.02%)</title><rect x="43.5415%" y="373" width="0.0219%" height="15" fill="rgb(206,3,8)" fg:x="15887" fg:w="8"/><text x="43.7915%" y="383.50"></text></g><g><title>dkn-compute`&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Write&gt;::write (20 samples, 0.05%)</title><rect x="43.5826%" y="341" width="0.0548%" height="15" fill="rgb(251,23,15)" fg:x="15902" fg:w="20"/><text x="43.8326%" y="351.50"></text></g><g><title>libsystem_kernel.dylib`__sendto (20 samples, 0.05%)</title><rect x="43.5826%" y="325" width="0.0548%" height="15" fill="rgb(252,88,28)" fg:x="15902" fg:w="20"/><text x="43.8326%" y="335.50"></text></g><g><title>dkn-compute`tokio::runtime::io::registration::Registration::poll_ready (10 samples, 0.03%)</title><rect x="43.6375%" y="341" width="0.0274%" height="15" fill="rgb(212,127,14)" fg:x="15922" fg:w="10"/><text x="43.8875%" y="351.50"></text></g><g><title>dkn-compute`tokio::runtime::io::scheduled_io::ScheduledIo::poll_readiness (5 samples, 0.01%)</title><rect x="43.6512%" y="325" width="0.0137%" height="15" fill="rgb(247,145,37)" fg:x="15927" fg:w="5"/><text x="43.9012%" y="335.50"></text></g><g><title>dkn-compute`&lt;asynchronous_codec::framed::Framed&lt;T,U&gt; as futures_sink::Sink&lt;&lt;U as asynchronous_codec::encoder::Encoder&gt;::Item&gt;&gt;::poll_ready (38 samples, 0.10%)</title><rect x="43.5744%" y="373" width="0.1041%" height="15" fill="rgb(209,117,53)" fg:x="15899" fg:w="38"/><text x="43.8244%" y="383.50"></text></g><g><title>dkn-compute`tokio::net::tcp::stream::TcpStream::poll_write_priv (36 samples, 0.10%)</title><rect x="43.5799%" y="357" width="0.0987%" height="15" fill="rgb(212,90,42)" fg:x="15901" fg:w="36"/><text x="43.8299%" y="367.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (5 samples, 0.01%)</title><rect x="43.6649%" y="341" width="0.0137%" height="15" fill="rgb(218,164,37)" fg:x="15932" fg:w="5"/><text x="43.9149%" y="351.50"></text></g><g><title>dkn-compute`&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Write&gt;::write (393 samples, 1.08%)</title><rect x="43.6950%" y="341" width="1.0771%" height="15" fill="rgb(246,65,34)" fg:x="15943" fg:w="393"/><text x="43.9450%" y="351.50"></text></g><g><title>libsystem_kernel.dylib`__sendto (392 samples, 1.07%)</title><rect x="43.6978%" y="325" width="1.0744%" height="15" fill="rgb(231,100,33)" fg:x="15944" fg:w="392"/><text x="43.9478%" y="335.50"></text></g><g><title>dkn-compute`tokio::runtime::io::registration::Registration::poll_ready (8 samples, 0.02%)</title><rect x="44.7721%" y="341" width="0.0219%" height="15" fill="rgb(228,126,14)" fg:x="16336" fg:w="8"/><text x="45.0221%" y="351.50"></text></g><g><title>dkn-compute`&lt;asynchronous_codec::framed_write::FramedWrite2&lt;T&gt; as futures_sink::Sink&lt;&lt;T as asynchronous_codec::encoder::Encoder&gt;::Item&gt;&gt;::poll_flush (411 samples, 1.13%)</title><rect x="43.6786%" y="373" width="1.1264%" height="15" fill="rgb(215,173,21)" fg:x="15937" fg:w="411"/><text x="43.9286%" y="383.50"></text></g><g><title>dkn-compute`tokio::net::tcp::stream::TcpStream::poll_write_priv (405 samples, 1.11%)</title><rect x="43.6950%" y="357" width="1.1100%" height="15" fill="rgb(210,6,40)" fg:x="15943" fg:w="405"/><text x="43.9450%" y="367.50"></text></g><g><title>dkn-compute`&lt;snow::resolvers::ring::CipherChaChaPoly as snow::types::Cipher&gt;::encrypt (106 samples, 0.29%)</title><rect x="44.8214%" y="341" width="0.2905%" height="15" fill="rgb(212,48,18)" fg:x="16354" fg:w="106"/><text x="45.0714%" y="351.50"></text></g><g><title>dkn-compute`ring::aead::chacha20_poly1305::chacha20_poly1305_seal (102 samples, 0.28%)</title><rect x="44.8324%" y="325" width="0.2796%" height="15" fill="rgb(230,214,11)" fg:x="16358" fg:w="102"/><text x="45.0824%" y="335.50"></text></g><g><title>dkn-compute`ring_core_0_17_8_chacha20_poly1305_seal (100 samples, 0.27%)</title><rect x="44.8379%" y="309" width="0.2741%" height="15" fill="rgb(254,105,39)" fg:x="16360" fg:w="100"/><text x="45.0879%" y="319.50"></text></g><g><title>dkn-compute`snow::transportstate::TransportState::write_message (112 samples, 0.31%)</title><rect x="44.8214%" y="357" width="0.3070%" height="15" fill="rgb(245,158,5)" fg:x="16354" fg:w="112"/><text x="45.0714%" y="367.50"></text></g><g><title>dkn-compute`&lt;libp2p_noise::io::framed::Codec&lt;snow::transportstate::TransportState&gt; as asynchronous_codec::encoder::Encoder&gt;::encode (122 samples, 0.33%)</title><rect x="44.8050%" y="373" width="0.3344%" height="15" fill="rgb(249,208,11)" fg:x="16348" fg:w="122"/><text x="45.0550%" y="383.50"></text></g><g><title>dkn-compute`&lt;libp2p_noise::io::Output&lt;T&gt; as futures_io::if_std::AsyncWrite&gt;::poll_flush (581 samples, 1.59%)</title><rect x="43.5635%" y="389" width="1.5923%" height="15" fill="rgb(210,39,28)" fg:x="15895" fg:w="581"/><text x="43.8135%" y="399.50"></text></g><g><title>dkn-compute`tokio::net::tcp::stream::TcpStream::poll_write_priv (4 samples, 0.01%)</title><rect x="45.1448%" y="373" width="0.0110%" height="15" fill="rgb(211,56,53)" fg:x="16472" fg:w="4"/><text x="45.3948%" y="383.50"></text></g><g><title>dkn-compute`&lt;libp2p_noise::io::Output&lt;T&gt; as futures_io::if_std::AsyncWrite&gt;::poll_write (17 samples, 0.05%)</title><rect x="45.1558%" y="389" width="0.0466%" height="15" fill="rgb(226,201,30)" fg:x="16476" fg:w="17"/><text x="45.4058%" y="399.50"></text></g><g><title>dkn-compute`&lt;multistream_select::negotiated::Negotiated&lt;TInner&gt; as futures_io::if_std::AsyncRead&gt;::poll_read (6 samples, 0.02%)</title><rect x="45.2051%" y="389" width="0.0164%" height="15" fill="rgb(239,101,34)" fg:x="16494" fg:w="6"/><text x="45.4551%" y="399.50"></text></g><g><title>dkn-compute`&lt;multistream_select::negotiated::Negotiated&lt;TInner&gt; as futures_io::if_std::AsyncWrite&gt;::poll_write (14 samples, 0.04%)</title><rect x="45.2216%" y="389" width="0.0384%" height="15" fill="rgb(226,209,5)" fg:x="16500" fg:w="14"/><text x="45.4716%" y="399.50"></text></g><g><title>dkn-compute`&lt;libp2p_noise::io::Output&lt;T&gt; as futures_io::if_std::AsyncRead&gt;::poll_read (9 samples, 0.02%)</title><rect x="45.5888%" y="373" width="0.0247%" height="15" fill="rgb(250,105,47)" fg:x="16634" fg:w="9"/><text x="45.8388%" y="383.50"></text></g><g><title>dkn-compute`&lt;asynchronous_codec::framed_read::FramedRead2&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (7 samples, 0.02%)</title><rect x="45.6683%" y="357" width="0.0192%" height="15" fill="rgb(230,72,3)" fg:x="16663" fg:w="7"/><text x="45.9183%" y="367.50"></text></g><g><title>dkn-compute`&lt;bytes::bytes_mut::BytesMut as core::ops::drop::Drop&gt;::drop (4 samples, 0.01%)</title><rect x="46.0191%" y="309" width="0.0110%" height="15" fill="rgb(232,218,39)" fg:x="16791" fg:w="4"/><text x="46.2691%" y="319.50"></text></g><g><title>dkn-compute`&lt;snow::resolvers::ring::CipherChaChaPoly as snow::types::Cipher&gt;::decrypt (9 samples, 0.02%)</title><rect x="46.0301%" y="309" width="0.0247%" height="15" fill="rgb(248,166,6)" fg:x="16795" fg:w="9"/><text x="46.2801%" y="319.50"></text></g><g><title>dkn-compute`bytes::bytes_mut::BytesMut::advance_unchecked (6 samples, 0.02%)</title><rect x="46.0767%" y="309" width="0.0164%" height="15" fill="rgb(247,89,20)" fg:x="16812" fg:w="6"/><text x="46.3267%" y="319.50"></text></g><g><title>dkn-compute`bytes::bytes_mut::BytesMut::split_to (8 samples, 0.02%)</title><rect x="46.0931%" y="309" width="0.0219%" height="15" fill="rgb(248,130,54)" fg:x="16818" fg:w="8"/><text x="46.3431%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_remove_ptr (5 samples, 0.01%)</title><rect x="46.2082%" y="245" width="0.0137%" height="15" fill="rgb(234,196,4)" fg:x="16860" fg:w="5"/><text x="46.4582%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (11 samples, 0.03%)</title><rect x="46.2000%" y="277" width="0.0301%" height="15" fill="rgb(250,143,31)" fg:x="16857" fg:w="11"/><text x="46.4500%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_from_free_list (11 samples, 0.03%)</title><rect x="46.2000%" y="261" width="0.0301%" height="15" fill="rgb(211,110,34)" fg:x="16857" fg:w="11"/><text x="46.4500%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (6 samples, 0.02%)</title><rect x="46.2548%" y="261" width="0.0164%" height="15" fill="rgb(215,124,48)" fg:x="16877" fg:w="6"/><text x="46.5048%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`_tiny_check_and_zero_inline_meta_from_freelist (4 samples, 0.01%)</title><rect x="46.3754%" y="245" width="0.0110%" height="15" fill="rgb(216,46,13)" fg:x="16921" fg:w="4"/><text x="46.6254%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (85 samples, 0.23%)</title><rect x="46.2302%" y="277" width="0.2330%" height="15" fill="rgb(205,184,25)" fg:x="16868" fg:w="85"/><text x="46.4802%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (70 samples, 0.19%)</title><rect x="46.2713%" y="261" width="0.1918%" height="15" fill="rgb(228,1,10)" fg:x="16883" fg:w="70"/><text x="46.5213%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (28 samples, 0.08%)</title><rect x="46.3864%" y="245" width="0.0767%" height="15" fill="rgb(213,116,27)" fg:x="16925" fg:w="28"/><text x="46.6364%" y="255.50"></text></g><g><title>libsystem_platform.dylib`__bzero (5 samples, 0.01%)</title><rect x="46.4631%" y="277" width="0.0137%" height="15" fill="rgb(241,95,50)" fg:x="16953" fg:w="5"/><text x="46.7131%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (126 samples, 0.35%)</title><rect x="46.1671%" y="293" width="0.3453%" height="15" fill="rgb(238,48,32)" fg:x="16845" fg:w="126"/><text x="46.4171%" y="303.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (13 samples, 0.04%)</title><rect x="46.4768%" y="277" width="0.0356%" height="15" fill="rgb(235,113,49)" fg:x="16958" fg:w="13"/><text x="46.7268%" y="287.50"></text></g><g><title>dkn-compute`bytes::bytes_mut::BytesMut::zeroed (147 samples, 0.40%)</title><rect x="46.1151%" y="309" width="0.4029%" height="15" fill="rgb(205,127,43)" fg:x="16826" fg:w="147"/><text x="46.3651%" y="319.50"></text></g><g><title>dkn-compute`bytes::bytes_mut::shared_v_drop (4 samples, 0.01%)</title><rect x="46.5179%" y="309" width="0.0110%" height="15" fill="rgb(250,162,2)" fg:x="16973" fg:w="4"/><text x="46.7679%" y="319.50"></text></g><g><title>dkn-compute`bytes::bytes_mut::BytesMut::advance_unchecked (6 samples, 0.02%)</title><rect x="46.6851%" y="293" width="0.0164%" height="15" fill="rgb(220,13,41)" fg:x="17034" fg:w="6"/><text x="46.9351%" y="303.50"></text></g><g><title>dkn-compute`libp2p_noise::io::framed::decode_length_prefixed (83 samples, 0.23%)</title><rect x="46.5289%" y="309" width="0.2275%" height="15" fill="rgb(249,221,25)" fg:x="16977" fg:w="83"/><text x="46.7789%" y="319.50"></text></g><g><title>dkn-compute`bytes::bytes_mut::BytesMut::split_to (20 samples, 0.05%)</title><rect x="46.7016%" y="293" width="0.0548%" height="15" fill="rgb(215,208,19)" fg:x="17040" fg:w="20"/><text x="46.9516%" y="303.50"></text></g><g><title>dkn-compute`ring::aead::chacha20_poly1305::chacha20_poly1305_open (14 samples, 0.04%)</title><rect x="46.8276%" y="277" width="0.0384%" height="15" fill="rgb(236,175,2)" fg:x="17086" fg:w="14"/><text x="47.0776%" y="287.50"></text></g><g><title>dkn-compute`0x0000000103492600 (4 samples, 0.01%)</title><rect x="46.9784%" y="245" width="0.0110%" height="15" fill="rgb(241,52,2)" fg:x="17141" fg:w="4"/><text x="47.2284%" y="255.50"></text></g><g><title>dkn-compute`ring::aead::chacha20_poly1305::chacha20_poly1305_open (1,231 samples, 3.37%)</title><rect x="46.9400%" y="261" width="3.3738%" height="15" fill="rgb(248,140,14)" fg:x="17127" fg:w="1231"/><text x="47.1900%" y="271.50">dkn..</text></g><g><title>dkn-compute`ring_core_0_17_8_chacha20_poly1305_open (1,213 samples, 3.32%)</title><rect x="46.9893%" y="245" width="3.3245%" height="15" fill="rgb(253,22,42)" fg:x="17145" fg:w="1213"/><text x="47.2393%" y="255.50">dkn..</text></g><g><title>dkn-compute`ring::aead::less_safe_key::open_within_ (1,260 samples, 3.45%)</title><rect x="46.8660%" y="277" width="3.4533%" height="15" fill="rgb(234,61,47)" fg:x="17100" fg:w="1260"/><text x="47.1160%" y="287.50">dkn..</text></g><g><title>dkn-compute`&lt;snow::resolvers::ring::CipherChaChaPoly as snow::types::Cipher&gt;::decrypt (1,303 samples, 3.57%)</title><rect x="46.7728%" y="293" width="3.5711%" height="15" fill="rgb(208,226,15)" fg:x="17066" fg:w="1303"/><text x="47.0228%" y="303.50">dkn-..</text></g><g><title>dkn-compute`ring_core_0_17_8_CRYPTO_memcmp (9 samples, 0.02%)</title><rect x="50.3193%" y="277" width="0.0247%" height="15" fill="rgb(217,221,4)" fg:x="18360" fg:w="9"/><text x="50.5693%" y="287.50"></text></g><g><title>dkn-compute`snow::transportstate::TransportState::read_message (1,351 samples, 3.70%)</title><rect x="46.7564%" y="309" width="3.7027%" height="15" fill="rgb(212,174,34)" fg:x="17060" fg:w="1351"/><text x="47.0064%" y="319.50">dkn-..</text></g><g><title>libsystem_platform.dylib`_platform_memmove (38 samples, 0.10%)</title><rect x="50.3549%" y="293" width="0.1041%" height="15" fill="rgb(253,83,4)" fg:x="18373" fg:w="38"/><text x="50.6049%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_calloc (16 samples, 0.04%)</title><rect x="50.4591%" y="309" width="0.0439%" height="15" fill="rgb(250,195,49)" fg:x="18411" fg:w="16"/><text x="50.7091%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (6 samples, 0.02%)</title><rect x="50.5029%" y="309" width="0.0164%" height="15" fill="rgb(241,192,25)" fg:x="18427" fg:w="6"/><text x="50.7529%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (20 samples, 0.05%)</title><rect x="50.5276%" y="309" width="0.0548%" height="15" fill="rgb(208,124,10)" fg:x="18436" fg:w="20"/><text x="50.7776%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`szone_calloc (10 samples, 0.03%)</title><rect x="50.5824%" y="309" width="0.0274%" height="15" fill="rgb(222,33,0)" fg:x="18456" fg:w="10"/><text x="50.8324%" y="319.50"></text></g><g><title>dkn-compute`&lt;libp2p_noise::io::framed::Codec&lt;snow::transportstate::TransportState&gt; as asynchronous_codec::decoder::Decoder&gt;::decode (1,715 samples, 4.70%)</title><rect x="45.9150%" y="325" width="4.7003%" height="15" fill="rgb(234,209,28)" fg:x="16753" fg:w="1715"/><text x="46.1650%" y="335.50">dkn-c..</text></g><g><title>dkn-compute`&lt;libp2p_tcp::provider::tokio::TcpStream as futures_io::if_std::AsyncRead&gt;::poll_read (4 samples, 0.01%)</title><rect x="50.6153%" y="325" width="0.0110%" height="15" fill="rgb(224,11,23)" fg:x="18468" fg:w="4"/><text x="50.8653%" y="335.50"></text></g><g><title>dkn-compute`&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Read&gt;::read (2,663 samples, 7.30%)</title><rect x="50.8044%" y="277" width="7.2985%" height="15" fill="rgb(232,99,1)" fg:x="18537" fg:w="2663"/><text x="51.0544%" y="287.50">dkn-comput..</text></g><g><title>libsystem_kernel.dylib`__recvfrom (2,653 samples, 7.27%)</title><rect x="50.8318%" y="261" width="7.2711%" height="15" fill="rgb(237,95,45)" fg:x="18547" fg:w="2653"/><text x="51.0818%" y="271.50">libsystem_..</text></g><g><title>dkn-compute`tokio::runtime::io::scheduled_io::ScheduledIo::poll_readiness (28 samples, 0.08%)</title><rect x="58.1577%" y="261" width="0.0767%" height="15" fill="rgb(208,109,11)" fg:x="21220" fg:w="28"/><text x="58.4077%" y="271.50"></text></g><g><title>dkn-compute`tokio::runtime::io::registration::Registration::poll_ready (51 samples, 0.14%)</title><rect x="58.1029%" y="277" width="0.1398%" height="15" fill="rgb(216,190,48)" fg:x="21200" fg:w="51"/><text x="58.3529%" y="287.50"></text></g><g><title>dkn-compute`tokio::net::tcp::stream::TcpStream::poll_read_priv (2,758 samples, 7.56%)</title><rect x="50.7386%" y="293" width="7.5589%" height="15" fill="rgb(251,171,36)" fg:x="18513" fg:w="2758"/><text x="50.9886%" y="303.50">dkn-comput..</text></g><g><title>libdyld.dylib`tlv_get_addr (17 samples, 0.05%)</title><rect x="58.2509%" y="277" width="0.0466%" height="15" fill="rgb(230,62,22)" fg:x="21254" fg:w="17"/><text x="58.5009%" y="287.50"></text></g><g><title>dkn-compute`&lt;libp2p_tcp::provider::tokio::TcpStream as futures_io::if_std::AsyncRead&gt;::poll_read (2,771 samples, 7.59%)</title><rect x="50.7112%" y="309" width="7.5945%" height="15" fill="rgb(225,114,35)" fg:x="18503" fg:w="2771"/><text x="50.9612%" y="319.50">dkn-comput..</text></g><g><title>dkn-compute`&lt;multistream_select::negotiated::Negotiated&lt;TInner&gt; as futures_io::if_std::AsyncRead&gt;::poll_read (2,809 samples, 7.70%)</title><rect x="50.6263%" y="325" width="7.6986%" height="15" fill="rgb(215,118,42)" fg:x="18472" fg:w="2809"/><text x="50.8763%" y="335.50">dkn-compute..</text></g><g><title>dkn-compute`tokio::net::tcp::stream::TcpStream::poll_read_priv (7 samples, 0.02%)</title><rect x="58.3057%" y="309" width="0.0192%" height="15" fill="rgb(243,119,21)" fg:x="21274" fg:w="7"/><text x="58.5557%" y="319.50"></text></g><g><title>dkn-compute`bytes::bytes_mut::shared_v_drop (8 samples, 0.02%)</title><rect x="58.3441%" y="325" width="0.0219%" height="15" fill="rgb(252,177,53)" fg:x="21288" fg:w="8"/><text x="58.5941%" y="335.50"></text></g><g><title>dkn-compute`snow::transportstate::TransportState::read_message (11 samples, 0.03%)</title><rect x="58.3715%" y="325" width="0.0301%" height="15" fill="rgb(237,209,29)" fg:x="21298" fg:w="11"/><text x="58.6215%" y="335.50"></text></g><g><title>dkn-compute`&lt;asynchronous_codec::framed_read::FramedRead2&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (4,588 samples, 12.57%)</title><rect x="45.8382%" y="341" width="12.5743%" height="15" fill="rgb(212,65,23)" fg:x="16725" fg:w="4588"/><text x="46.0882%" y="351.50">dkn-compute`&lt;asynch..</text></g><g><title>libsystem_platform.dylib`_platform_memmove (4 samples, 0.01%)</title><rect x="58.4016%" y="325" width="0.0110%" height="15" fill="rgb(230,222,46)" fg:x="21309" fg:w="4"/><text x="58.6516%" y="335.50"></text></g><g><title>dkn-compute`&lt;libp2p_noise::io::framed::Codec&lt;snow::transportstate::TransportState&gt; as asynchronous_codec::decoder::Decoder&gt;::decode (7 samples, 0.02%)</title><rect x="58.4126%" y="341" width="0.0192%" height="15" fill="rgb(215,135,32)" fg:x="21313" fg:w="7"/><text x="58.6626%" y="351.50"></text></g><g><title>dkn-compute`&lt;multistream_select::negotiated::Negotiated&lt;TInner&gt; as futures_io::if_std::AsyncRead&gt;::poll_read (5 samples, 0.01%)</title><rect x="58.4318%" y="341" width="0.0137%" height="15" fill="rgb(246,101,22)" fg:x="21320" fg:w="5"/><text x="58.6818%" y="351.50"></text></g><g><title>dkn-compute`DYLD-STUB$$free (8 samples, 0.02%)</title><rect x="58.4455%" y="341" width="0.0219%" height="15" fill="rgb(206,107,13)" fg:x="21325" fg:w="8"/><text x="58.6955%" y="351.50"></text></g><g><title>dkn-compute`__rdl_dealloc (10 samples, 0.03%)</title><rect x="58.5798%" y="325" width="0.0274%" height="15" fill="rgb(250,100,44)" fg:x="21374" fg:w="10"/><text x="58.8298%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (4 samples, 0.01%)</title><rect x="58.6072%" y="325" width="0.0110%" height="15" fill="rgb(231,147,38)" fg:x="21384" fg:w="4"/><text x="58.8572%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`_szone_free (11 samples, 0.03%)</title><rect x="58.6181%" y="325" width="0.0301%" height="15" fill="rgb(229,8,40)" fg:x="21388" fg:w="11"/><text x="58.8681%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`free_small (6 samples, 0.02%)</title><rect x="58.6565%" y="325" width="0.0164%" height="15" fill="rgb(221,135,30)" fg:x="21402" fg:w="6"/><text x="58.9065%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`get_tiny_previous_free_msize (6 samples, 0.02%)</title><rect x="58.7168%" y="309" width="0.0164%" height="15" fill="rgb(249,193,18)" fg:x="21424" fg:w="6"/><text x="58.9668%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (16 samples, 0.04%)</title><rect x="58.7826%" y="293" width="0.0439%" height="15" fill="rgb(209,133,39)" fg:x="21448" fg:w="16"/><text x="59.0326%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (62 samples, 0.17%)</title><rect x="58.6730%" y="325" width="0.1699%" height="15" fill="rgb(232,100,14)" fg:x="21408" fg:w="62"/><text x="58.9230%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (40 samples, 0.11%)</title><rect x="58.7332%" y="309" width="0.1096%" height="15" fill="rgb(224,185,1)" fg:x="21430" fg:w="40"/><text x="58.9832%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (6 samples, 0.02%)</title><rect x="58.8264%" y="293" width="0.0164%" height="15" fill="rgb(223,139,8)" fg:x="21464" fg:w="6"/><text x="59.0764%" y="303.50"></text></g><g><title>dkn-compute`bytes::bytes_mut::shared_v_drop (142 samples, 0.39%)</title><rect x="58.4701%" y="341" width="0.3892%" height="15" fill="rgb(232,213,38)" fg:x="21334" fg:w="142"/><text x="58.7201%" y="351.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (6 samples, 0.02%)</title><rect x="58.8429%" y="325" width="0.0164%" height="15" fill="rgb(207,94,22)" fg:x="21470" fg:w="6"/><text x="59.0929%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (23 samples, 0.06%)</title><rect x="58.8593%" y="341" width="0.0630%" height="15" fill="rgb(219,183,54)" fg:x="21476" fg:w="23"/><text x="59.1093%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`_szone_free (4 samples, 0.01%)</title><rect x="58.9224%" y="341" width="0.0110%" height="15" fill="rgb(216,185,54)" fg:x="21499" fg:w="4"/><text x="59.1724%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`free (10 samples, 0.03%)</title><rect x="58.9333%" y="341" width="0.0274%" height="15" fill="rgb(254,217,39)" fg:x="21503" fg:w="10"/><text x="59.1833%" y="351.50"></text></g><g><title>libsystem_platform.dylib`__bzero (4 samples, 0.01%)</title><rect x="58.9717%" y="341" width="0.0110%" height="15" fill="rgb(240,178,23)" fg:x="21517" fg:w="4"/><text x="59.2217%" y="351.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (82 samples, 0.22%)</title><rect x="58.9827%" y="341" width="0.2247%" height="15" fill="rgb(218,11,47)" fg:x="21521" fg:w="82"/><text x="59.2327%" y="351.50"></text></g><g><title>dkn-compute`&lt;libp2p_noise::io::Output&lt;T&gt; as futures_io::if_std::AsyncRead&gt;::poll_read (5,354 samples, 14.67%)</title><rect x="45.6875%" y="357" width="14.6737%" height="15" fill="rgb(218,51,51)" fg:x="16670" fg:w="5354"/><text x="45.9375%" y="367.50">dkn-compute`&lt;libp2p_no..</text></g><g><title>libsystem_platform.dylib`_platform_memset (421 samples, 1.15%)</title><rect x="59.2074%" y="341" width="1.1538%" height="15" fill="rgb(238,126,27)" fg:x="21603" fg:w="421"/><text x="59.4574%" y="351.50"></text></g><g><title>dkn-compute`DYLD-STUB$$free (5 samples, 0.01%)</title><rect x="60.3640%" y="357" width="0.0137%" height="15" fill="rgb(249,202,22)" fg:x="22025" fg:w="5"/><text x="60.6140%" y="367.50"></text></g><g><title>dkn-compute`bytes::bytes::static_drop (5 samples, 0.01%)</title><rect x="60.3777%" y="357" width="0.0137%" height="15" fill="rgb(254,195,49)" fg:x="22030" fg:w="5"/><text x="60.6277%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`free (5 samples, 0.01%)</title><rect x="60.3996%" y="357" width="0.0137%" height="15" fill="rgb(208,123,14)" fg:x="22038" fg:w="5"/><text x="60.6496%" y="367.50"></text></g><g><title>dkn-compute`&lt;multistream_select::negotiated::Negotiated&lt;TInner&gt; as futures_io::if_std::AsyncRead&gt;::poll_read (5,438 samples, 14.90%)</title><rect x="45.6135%" y="373" width="14.9039%" height="15" fill="rgb(224,200,8)" fg:x="16643" fg:w="5438"/><text x="45.8635%" y="383.50">dkn-compute`&lt;multistrea..</text></g><g><title>libsystem_platform.dylib`_platform_memmove (38 samples, 0.10%)</title><rect x="60.4133%" y="357" width="0.1041%" height="15" fill="rgb(217,61,36)" fg:x="22043" fg:w="38"/><text x="60.6633%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (7 samples, 0.02%)</title><rect x="60.5311%" y="357" width="0.0192%" height="15" fill="rgb(206,35,45)" fg:x="22086" fg:w="7"/><text x="60.7811%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_from_free_list (6 samples, 0.02%)</title><rect x="60.5339%" y="341" width="0.0164%" height="15" fill="rgb(217,65,33)" fg:x="22087" fg:w="6"/><text x="60.7839%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (10 samples, 0.03%)</title><rect x="60.6024%" y="341" width="0.0274%" height="15" fill="rgb(222,158,48)" fg:x="22112" fg:w="10"/><text x="60.8524%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`_tiny_check_and_zero_inline_meta_from_freelist (25 samples, 0.07%)</title><rect x="60.8271%" y="325" width="0.0685%" height="15" fill="rgb(254,2,54)" fg:x="22194" fg:w="25"/><text x="61.0771%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (146 samples, 0.40%)</title><rect x="60.5531%" y="357" width="0.4001%" height="15" fill="rgb(250,143,38)" fg:x="22094" fg:w="146"/><text x="60.8031%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (118 samples, 0.32%)</title><rect x="60.6298%" y="341" width="0.3234%" height="15" fill="rgb(248,25,0)" fg:x="22122" fg:w="118"/><text x="60.8798%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (21 samples, 0.06%)</title><rect x="60.8957%" y="325" width="0.0576%" height="15" fill="rgb(206,152,27)" fg:x="22219" fg:w="21"/><text x="61.1457%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (171 samples, 0.47%)</title><rect x="60.5257%" y="373" width="0.4687%" height="15" fill="rgb(240,77,30)" fg:x="22084" fg:w="171"/><text x="60.7757%" y="383.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (15 samples, 0.04%)</title><rect x="60.9532%" y="357" width="0.0411%" height="15" fill="rgb(231,5,3)" fg:x="22240" fg:w="15"/><text x="61.2032%" y="367.50"></text></g><g><title>dkn-compute`&lt;yamux::frame::io::Io&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (5,742 samples, 15.74%)</title><rect x="45.2600%" y="389" width="15.7371%" height="15" fill="rgb(207,226,32)" fg:x="16514" fg:w="5742"/><text x="45.5100%" y="399.50">dkn-compute`&lt;yamux::fram..</text></g><g><title>dkn-compute`tokio::runtime::io::registration::Registration::poll_ready (31 samples, 0.08%)</title><rect x="61.1451%" y="309" width="0.0850%" height="15" fill="rgb(222,207,47)" fg:x="22310" fg:w="31"/><text x="61.3951%" y="319.50"></text></g><g><title>dkn-compute`tokio::runtime::io::scheduled_io::ScheduledIo::poll_readiness (9 samples, 0.02%)</title><rect x="61.2054%" y="293" width="0.0247%" height="15" fill="rgb(229,115,45)" fg:x="22332" fg:w="9"/><text x="61.4554%" y="303.50"></text></g><g><title>dkn-compute`tokio::net::tcp::stream::TcpStream::poll_write_priv (56 samples, 0.15%)</title><rect x="61.1368%" y="325" width="0.1535%" height="15" fill="rgb(224,191,6)" fg:x="22307" fg:w="56"/><text x="61.3868%" y="335.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (21 samples, 0.06%)</title><rect x="61.2328%" y="309" width="0.0576%" height="15" fill="rgb(230,227,24)" fg:x="22342" fg:w="21"/><text x="61.4828%" y="319.50"></text></g><g><title>dkn-compute`&lt;asynchronous_codec::framed::Framed&lt;T,U&gt; as futures_sink::Sink&lt;&lt;U as asynchronous_codec::encoder::Encoder&gt;::Item&gt;&gt;::poll_ready (68 samples, 0.19%)</title><rect x="61.1122%" y="341" width="0.1864%" height="15" fill="rgb(228,80,19)" fg:x="22298" fg:w="68"/><text x="61.3622%" y="351.50"></text></g><g><title>dkn-compute`&lt;libp2p_noise::io::Output&lt;T&gt; as futures_io::if_std::AsyncWrite&gt;::poll_write (76 samples, 0.21%)</title><rect x="61.0930%" y="357" width="0.2083%" height="15" fill="rgb(247,229,0)" fg:x="22291" fg:w="76"/><text x="61.3430%" y="367.50"></text></g><g><title>dkn-compute`&lt;yamux::frame::io::Io&lt;T&gt; as futures_sink::Sink&lt;yamux::frame::Frame&lt;()&gt;&gt;&gt;::poll_flush (115 samples, 0.32%)</title><rect x="60.9971%" y="389" width="0.3152%" height="15" fill="rgb(237,194,15)" fg:x="22256" fg:w="115"/><text x="61.2471%" y="399.50"></text></g><g><title>dkn-compute`&lt;yamux::frame::io::Io&lt;T&gt; as futures_sink::Sink&lt;yamux::frame::Frame&lt;()&gt;&gt;&gt;::poll_ready (103 samples, 0.28%)</title><rect x="61.0300%" y="373" width="0.2823%" height="15" fill="rgb(219,203,20)" fg:x="22268" fg:w="103"/><text x="61.2800%" y="383.50"></text></g><g><title>dkn-compute`&lt;multistream_select::negotiated::Negotiated&lt;TInner&gt; as futures_io::if_std::AsyncWrite&gt;::poll_write (4 samples, 0.01%)</title><rect x="61.3013%" y="357" width="0.0110%" height="15" fill="rgb(234,128,8)" fg:x="22367" fg:w="4"/><text x="61.5513%" y="367.50"></text></g><g><title>dkn-compute`&lt;asynchronous_codec::framed::Framed&lt;T,U&gt; as futures_sink::Sink&lt;&lt;U as asynchronous_codec::encoder::Encoder&gt;::Item&gt;&gt;::poll_ready (9 samples, 0.02%)</title><rect x="61.4794%" y="373" width="0.0247%" height="15" fill="rgb(248,202,8)" fg:x="22432" fg:w="9"/><text x="61.7294%" y="383.50"></text></g><g><title>dkn-compute`&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Write&gt;::write (407 samples, 1.12%)</title><rect x="61.6795%" y="325" width="1.1155%" height="15" fill="rgb(206,104,37)" fg:x="22505" fg:w="407"/><text x="61.9295%" y="335.50"></text></g><g><title>libsystem_kernel.dylib`__sendto (407 samples, 1.12%)</title><rect x="61.6795%" y="309" width="1.1155%" height="15" fill="rgb(223,8,27)" fg:x="22505" fg:w="407"/><text x="61.9295%" y="319.50"></text></g><g><title>dkn-compute`tokio::runtime::io::scheduled_io::ScheduledIo::poll_readiness (32 samples, 0.09%)</title><rect x="62.8580%" y="309" width="0.0877%" height="15" fill="rgb(216,217,28)" fg:x="22935" fg:w="32"/><text x="63.1080%" y="319.50"></text></g><g><title>dkn-compute`tokio::runtime::io::registration::Registration::poll_ready (55 samples, 0.15%)</title><rect x="62.8004%" y="325" width="0.1507%" height="15" fill="rgb(249,199,1)" fg:x="22914" fg:w="55"/><text x="63.0504%" y="335.50"></text></g><g><title>dkn-compute`tokio::net::tcp::stream::TcpStream::poll_write_priv (495 samples, 1.36%)</title><rect x="61.6576%" y="341" width="1.3566%" height="15" fill="rgb(240,85,17)" fg:x="22497" fg:w="495"/><text x="61.9076%" y="351.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (20 samples, 0.05%)</title><rect x="62.9594%" y="325" width="0.0548%" height="15" fill="rgb(206,108,45)" fg:x="22972" fg:w="20"/><text x="63.2094%" y="335.50"></text></g><g><title>dkn-compute`&lt;asynchronous_codec::framed::Framed&lt;T,U&gt; as futures_sink::Sink&lt;&lt;U as asynchronous_codec::encoder::Encoder&gt;::Item&gt;&gt;::poll_ready (514 samples, 1.41%)</title><rect x="61.6165%" y="357" width="1.4087%" height="15" fill="rgb(245,210,41)" fg:x="22482" fg:w="514"/><text x="61.8665%" y="367.50"></text></g><g><title>dkn-compute`tokio::runtime::io::registration::Registration::poll_ready (4 samples, 0.01%)</title><rect x="63.0142%" y="341" width="0.0110%" height="15" fill="rgb(206,13,37)" fg:x="22992" fg:w="4"/><text x="63.2642%" y="351.50"></text></g><g><title>dkn-compute`&lt;snow::resolvers::ring::CipherChaChaPoly as snow::types::Cipher&gt;::encrypt (424 samples, 1.16%)</title><rect x="63.0416%" y="325" width="1.1621%" height="15" fill="rgb(250,61,18)" fg:x="23002" fg:w="424"/><text x="63.2916%" y="335.50"></text></g><g><title>dkn-compute`ring::aead::chacha20_poly1305::chacha20_poly1305_seal (423 samples, 1.16%)</title><rect x="63.0444%" y="309" width="1.1593%" height="15" fill="rgb(235,172,48)" fg:x="23003" fg:w="423"/><text x="63.2944%" y="319.50"></text></g><g><title>dkn-compute`ring_core_0_17_8_chacha20_poly1305_seal (422 samples, 1.16%)</title><rect x="63.0471%" y="293" width="1.1566%" height="15" fill="rgb(249,201,17)" fg:x="23004" fg:w="422"/><text x="63.2971%" y="303.50"></text></g><g><title>dkn-compute`snow::transportstate::TransportState::write_message (444 samples, 1.22%)</title><rect x="63.0416%" y="341" width="1.2169%" height="15" fill="rgb(219,208,6)" fg:x="23002" fg:w="444"/><text x="63.2916%" y="351.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (19 samples, 0.05%)</title><rect x="64.2064%" y="325" width="0.0521%" height="15" fill="rgb(248,31,23)" fg:x="23427" fg:w="19"/><text x="64.4564%" y="335.50"></text></g><g><title>dkn-compute`&lt;libp2p_noise::io::framed::Codec&lt;snow::transportstate::TransportState&gt; as asynchronous_codec::encoder::Encoder&gt;::encode (457 samples, 1.25%)</title><rect x="63.0252%" y="357" width="1.2525%" height="15" fill="rgb(245,15,42)" fg:x="22996" fg:w="457"/><text x="63.2752%" y="367.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (7 samples, 0.02%)</title><rect x="64.2585%" y="341" width="0.0192%" height="15" fill="rgb(222,217,39)" fg:x="23446" fg:w="7"/><text x="64.5085%" y="351.50"></text></g><g><title>dkn-compute`&lt;libp2p_noise::io::Output&lt;T&gt; as futures_io::if_std::AsyncWrite&gt;::poll_write (1,024 samples, 2.81%)</title><rect x="61.5041%" y="373" width="2.8065%" height="15" fill="rgb(210,219,27)" fg:x="22441" fg:w="1024"/><text x="61.7541%" y="383.50">dk..</text></g><g><title>dkn-compute`tokio::net::tcp::stream::TcpStream::poll_write_priv (4 samples, 0.01%)</title><rect x="64.2996%" y="357" width="0.0110%" height="15" fill="rgb(252,166,36)" fg:x="23461" fg:w="4"/><text x="64.5496%" y="367.50"></text></g><g><title>dkn-compute`&lt;multistream_select::negotiated::Negotiated&lt;TInner&gt; as futures_io::if_std::AsyncWrite&gt;::poll_write (19 samples, 0.05%)</title><rect x="64.3106%" y="373" width="0.0521%" height="15" fill="rgb(245,132,34)" fg:x="23465" fg:w="19"/><text x="64.5606%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`_szone_free (9 samples, 0.02%)</title><rect x="64.3654%" y="373" width="0.0247%" height="15" fill="rgb(236,54,3)" fg:x="23485" fg:w="9"/><text x="64.6154%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (17 samples, 0.05%)</title><rect x="64.4805%" y="341" width="0.0466%" height="15" fill="rgb(241,173,43)" fg:x="23527" fg:w="17"/><text x="64.7305%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (53 samples, 0.15%)</title><rect x="64.3983%" y="373" width="0.1453%" height="15" fill="rgb(215,190,9)" fg:x="23497" fg:w="53"/><text x="64.6483%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (33 samples, 0.09%)</title><rect x="64.4531%" y="357" width="0.0904%" height="15" fill="rgb(242,101,16)" fg:x="23517" fg:w="33"/><text x="64.7031%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (6 samples, 0.02%)</title><rect x="64.5271%" y="341" width="0.0164%" height="15" fill="rgb(223,190,21)" fg:x="23544" fg:w="6"/><text x="64.7771%" y="351.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (25 samples, 0.07%)</title><rect x="64.5463%" y="373" width="0.0685%" height="15" fill="rgb(215,228,25)" fg:x="23551" fg:w="25"/><text x="64.7963%" y="383.50"></text></g><g><title>dkn-compute`&lt;yamux::frame::io::Io&lt;T&gt; as futures_sink::Sink&lt;yamux::frame::Frame&lt;()&gt;&gt;&gt;::poll_ready (1,220 samples, 3.34%)</title><rect x="61.3122%" y="389" width="3.3437%" height="15" fill="rgb(225,36,22)" fg:x="22371" fg:w="1220"/><text x="61.5622%" y="399.50">dkn..</text></g><g><title>libsystem_platform.dylib`_platform_memset (15 samples, 0.04%)</title><rect x="64.6148%" y="373" width="0.0411%" height="15" fill="rgb(251,106,46)" fg:x="23576" fg:w="15"/><text x="64.8648%" y="383.50"></text></g><g><title>dkn-compute`yamux::chunks::Chunks::push (6 samples, 0.02%)</title><rect x="64.6778%" y="389" width="0.0164%" height="15" fill="rgb(208,90,1)" fg:x="23599" fg:w="6"/><text x="64.9278%" y="399.50"></text></g><g><title>libsystem_c.dylib`clock_gettime_nsec_np (10 samples, 0.03%)</title><rect x="64.8423%" y="341" width="0.0274%" height="15" fill="rgb(243,10,4)" fg:x="23659" fg:w="10"/><text x="65.0923%" y="351.50"></text></g><g><title>libsystem_kernel.dylib`mach_absolute_time (6 samples, 0.02%)</title><rect x="64.8697%" y="341" width="0.0164%" height="15" fill="rgb(212,137,27)" fg:x="23669" fg:w="6"/><text x="65.1197%" y="351.50"></text></g><g><title>dkn-compute`std::sys::pal::unix::time::Timespec::now (58 samples, 0.16%)</title><rect x="64.7381%" y="373" width="0.1590%" height="15" fill="rgb(231,220,49)" fg:x="23621" fg:w="58"/><text x="64.9881%" y="383.50"></text></g><g><title>libsystem_c.dylib`clock_gettime (49 samples, 0.13%)</title><rect x="64.7628%" y="357" width="0.1343%" height="15" fill="rgb(237,96,20)" fg:x="23630" fg:w="49"/><text x="65.0128%" y="367.50"></text></g><g><title>libsystem_kernel.dylib`mach_timebase_info (4 samples, 0.01%)</title><rect x="64.8861%" y="341" width="0.0110%" height="15" fill="rgb(239,229,30)" fg:x="23675" fg:w="4"/><text x="65.1361%" y="351.50"></text></g><g><title>dkn-compute`yamux::connection::rtt::Rtt::next_ping (79 samples, 0.22%)</title><rect x="64.6943%" y="389" width="0.2165%" height="15" fill="rgb(219,65,33)" fg:x="23605" fg:w="79"/><text x="64.9443%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (4 samples, 0.01%)</title><rect x="64.9190%" y="389" width="0.0110%" height="15" fill="rgb(243,134,7)" fg:x="23687" fg:w="4"/><text x="65.1690%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`free (6 samples, 0.02%)</title><rect x="64.9355%" y="389" width="0.0164%" height="15" fill="rgb(216,177,54)" fg:x="23693" fg:w="6"/><text x="65.1855%" y="399.50"></text></g><g><title>dkn-compute`yamux::connection::Connection&lt;T&gt;::poll_next_inbound (8,165 samples, 22.38%)</title><rect x="42.5878%" y="405" width="22.3778%" height="15" fill="rgb(211,160,20)" fg:x="15539" fg:w="8165"/><text x="42.8378%" y="415.50">dkn-compute`yamux::connection::Conn..</text></g><g><title>dkn-compute`&lt;libp2p_yamux::Muxer&lt;C&gt; as libp2p_core::muxing::StreamMuxer&gt;::poll (8,477 samples, 23.23%)</title><rect x="42.0944%" y="421" width="23.2329%" height="15" fill="rgb(239,85,39)" fg:x="15359" fg:w="8477"/><text x="42.3444%" y="431.50">dkn-compute`&lt;libp2p_yamux::Muxer&lt;C&gt; a..</text></g><g><title>libsystem_platform.dylib`_platform_memmove (129 samples, 0.35%)</title><rect x="64.9738%" y="405" width="0.3536%" height="15" fill="rgb(232,125,22)" fg:x="23707" fg:w="129"/><text x="65.2238%" y="415.50"></text></g><g><title>dkn-compute`core::ptr::drop_in_place&lt;tracing::span::Span&gt; (5 samples, 0.01%)</title><rect x="65.3274%" y="421" width="0.0137%" height="15" fill="rgb(244,57,34)" fg:x="23836" fg:w="5"/><text x="65.5774%" y="431.50"></text></g><g><title>dkn-compute`tracing::span::Span::log (11 samples, 0.03%)</title><rect x="65.3411%" y="421" width="0.0301%" height="15" fill="rgb(214,203,32)" fg:x="23841" fg:w="11"/><text x="65.5911%" y="431.50"></text></g><g><title>dkn-compute`&lt;libp2p_core::muxing::boxed::Wrap&lt;T&gt; as libp2p_core::muxing::StreamMuxer&gt;::poll (8,503 samples, 23.30%)</title><rect x="42.0780%" y="437" width="23.3042%" height="15" fill="rgb(207,58,43)" fg:x="15353" fg:w="8503"/><text x="42.3280%" y="447.50">dkn-compute`&lt;libp2p_core::muxing::box..</text></g><g><title>dkn-compute`core::ptr::drop_in_place&lt;tracing::span::Span&gt; (22 samples, 0.06%)</title><rect x="65.5357%" y="405" width="0.0603%" height="15" fill="rgb(215,193,15)" fg:x="23912" fg:w="22"/><text x="65.7857%" y="415.50"></text></g><g><title>dkn-compute`tracing::span::Span::log (10 samples, 0.03%)</title><rect x="65.5686%" y="389" width="0.0274%" height="15" fill="rgb(232,15,44)" fg:x="23924" fg:w="10"/><text x="65.8186%" y="399.50"></text></g><g><title>dkn-compute`tracing::span::Span::log (22 samples, 0.06%)</title><rect x="65.5960%" y="405" width="0.0603%" height="15" fill="rgb(212,3,48)" fg:x="23934" fg:w="22"/><text x="65.8460%" y="415.50"></text></g><g><title>dkn-compute`tracing::span::Span::record_all (25 samples, 0.07%)</title><rect x="65.6563%" y="405" width="0.0685%" height="15" fill="rgb(218,128,7)" fg:x="23956" fg:w="25"/><text x="65.9063%" y="415.50"></text></g><g><title>dkn-compute`tracing::span::Span::log (10 samples, 0.03%)</title><rect x="65.6974%" y="389" width="0.0274%" height="15" fill="rgb(226,216,39)" fg:x="23971" fg:w="10"/><text x="65.9474%" y="399.50"></text></g><g><title>dkn-compute`tracing_core::span::Record::is_empty (5 samples, 0.01%)</title><rect x="65.7248%" y="405" width="0.0137%" height="15" fill="rgb(243,47,51)" fg:x="23981" fg:w="5"/><text x="65.9748%" y="415.50"></text></g><g><title>dkn-compute`&lt;libp2p_noise::io::Output&lt;T&gt; as futures_io::if_std::AsyncWrite&gt;::poll_flush (7 samples, 0.02%)</title><rect x="65.8646%" y="389" width="0.0192%" height="15" fill="rgb(241,183,40)" fg:x="24032" fg:w="7"/><text x="66.1146%" y="399.50"></text></g><g><title>dkn-compute`libp2p_noise::io::framed::decode_length_prefixed (13 samples, 0.04%)</title><rect x="66.0180%" y="309" width="0.0356%" height="15" fill="rgb(231,217,32)" fg:x="24088" fg:w="13"/><text x="66.2680%" y="319.50"></text></g><g><title>dkn-compute`&lt;libp2p_noise::io::framed::Codec&lt;snow::transportstate::TransportState&gt; as asynchronous_codec::decoder::Decoder&gt;::decode (23 samples, 0.06%)</title><rect x="65.9934%" y="325" width="0.0630%" height="15" fill="rgb(229,61,38)" fg:x="24079" fg:w="23"/><text x="66.2434%" y="335.50"></text></g><g><title>dkn-compute`&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Read&gt;::read (5 samples, 0.01%)</title><rect x="66.1140%" y="277" width="0.0137%" height="15" fill="rgb(225,210,5)" fg:x="24123" fg:w="5"/><text x="66.3640%" y="287.50"></text></g><g><title>libsystem_kernel.dylib`__recvfrom (5 samples, 0.01%)</title><rect x="66.1140%" y="261" width="0.0137%" height="15" fill="rgb(231,79,45)" fg:x="24123" fg:w="5"/><text x="66.3640%" y="271.50"></text></g><g><title>dkn-compute`tokio::runtime::io::registration::Registration::poll_ready (21 samples, 0.06%)</title><rect x="66.1277%" y="277" width="0.0576%" height="15" fill="rgb(224,100,7)" fg:x="24128" fg:w="21"/><text x="66.3777%" y="287.50"></text></g><g><title>dkn-compute`tokio::runtime::io::scheduled_io::ScheduledIo::poll_readiness (5 samples, 0.01%)</title><rect x="66.1715%" y="261" width="0.0137%" height="15" fill="rgb(241,198,18)" fg:x="24144" fg:w="5"/><text x="66.4215%" y="271.50"></text></g><g><title>dkn-compute`tokio::net::tcp::stream::TcpStream::poll_read_priv (40 samples, 0.11%)</title><rect x="66.1140%" y="293" width="0.1096%" height="15" fill="rgb(252,97,53)" fg:x="24123" fg:w="40"/><text x="66.3640%" y="303.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (12 samples, 0.03%)</title><rect x="66.1907%" y="277" width="0.0329%" height="15" fill="rgb(220,88,7)" fg:x="24151" fg:w="12"/><text x="66.4407%" y="287.50"></text></g><g><title>dkn-compute`&lt;libp2p_tcp::provider::tokio::TcpStream as futures_io::if_std::AsyncRead&gt;::poll_read (43 samples, 0.12%)</title><rect x="66.1112%" y="309" width="0.1179%" height="15" fill="rgb(213,176,14)" fg:x="24122" fg:w="43"/><text x="66.3612%" y="319.50"></text></g><g><title>dkn-compute`&lt;multistream_select::negotiated::Negotiated&lt;TInner&gt; as futures_io::if_std::AsyncRead&gt;::poll_read (64 samples, 0.18%)</title><rect x="66.0591%" y="325" width="0.1754%" height="15" fill="rgb(246,73,7)" fg:x="24103" fg:w="64"/><text x="66.3091%" y="335.50"></text></g><g><title>dkn-compute`&lt;asynchronous_codec::framed_read::FramedRead2&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (104 samples, 0.29%)</title><rect x="65.9577%" y="341" width="0.2850%" height="15" fill="rgb(245,64,36)" fg:x="24066" fg:w="104"/><text x="66.2077%" y="351.50"></text></g><g><title>dkn-compute`&lt;yamux::frame::io::Io&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (416 samples, 1.14%)</title><rect x="65.8974%" y="389" width="1.1401%" height="15" fill="rgb(245,80,10)" fg:x="24044" fg:w="416"/><text x="66.1474%" y="399.50"></text></g><g><title>dkn-compute`&lt;multistream_select::negotiated::Negotiated&lt;TInner&gt; as futures_io::if_std::AsyncRead&gt;::poll_read (409 samples, 1.12%)</title><rect x="65.9166%" y="373" width="1.1209%" height="15" fill="rgb(232,107,50)" fg:x="24051" fg:w="409"/><text x="66.1666%" y="383.50"></text></g><g><title>dkn-compute`&lt;libp2p_noise::io::Output&lt;T&gt; as futures_io::if_std::AsyncRead&gt;::poll_read (398 samples, 1.09%)</title><rect x="65.9468%" y="357" width="1.0908%" height="15" fill="rgb(253,3,0)" fg:x="24062" fg:w="398"/><text x="66.1968%" y="367.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (284 samples, 0.78%)</title><rect x="66.2592%" y="341" width="0.7784%" height="15" fill="rgb(212,99,53)" fg:x="24176" fg:w="284"/><text x="66.5092%" y="351.50"></text></g><g><title>dkn-compute`&lt;libp2p_noise::io::Output&lt;T&gt; as futures_io::if_std::AsyncWrite&gt;::poll_write (4 samples, 0.01%)</title><rect x="67.0458%" y="373" width="0.0110%" height="15" fill="rgb(249,111,54)" fg:x="24463" fg:w="4"/><text x="67.2958%" y="383.50"></text></g><g><title>dkn-compute`tokio::runtime::io::registration::Registration::poll_ready (13 samples, 0.04%)</title><rect x="67.1253%" y="309" width="0.0356%" height="15" fill="rgb(249,55,30)" fg:x="24492" fg:w="13"/><text x="67.3753%" y="319.50"></text></g><g><title>dkn-compute`tokio::runtime::io::scheduled_io::ScheduledIo::poll_readiness (6 samples, 0.02%)</title><rect x="67.1445%" y="293" width="0.0164%" height="15" fill="rgb(237,47,42)" fg:x="24499" fg:w="6"/><text x="67.3945%" y="303.50"></text></g><g><title>dkn-compute`&lt;asynchronous_codec::framed::Framed&lt;T,U&gt; as futures_sink::Sink&lt;&lt;U as asynchronous_codec::encoder::Encoder&gt;::Item&gt;&gt;::poll_ready (25 samples, 0.07%)</title><rect x="67.1171%" y="341" width="0.0685%" height="15" fill="rgb(211,20,18)" fg:x="24489" fg:w="25"/><text x="67.3671%" y="351.50"></text></g><g><title>dkn-compute`tokio::net::tcp::stream::TcpStream::poll_write_priv (23 samples, 0.06%)</title><rect x="67.1225%" y="325" width="0.0630%" height="15" fill="rgb(231,203,46)" fg:x="24491" fg:w="23"/><text x="67.3725%" y="335.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (7 samples, 0.02%)</title><rect x="67.1664%" y="309" width="0.0192%" height="15" fill="rgb(237,142,3)" fg:x="24507" fg:w="7"/><text x="67.4164%" y="319.50"></text></g><g><title>dkn-compute`&lt;libp2p_noise::io::Output&lt;T&gt; as futures_io::if_std::AsyncWrite&gt;::poll_write (32 samples, 0.09%)</title><rect x="67.1034%" y="357" width="0.0877%" height="15" fill="rgb(241,107,1)" fg:x="24484" fg:w="32"/><text x="67.3534%" y="367.50"></text></g><g><title>dkn-compute`&lt;yamux::frame::io::Io&lt;T&gt; as futures_sink::Sink&lt;yamux::frame::Frame&lt;()&gt;&gt;&gt;::poll_flush (59 samples, 0.16%)</title><rect x="67.0376%" y="389" width="0.1617%" height="15" fill="rgb(229,83,13)" fg:x="24460" fg:w="59"/><text x="67.2876%" y="399.50"></text></g><g><title>dkn-compute`&lt;yamux::frame::io::Io&lt;T&gt; as futures_sink::Sink&lt;yamux::frame::Frame&lt;()&gt;&gt;&gt;::poll_ready (51 samples, 0.14%)</title><rect x="67.0595%" y="373" width="0.1398%" height="15" fill="rgb(241,91,40)" fg:x="24468" fg:w="51"/><text x="67.3095%" y="383.50"></text></g><g><title>dkn-compute`tokio::runtime::io::registration::Registration::poll_ready (19 samples, 0.05%)</title><rect x="67.2541%" y="325" width="0.0521%" height="15" fill="rgb(225,3,45)" fg:x="24539" fg:w="19"/><text x="67.5041%" y="335.50"></text></g><g><title>dkn-compute`tokio::runtime::io::scheduled_io::ScheduledIo::poll_readiness (6 samples, 0.02%)</title><rect x="67.2897%" y="309" width="0.0164%" height="15" fill="rgb(244,223,14)" fg:x="24552" fg:w="6"/><text x="67.5397%" y="319.50"></text></g><g><title>dkn-compute`tokio::net::tcp::stream::TcpStream::poll_write_priv (29 samples, 0.08%)</title><rect x="67.2541%" y="341" width="0.0795%" height="15" fill="rgb(224,124,37)" fg:x="24539" fg:w="29"/><text x="67.5041%" y="351.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (7 samples, 0.02%)</title><rect x="67.3144%" y="325" width="0.0192%" height="15" fill="rgb(251,171,30)" fg:x="24561" fg:w="7"/><text x="67.5644%" y="335.50"></text></g><g><title>dkn-compute`&lt;asynchronous_codec::framed::Framed&lt;T,U&gt; as futures_sink::Sink&lt;&lt;U as asynchronous_codec::encoder::Encoder&gt;::Item&gt;&gt;::poll_ready (34 samples, 0.09%)</title><rect x="67.2431%" y="357" width="0.0932%" height="15" fill="rgb(236,46,54)" fg:x="24535" fg:w="34"/><text x="67.4931%" y="367.50"></text></g><g><title>dkn-compute`&lt;libp2p_noise::io::Output&lt;T&gt; as futures_io::if_std::AsyncWrite&gt;::poll_write (39 samples, 0.11%)</title><rect x="67.2322%" y="373" width="0.1069%" height="15" fill="rgb(245,213,5)" fg:x="24531" fg:w="39"/><text x="67.4822%" y="383.50"></text></g><g><title>dkn-compute`&lt;yamux::frame::io::Io&lt;T&gt; as futures_sink::Sink&lt;yamux::frame::Frame&lt;()&gt;&gt;&gt;::poll_ready (55 samples, 0.15%)</title><rect x="67.1993%" y="389" width="0.1507%" height="15" fill="rgb(230,144,27)" fg:x="24519" fg:w="55"/><text x="67.4493%" y="399.50"></text></g><g><title>dkn-compute`&lt;multistream_select::negotiated::Negotiated&lt;TInner&gt; as futures_io::if_std::AsyncWrite&gt;::poll_write (4 samples, 0.01%)</title><rect x="67.3391%" y="373" width="0.0110%" height="15" fill="rgb(220,86,6)" fg:x="24570" fg:w="4"/><text x="67.5891%" y="383.50"></text></g><g><title>dkn-compute`yamux::connection::Connection&lt;T&gt;::poll_next_inbound (599 samples, 1.64%)</title><rect x="65.7385%" y="405" width="1.6417%" height="15" fill="rgb(240,20,13)" fg:x="23986" fg:w="599"/><text x="65.9885%" y="415.50"></text></g><g><title>dkn-compute`yamux::connection::rtt::Rtt::next_ping (11 samples, 0.03%)</title><rect x="67.3500%" y="389" width="0.0301%" height="15" fill="rgb(217,89,34)" fg:x="24574" fg:w="11"/><text x="67.6000%" y="399.50"></text></g><g><title>dkn-compute`std::sys::pal::unix::time::Timespec::now (11 samples, 0.03%)</title><rect x="67.3500%" y="373" width="0.0301%" height="15" fill="rgb(229,13,5)" fg:x="24574" fg:w="11"/><text x="67.6000%" y="383.50"></text></g><g><title>libsystem_c.dylib`clock_gettime (11 samples, 0.03%)</title><rect x="67.3500%" y="357" width="0.0301%" height="15" fill="rgb(244,67,35)" fg:x="24574" fg:w="11"/><text x="67.6000%" y="367.50"></text></g><g><title>dkn-compute`&lt;libp2p_yamux::Muxer&lt;C&gt; as libp2p_core::muxing::StreamMuxer&gt;::poll_inbound (821 samples, 2.25%)</title><rect x="65.3877%" y="421" width="2.2501%" height="15" fill="rgb(221,40,2)" fg:x="23858" fg:w="821"/><text x="65.6377%" y="431.50">d..</text></g><g><title>libsystem_platform.dylib`_platform_memmove (94 samples, 0.26%)</title><rect x="67.3802%" y="405" width="0.2576%" height="15" fill="rgb(237,157,21)" fg:x="24585" fg:w="94"/><text x="67.6302%" y="415.50"></text></g><g><title>dkn-compute`tokio::runtime::task::waker::clone_waker (5 samples, 0.01%)</title><rect x="67.6405%" y="421" width="0.0137%" height="15" fill="rgb(222,94,11)" fg:x="24680" fg:w="5"/><text x="67.8905%" y="431.50"></text></g><g><title>dkn-compute`tokio::runtime::task::waker::drop_waker (13 samples, 0.04%)</title><rect x="67.6542%" y="421" width="0.0356%" height="15" fill="rgb(249,113,6)" fg:x="24685" fg:w="13"/><text x="67.9042%" y="431.50"></text></g><g><title>dkn-compute`tracing::span::Span::record_all (4 samples, 0.01%)</title><rect x="67.6953%" y="421" width="0.0110%" height="15" fill="rgb(238,137,36)" fg:x="24700" fg:w="4"/><text x="67.9453%" y="431.50"></text></g><g><title>dkn-compute`&lt;libp2p_core::muxing::boxed::Wrap&lt;T&gt; as libp2p_core::muxing::StreamMuxer&gt;::poll_inbound (850 samples, 2.33%)</title><rect x="65.3822%" y="437" width="2.3296%" height="15" fill="rgb(210,102,26)" fg:x="23856" fg:w="850"/><text x="65.6322%" y="447.50">d..</text></g><g><title>dkn-compute`yamux::connection::Connection&lt;T&gt;::poll_new_outbound (8 samples, 0.02%)</title><rect x="67.7173%" y="405" width="0.0219%" height="15" fill="rgb(218,30,30)" fg:x="24708" fg:w="8"/><text x="67.9673%" y="415.50"></text></g><g><title>dkn-compute`&lt;libp2p_yamux::Muxer&lt;C&gt; as libp2p_core::muxing::StreamMuxer&gt;::poll_outbound (10 samples, 0.03%)</title><rect x="67.7145%" y="421" width="0.0274%" height="15" fill="rgb(214,67,26)" fg:x="24707" fg:w="10"/><text x="67.9645%" y="431.50"></text></g><g><title>dkn-compute`&lt;libp2p_core::muxing::boxed::Wrap&lt;T&gt; as libp2p_core::muxing::StreamMuxer&gt;::poll_outbound (12 samples, 0.03%)</title><rect x="67.7118%" y="437" width="0.0329%" height="15" fill="rgb(251,9,53)" fg:x="24706" fg:w="12"/><text x="67.9618%" y="447.50"></text></g><g><title>dkn-compute`&lt;libp2p_gossipsub::handler::Handler as libp2p_swarm::handler::ConnectionHandler&gt;::poll (5 samples, 0.01%)</title><rect x="67.7447%" y="437" width="0.0137%" height="15" fill="rgb(228,204,25)" fg:x="24718" fg:w="5"/><text x="67.9947%" y="447.50"></text></g><g><title>dkn-compute`&lt;libp2p_kad::handler::Handler as libp2p_swarm::handler::ConnectionHandler&gt;::poll (8 samples, 0.02%)</title><rect x="67.7639%" y="437" width="0.0219%" height="15" fill="rgb(207,153,8)" fg:x="24725" fg:w="8"/><text x="68.0139%" y="447.50"></text></g><g><title>dkn-compute`&lt;libp2p_request_response::handler::Handler&lt;TCodec&gt; as libp2p_swarm::handler::ConnectionHandler&gt;::poll (5 samples, 0.01%)</title><rect x="67.7858%" y="437" width="0.0137%" height="15" fill="rgb(242,9,16)" fg:x="24733" fg:w="5"/><text x="68.0358%" y="447.50"></text></g><g><title>dkn-compute`&lt;libp2p_swarm::handler::select::ConnectionHandlerSelect&lt;TProto1,TProto2&gt; as libp2p_swarm::handler::ConnectionHandler&gt;::listen_protocol (4 samples, 0.01%)</title><rect x="67.7995%" y="437" width="0.0110%" height="15" fill="rgb(217,211,10)" fg:x="24738" fg:w="4"/><text x="68.0495%" y="447.50"></text></g><g><title>dkn-compute`&lt;libp2p_swarm::handler::select::ConnectionHandlerSelect&lt;TProto1,TProto2&gt; as libp2p_swarm::handler::ConnectionHandler&gt;::on_connection_event (9 samples, 0.02%)</title><rect x="67.8105%" y="437" width="0.0247%" height="15" fill="rgb(219,228,52)" fg:x="24742" fg:w="9"/><text x="68.0605%" y="447.50"></text></g><g><title>dkn-compute`&lt;libp2p_swarm::handler::select::ConnectionHandlerSelect&lt;TProto1,TProto2&gt; as libp2p_swarm::handler::ConnectionHandler&gt;::on_connection_event (7 samples, 0.02%)</title><rect x="67.8159%" y="421" width="0.0192%" height="15" fill="rgb(231,92,29)" fg:x="24744" fg:w="7"/><text x="68.0659%" y="431.50"></text></g><g><title>dkn-compute`&lt;libp2p_swarm::handler::select::ConnectionHandlerSelect&lt;TProto1,TProto2&gt; as libp2p_swarm::handler::ConnectionHandler&gt;::on_connection_event (4 samples, 0.01%)</title><rect x="67.8242%" y="405" width="0.0110%" height="15" fill="rgb(232,8,23)" fg:x="24747" fg:w="4"/><text x="68.0742%" y="415.50"></text></g><g><title>dkn-compute`&lt;libp2p_swarm::handler::select::ConnectionHandlerSelect&lt;TProto1,TProto2&gt; as libp2p_swarm::handler::ConnectionHandler&gt;::on_connection_event (4 samples, 0.01%)</title><rect x="67.8242%" y="389" width="0.0110%" height="15" fill="rgb(216,211,34)" fg:x="24747" fg:w="4"/><text x="68.0742%" y="399.50"></text></g><g><title>dkn-compute`&lt;futures_timer::native::delay::Delay as core::future::future::Future&gt;::poll (5 samples, 0.01%)</title><rect x="68.0407%" y="421" width="0.0137%" height="15" fill="rgb(236,151,0)" fg:x="24826" fg:w="5"/><text x="68.2907%" y="431.50"></text></g><g><title>dkn-compute`&lt;asynchronous_codec::framed_read::FramedRead2&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (5 samples, 0.01%)</title><rect x="68.2791%" y="405" width="0.0137%" height="15" fill="rgb(209,168,3)" fg:x="24913" fg:w="5"/><text x="68.5291%" y="415.50"></text></g><g><title>dkn-compute`&lt;asynchronous_codec::framed_write::FramedWrite2&lt;T&gt; as futures_sink::Sink&lt;&lt;T as asynchronous_codec::encoder::Encoder&gt;::Item&gt;&gt;::poll_flush (6 samples, 0.02%)</title><rect x="68.2928%" y="405" width="0.0164%" height="15" fill="rgb(208,129,28)" fg:x="24918" fg:w="6"/><text x="68.5428%" y="415.50"></text></g><g><title>dkn-compute`core::ptr::drop_in_place&lt;core::option::Option&lt;libp2p_gossipsub::handler::OutboundSubstreamState&gt;&gt; (5 samples, 0.01%)</title><rect x="68.3120%" y="405" width="0.0137%" height="15" fill="rgb(229,78,22)" fg:x="24925" fg:w="5"/><text x="68.5620%" y="415.50"></text></g><g><title>dkn-compute`core::ptr::drop_in_place&lt;tracing::span::Span&gt; (22 samples, 0.06%)</title><rect x="68.3257%" y="405" width="0.0603%" height="15" fill="rgb(228,187,13)" fg:x="24930" fg:w="22"/><text x="68.5757%" y="415.50"></text></g><g><title>dkn-compute`tracing::span::Span::log (11 samples, 0.03%)</title><rect x="68.3559%" y="389" width="0.0301%" height="15" fill="rgb(240,119,24)" fg:x="24941" fg:w="11"/><text x="68.6059%" y="399.50"></text></g><g><title>dkn-compute`&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.01%)</title><rect x="69.1232%" y="373" width="0.0110%" height="15" fill="rgb(209,194,42)" fg:x="25221" fg:w="4"/><text x="69.3732%" y="383.50"></text></g><g><title>dkn-compute`&lt;bytes::bytes_mut::BytesMut as core::ops::drop::Drop&gt;::drop (4 samples, 0.01%)</title><rect x="69.5809%" y="341" width="0.0110%" height="15" fill="rgb(247,200,46)" fg:x="25388" fg:w="4"/><text x="69.8309%" y="351.50"></text></g><g><title>dkn-compute`quick_protobuf::reader::BytesReader::read_bytes (38 samples, 0.10%)</title><rect x="70.1455%" y="309" width="0.1041%" height="15" fill="rgb(218,76,16)" fg:x="25594" fg:w="38"/><text x="70.3955%" y="319.50"></text></g><g><title>dkn-compute`quick_protobuf::reader::BytesReader::read_string (33 samples, 0.09%)</title><rect x="70.2497%" y="309" width="0.0904%" height="15" fill="rgb(225,21,48)" fg:x="25632" fg:w="33"/><text x="70.4997%" y="319.50"></text></g><g><title>dkn-compute`core::str::converts::from_utf8 (15 samples, 0.04%)</title><rect x="70.2990%" y="293" width="0.0411%" height="15" fill="rgb(239,223,50)" fg:x="25650" fg:w="15"/><text x="70.5490%" y="303.50"></text></g><g><title>dkn-compute`quick_protobuf::reader::BytesReader::read_varint32 (15 samples, 0.04%)</title><rect x="70.3401%" y="309" width="0.0411%" height="15" fill="rgb(244,45,21)" fg:x="25665" fg:w="15"/><text x="70.5901%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_outlined (39 samples, 0.11%)</title><rect x="70.3812%" y="309" width="0.1069%" height="15" fill="rgb(232,33,43)" fg:x="25680" fg:w="39"/><text x="70.6312%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_find_block_and_allocate (35 samples, 0.10%)</title><rect x="70.3922%" y="293" width="0.0959%" height="15" fill="rgb(209,8,3)" fg:x="25684" fg:w="35"/><text x="70.6422%" y="303.50"></text></g><g><title>libsystem_kernel.dylib`__ulock_wait (4 samples, 0.01%)</title><rect x="70.5484%" y="277" width="0.0110%" height="15" fill="rgb(214,25,53)" fg:x="25741" fg:w="4"/><text x="70.7984%" y="287.50"></text></g><g><title>libsystem_kernel.dylib`__ulock_wake (7 samples, 0.02%)</title><rect x="70.5594%" y="277" width="0.0192%" height="15" fill="rgb(254,186,54)" fg:x="25745" fg:w="7"/><text x="70.8094%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (6 samples, 0.02%)</title><rect x="70.5786%" y="277" width="0.0164%" height="15" fill="rgb(208,174,49)" fg:x="25752" fg:w="6"/><text x="70.8286%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`_tiny_check_and_zero_inline_meta_from_freelist (17 samples, 0.05%)</title><rect x="70.6827%" y="261" width="0.0466%" height="15" fill="rgb(233,191,51)" fg:x="25790" fg:w="17"/><text x="70.9327%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (56 samples, 0.15%)</title><rect x="70.5950%" y="277" width="0.1535%" height="15" fill="rgb(222,134,10)" fg:x="25758" fg:w="56"/><text x="70.8450%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (7 samples, 0.02%)</title><rect x="70.7293%" y="261" width="0.0192%" height="15" fill="rgb(230,226,20)" fg:x="25807" fg:w="7"/><text x="70.9793%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (87 samples, 0.24%)</title><rect x="70.5155%" y="293" width="0.2384%" height="15" fill="rgb(251,111,25)" fg:x="25729" fg:w="87"/><text x="70.7655%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (97 samples, 0.27%)</title><rect x="70.4909%" y="309" width="0.2658%" height="15" fill="rgb(224,40,46)" fg:x="25720" fg:w="97"/><text x="70.7409%" y="319.50"></text></g><g><title>dkn-compute`&lt;libp2p_gossipsub::rpc_proto::proto::gossipsub::pb::Message as quick_protobuf::message::MessageRead&gt;::from_reader (353 samples, 0.97%)</title><rect x="69.7920%" y="325" width="0.9675%" height="15" fill="rgb(236,108,47)" fg:x="25465" fg:w="353"/><text x="70.0420%" y="335.50"></text></g><g><title>dkn-compute`__rdl_alloc (6 samples, 0.02%)</title><rect x="70.7677%" y="325" width="0.0164%" height="15" fill="rgb(234,93,0)" fg:x="25821" fg:w="6"/><text x="71.0177%" y="335.50"></text></g><g><title>libsystem_kernel.dylib`__ulock_wait (15 samples, 0.04%)</title><rect x="70.8746%" y="261" width="0.0411%" height="15" fill="rgb(224,213,32)" fg:x="25860" fg:w="15"/><text x="71.1246%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (7 samples, 0.02%)</title><rect x="70.9184%" y="261" width="0.0192%" height="15" fill="rgb(251,11,48)" fg:x="25876" fg:w="7"/><text x="71.1684%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (78 samples, 0.21%)</title><rect x="70.8252%" y="293" width="0.2138%" height="15" fill="rgb(236,173,5)" fg:x="25842" fg:w="78"/><text x="71.0752%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (74 samples, 0.20%)</title><rect x="70.8362%" y="277" width="0.2028%" height="15" fill="rgb(230,95,12)" fg:x="25846" fg:w="74"/><text x="71.0862%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (36 samples, 0.10%)</title><rect x="70.9403%" y="261" width="0.0987%" height="15" fill="rgb(232,209,1)" fg:x="25884" fg:w="36"/><text x="71.1903%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (11 samples, 0.03%)</title><rect x="71.0089%" y="245" width="0.0301%" height="15" fill="rgb(232,6,1)" fg:x="25909" fg:w="11"/><text x="71.2589%" y="255.50"></text></g><g><title>dkn-compute`alloc::raw_vec::finish_grow (89 samples, 0.24%)</title><rect x="70.8033%" y="309" width="0.2439%" height="15" fill="rgb(210,224,50)" fg:x="25834" fg:w="89"/><text x="71.0533%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (5 samples, 0.01%)</title><rect x="71.0472%" y="309" width="0.0137%" height="15" fill="rgb(228,127,35)" fg:x="25923" fg:w="5"/><text x="71.2972%" y="319.50"></text></g><g><title>dkn-compute`alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (103 samples, 0.28%)</title><rect x="70.7841%" y="325" width="0.2823%" height="15" fill="rgb(245,102,45)" fg:x="25827" fg:w="103"/><text x="71.0341%" y="335.50"></text></g><g><title>dkn-compute`quick_protobuf::reader::BytesReader::read_bytes (4 samples, 0.01%)</title><rect x="71.0664%" y="325" width="0.0110%" height="15" fill="rgb(214,1,49)" fg:x="25930" fg:w="4"/><text x="71.3164%" y="335.50"></text></g><g><title>dkn-compute`quick_protobuf::reader::BytesReader::read_varint32 (9 samples, 0.02%)</title><rect x="71.0774%" y="325" width="0.0247%" height="15" fill="rgb(226,163,40)" fg:x="25934" fg:w="9"/><text x="71.3274%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (21 samples, 0.06%)</title><rect x="71.1020%" y="325" width="0.0576%" height="15" fill="rgb(239,212,28)" fg:x="25943" fg:w="21"/><text x="71.3520%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`malloc (5 samples, 0.01%)</title><rect x="71.1596%" y="325" width="0.0137%" height="15" fill="rgb(220,20,13)" fg:x="25964" fg:w="5"/><text x="71.4096%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (136 samples, 0.37%)</title><rect x="71.1733%" y="325" width="0.3727%" height="15" fill="rgb(210,164,35)" fg:x="25969" fg:w="136"/><text x="71.4233%" y="335.50"></text></g><g><title>dkn-compute`&lt;libp2p_gossipsub::rpc_proto::proto::gossipsub::pb::RPC as quick_protobuf::message::MessageRead&gt;::from_reader (768 samples, 2.10%)</title><rect x="69.5974%" y="341" width="2.1049%" height="15" fill="rgb(248,109,41)" fg:x="25394" fg:w="768"/><text x="69.8474%" y="351.50">d..</text></g><g><title>libsystem_platform.dylib`_platform_memmove (54 samples, 0.15%)</title><rect x="71.5543%" y="325" width="0.1480%" height="15" fill="rgb(238,23,50)" fg:x="26108" fg:w="54"/><text x="71.8043%" y="335.50"></text></g><g><title>dkn-compute`bytes::bytes_mut::BytesMut::advance_unchecked (6 samples, 0.02%)</title><rect x="71.7023%" y="341" width="0.0164%" height="15" fill="rgb(211,48,49)" fg:x="26162" fg:w="6"/><text x="71.9523%" y="351.50"></text></g><g><title>dkn-compute`bytes::bytes_mut::BytesMut::split_to (14 samples, 0.04%)</title><rect x="71.7187%" y="341" width="0.0384%" height="15" fill="rgb(223,36,21)" fg:x="26168" fg:w="14"/><text x="71.9687%" y="351.50"></text></g><g><title>dkn-compute`quick_protobuf::reader::BytesReader::read_uint32 (5 samples, 0.01%)</title><rect x="71.7571%" y="341" width="0.0137%" height="15" fill="rgb(207,123,46)" fg:x="26182" fg:w="5"/><text x="72.0071%" y="351.50"></text></g><g><title>dkn-compute`&lt;quick_protobuf_codec::Codec&lt;In,Out&gt; as asynchronous_codec::decoder::Decoder&gt;::decode (856 samples, 2.35%)</title><rect x="69.4412%" y="357" width="2.3460%" height="15" fill="rgb(240,218,32)" fg:x="25337" fg:w="856"/><text x="69.6912%" y="367.50">d..</text></g><g><title>dkn-compute`quick_protobuf::reader::BytesReader::read_varint32 (6 samples, 0.02%)</title><rect x="71.7708%" y="341" width="0.0164%" height="15" fill="rgb(252,5,43)" fg:x="26187" fg:w="6"/><text x="72.0208%" y="351.50"></text></g><g><title>dkn-compute`__rdl_dealloc (4 samples, 0.01%)</title><rect x="71.7872%" y="357" width="0.0110%" height="15" fill="rgb(252,84,19)" fg:x="26193" fg:w="4"/><text x="72.0372%" y="367.50"></text></g><g><title>dkn-compute`alloc::vec::in_place_collect::from_iter_in_place (10 samples, 0.03%)</title><rect x="71.7982%" y="357" width="0.0274%" height="15" fill="rgb(243,152,39)" fg:x="26197" fg:w="10"/><text x="72.0482%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (35 samples, 0.10%)</title><rect x="71.8393%" y="357" width="0.0959%" height="15" fill="rgb(234,160,15)" fg:x="26212" fg:w="35"/><text x="72.0893%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`_szone_free (6 samples, 0.02%)</title><rect x="71.9352%" y="357" width="0.0164%" height="15" fill="rgb(237,34,20)" fg:x="26247" fg:w="6"/><text x="72.1852%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`get_tiny_previous_free_msize (8 samples, 0.02%)</title><rect x="72.0147%" y="341" width="0.0219%" height="15" fill="rgb(229,97,13)" fg:x="26276" fg:w="8"/><text x="72.2647%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (14 samples, 0.04%)</title><rect x="72.1353%" y="325" width="0.0384%" height="15" fill="rgb(234,71,50)" fg:x="26320" fg:w="14"/><text x="72.3853%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (87 samples, 0.24%)</title><rect x="71.9517%" y="357" width="0.2384%" height="15" fill="rgb(253,155,4)" fg:x="26253" fg:w="87"/><text x="72.2017%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (53 samples, 0.15%)</title><rect x="72.0448%" y="341" width="0.1453%" height="15" fill="rgb(222,185,37)" fg:x="26287" fg:w="53"/><text x="72.2948%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (6 samples, 0.02%)</title><rect x="72.1737%" y="325" width="0.0164%" height="15" fill="rgb(251,177,13)" fg:x="26334" fg:w="6"/><text x="72.4237%" y="335.50"></text></g><g><title>dkn-compute`&lt;libp2p_gossipsub::protocol::GossipsubCodec as asynchronous_codec::decoder::Decoder&gt;::decode (1,130 samples, 3.10%)</title><rect x="69.1370%" y="373" width="3.0970%" height="15" fill="rgb(250,179,40)" fg:x="25226" fg:w="1130"/><text x="69.3870%" y="383.50">dkn..</text></g><g><title>libsystem_platform.dylib`_platform_memset (16 samples, 0.04%)</title><rect x="72.1901%" y="357" width="0.0439%" height="15" fill="rgb(242,44,2)" fg:x="26340" fg:w="16"/><text x="72.4401%" y="367.50"></text></g><g><title>dkn-compute`futures_channel::mpsc::BoundedSenderInner&lt;T&gt;::poll_unparked (4 samples, 0.01%)</title><rect x="72.4861%" y="341" width="0.0110%" height="15" fill="rgb(216,177,13)" fg:x="26448" fg:w="4"/><text x="72.7361%" y="351.50"></text></g><g><title>dkn-compute`yamux::connection::stream::Stream::send_window_update (48 samples, 0.13%)</title><rect x="72.4971%" y="341" width="0.1316%" height="15" fill="rgb(216,106,43)" fg:x="26452" fg:w="48"/><text x="72.7471%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`_szone_free (14 samples, 0.04%)</title><rect x="72.6451%" y="341" width="0.0384%" height="15" fill="rgb(216,183,2)" fg:x="26506" fg:w="14"/><text x="72.8951%" y="351.50"></text></g><g><title>libsystem_kernel.dylib`__ulock_wait (4 samples, 0.01%)</title><rect x="72.7382%" y="325" width="0.0110%" height="15" fill="rgb(249,75,3)" fg:x="26540" fg:w="4"/><text x="72.9882%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`get_tiny_previous_free_msize (5 samples, 0.01%)</title><rect x="72.7492%" y="325" width="0.0137%" height="15" fill="rgb(219,67,39)" fg:x="26544" fg:w="5"/><text x="72.9992%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (6 samples, 0.02%)</title><rect x="72.7629%" y="325" width="0.0164%" height="15" fill="rgb(253,228,2)" fg:x="26549" fg:w="6"/><text x="73.0129%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (22 samples, 0.06%)</title><rect x="72.8917%" y="309" width="0.0603%" height="15" fill="rgb(235,138,27)" fg:x="26596" fg:w="22"/><text x="73.1417%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (109 samples, 0.30%)</title><rect x="72.6916%" y="341" width="0.2987%" height="15" fill="rgb(236,97,51)" fg:x="26523" fg:w="109"/><text x="72.9416%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (75 samples, 0.21%)</title><rect x="72.7848%" y="325" width="0.2056%" height="15" fill="rgb(240,80,30)" fg:x="26557" fg:w="75"/><text x="73.0348%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (14 samples, 0.04%)</title><rect x="72.9520%" y="309" width="0.0384%" height="15" fill="rgb(230,178,19)" fg:x="26618" fg:w="14"/><text x="73.2020%" y="319.50"></text></g><g><title>dkn-compute`&lt;yamux::connection::stream::Stream as futures_io::if_std::AsyncRead&gt;::poll_read (270 samples, 0.74%)</title><rect x="72.2614%" y="357" width="0.7400%" height="15" fill="rgb(210,190,27)" fg:x="26366" fg:w="270"/><text x="72.5114%" y="367.50"></text></g><g><title>dkn-compute`tokio::runtime::task::waker::drop_waker (8 samples, 0.02%)</title><rect x="73.0096%" y="357" width="0.0219%" height="15" fill="rgb(222,107,31)" fg:x="26639" fg:w="8"/><text x="73.2596%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`_szone_free (7 samples, 0.02%)</title><rect x="73.0425%" y="357" width="0.0192%" height="15" fill="rgb(216,127,34)" fg:x="26651" fg:w="7"/><text x="73.2925%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`free (9 samples, 0.02%)</title><rect x="73.0616%" y="357" width="0.0247%" height="15" fill="rgb(234,116,52)" fg:x="26658" fg:w="9"/><text x="73.3116%" y="367.50"></text></g><g><title>dkn-compute`&lt;libp2p_swarm::stream::Stream as futures_io::if_std::AsyncRead&gt;::poll_read (343 samples, 0.94%)</title><rect x="72.2339%" y="373" width="0.9401%" height="15" fill="rgb(222,124,15)" fg:x="26356" fg:w="343"/><text x="72.4839%" y="383.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (32 samples, 0.09%)</title><rect x="73.0863%" y="357" width="0.0877%" height="15" fill="rgb(231,179,28)" fg:x="26667" fg:w="32"/><text x="73.3363%" y="367.50"></text></g><g><title>dkn-compute`&lt;libp2p_yamux::Stream as futures_io::if_std::AsyncRead&gt;::poll_read (39 samples, 0.11%)</title><rect x="73.1740%" y="373" width="0.1069%" height="15" fill="rgb(226,93,45)" fg:x="26699" fg:w="39"/><text x="73.4240%" y="383.50"></text></g><g><title>dkn-compute`&lt;quick_protobuf_codec::Codec&lt;In,Out&gt; as asynchronous_codec::decoder::Decoder&gt;::decode (12 samples, 0.03%)</title><rect x="73.2809%" y="373" width="0.0329%" height="15" fill="rgb(215,8,51)" fg:x="26738" fg:w="12"/><text x="73.5309%" y="383.50"></text></g><g><title>dkn-compute`DYLD-STUB$$free (10 samples, 0.03%)</title><rect x="73.3220%" y="373" width="0.0274%" height="15" fill="rgb(223,106,5)" fg:x="26753" fg:w="10"/><text x="73.5720%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (5 samples, 0.01%)</title><rect x="73.3741%" y="373" width="0.0137%" height="15" fill="rgb(250,191,5)" fg:x="26772" fg:w="5"/><text x="73.6241%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`_szone_free (9 samples, 0.02%)</title><rect x="73.3878%" y="373" width="0.0247%" height="15" fill="rgb(242,132,44)" fg:x="26777" fg:w="9"/><text x="73.6378%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`free (25 samples, 0.07%)</title><rect x="73.4124%" y="373" width="0.0685%" height="15" fill="rgb(251,152,29)" fg:x="26786" fg:w="25"/><text x="73.6624%" y="383.50"></text></g><g><title>dkn-compute`&lt;asynchronous_codec::framed_read::FramedRead2&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (1,668 samples, 4.57%)</title><rect x="69.0273%" y="389" width="4.5715%" height="15" fill="rgb(218,179,5)" fg:x="25186" fg:w="1668"/><text x="69.2773%" y="399.50">dkn-c..</text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (41 samples, 0.11%)</title><rect x="73.4864%" y="373" width="0.1124%" height="15" fill="rgb(227,67,19)" fg:x="26813" fg:w="41"/><text x="73.7364%" y="383.50"></text></g><g><title>dkn-compute`&lt;libp2p_swarm::stream::Stream as futures_io::if_std::AsyncWrite&gt;::poll_flush (28 samples, 0.08%)</title><rect x="73.6564%" y="373" width="0.0767%" height="15" fill="rgb(233,119,31)" fg:x="26875" fg:w="28"/><text x="73.9064%" y="383.50"></text></g><g><title>dkn-compute`&lt;libp2p_swarm::stream::Stream as futures_io::if_std::AsyncWrite&gt;::poll_write (5 samples, 0.01%)</title><rect x="73.7331%" y="373" width="0.0137%" height="15" fill="rgb(241,120,22)" fg:x="26903" fg:w="5"/><text x="73.9831%" y="383.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_lock (16 samples, 0.04%)</title><rect x="73.7989%" y="341" width="0.0439%" height="15" fill="rgb(224,102,30)" fg:x="26927" fg:w="16"/><text x="74.0489%" y="351.50"></text></g><g><title>dkn-compute`futures_channel::mpsc::BoundedSenderInner&lt;T&gt;::poll_unparked (35 samples, 0.10%)</title><rect x="73.7578%" y="357" width="0.0959%" height="15" fill="rgb(210,164,37)" fg:x="26912" fg:w="35"/><text x="74.0078%" y="367.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_unlock (4 samples, 0.01%)</title><rect x="73.8427%" y="341" width="0.0110%" height="15" fill="rgb(226,191,16)" fg:x="26943" fg:w="4"/><text x="74.0927%" y="351.50"></text></g><g><title>dkn-compute`tokio::runtime::task::waker::drop_waker (16 samples, 0.04%)</title><rect x="73.8592%" y="357" width="0.0439%" height="15" fill="rgb(214,40,45)" fg:x="26949" fg:w="16"/><text x="74.1092%" y="367.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_lock (5 samples, 0.01%)</title><rect x="73.9030%" y="357" width="0.0137%" height="15" fill="rgb(244,29,26)" fg:x="26965" fg:w="5"/><text x="74.1530%" y="367.50"></text></g><g><title>dkn-compute`&lt;yamux::connection::stream::Stream as futures_io::if_std::AsyncWrite&gt;::poll_flush (63 samples, 0.17%)</title><rect x="73.7468%" y="373" width="0.1727%" height="15" fill="rgb(216,16,5)" fg:x="26908" fg:w="63"/><text x="73.9968%" y="383.50"></text></g><g><title>dkn-compute`futures_channel::mpsc::BoundedSenderInner&lt;T&gt;::poll_unparked (8 samples, 0.02%)</title><rect x="73.9688%" y="357" width="0.0219%" height="15" fill="rgb(249,76,35)" fg:x="26989" fg:w="8"/><text x="74.2188%" y="367.50"></text></g><g><title>dkn-compute`futures_channel::mpsc::BoundedSenderInner&lt;T&gt;::poll_unparked (5 samples, 0.01%)</title><rect x="74.0318%" y="341" width="0.0137%" height="15" fill="rgb(207,11,44)" fg:x="27012" fg:w="5"/><text x="74.2818%" y="351.50"></text></g><g><title>dkn-compute`futures_channel::mpsc::Sender&lt;T&gt;::start_send (23 samples, 0.06%)</title><rect x="73.9907%" y="357" width="0.0630%" height="15" fill="rgb(228,190,49)" fg:x="26997" fg:w="23"/><text x="74.2407%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (13 samples, 0.04%)</title><rect x="74.0620%" y="357" width="0.0356%" height="15" fill="rgb(214,173,12)" fg:x="27023" fg:w="13"/><text x="74.3120%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (4 samples, 0.01%)</title><rect x="74.1333%" y="325" width="0.0110%" height="15" fill="rgb(218,26,35)" fg:x="27049" fg:w="4"/><text x="74.3833%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`_tiny_check_and_zero_inline_meta_from_freelist (7 samples, 0.02%)</title><rect x="74.2073%" y="309" width="0.0192%" height="15" fill="rgb(220,200,19)" fg:x="27076" fg:w="7"/><text x="74.4573%" y="319.50"></text></g><g><title>dkn-compute`&lt;yamux::connection::stream::Stream as futures_io::if_std::AsyncWrite&gt;::poll_write (127 samples, 0.35%)</title><rect x="73.9195%" y="373" width="0.3481%" height="15" fill="rgb(239,95,49)" fg:x="26971" fg:w="127"/><text x="74.1695%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (62 samples, 0.17%)</title><rect x="74.0976%" y="357" width="0.1699%" height="15" fill="rgb(235,85,53)" fg:x="27036" fg:w="62"/><text x="74.3476%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (57 samples, 0.16%)</title><rect x="74.1113%" y="341" width="0.1562%" height="15" fill="rgb(233,133,31)" fg:x="27041" fg:w="57"/><text x="74.3613%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (45 samples, 0.12%)</title><rect x="74.1442%" y="325" width="0.1233%" height="15" fill="rgb(218,25,20)" fg:x="27053" fg:w="45"/><text x="74.3942%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (15 samples, 0.04%)</title><rect x="74.2264%" y="309" width="0.0411%" height="15" fill="rgb(252,210,38)" fg:x="27083" fg:w="15"/><text x="74.4764%" y="319.50"></text></g><g><title>dkn-compute`futures_channel::mpsc::BoundedSenderInner&lt;T&gt;::poll_unparked (6 samples, 0.02%)</title><rect x="74.2703%" y="373" width="0.0164%" height="15" fill="rgb(242,134,21)" fg:x="27099" fg:w="6"/><text x="74.5203%" y="383.50"></text></g><g><title>dkn-compute`&lt;asynchronous_codec::framed_write::FramedWrite2&lt;T&gt; as futures_sink::Sink&lt;&lt;T as asynchronous_codec::encoder::Encoder&gt;::Item&gt;&gt;::poll_flush (272 samples, 0.75%)</title><rect x="73.5988%" y="389" width="0.7455%" height="15" fill="rgb(213,28,48)" fg:x="26854" fg:w="272"/><text x="73.8488%" y="399.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (14 samples, 0.04%)</title><rect x="74.3059%" y="373" width="0.0384%" height="15" fill="rgb(250,196,2)" fg:x="27112" fg:w="14"/><text x="74.5559%" y="383.50"></text></g><g><title>dkn-compute`&lt;asynchronous_codec::framed_write::FramedWrite2&lt;T&gt; as futures_sink::Sink&lt;&lt;T as asynchronous_codec::encoder::Encoder&gt;::Item&gt;&gt;::poll_ready (4 samples, 0.01%)</title><rect x="74.3443%" y="389" width="0.0110%" height="15" fill="rgb(227,5,17)" fg:x="27126" fg:w="4"/><text x="74.5943%" y="399.50"></text></g><g><title>dkn-compute`&lt;libp2p_core::muxing::boxed::SubstreamBox as futures_io::if_std::AsyncWrite&gt;::poll_flush (4 samples, 0.01%)</title><rect x="74.3552%" y="389" width="0.0110%" height="15" fill="rgb(221,226,24)" fg:x="27130" fg:w="4"/><text x="74.6052%" y="399.50"></text></g><g><title>dkn-compute`&lt;libp2p_core::muxing::boxed::SubstreamBox as futures_io::if_std::AsyncWrite&gt;::poll_write (4 samples, 0.01%)</title><rect x="74.3662%" y="389" width="0.0110%" height="15" fill="rgb(211,5,48)" fg:x="27134" fg:w="4"/><text x="74.6162%" y="399.50"></text></g><g><title>dkn-compute`&lt;libp2p_gossipsub::protocol::GossipsubCodec as asynchronous_codec::decoder::Decoder&gt;::decode (16 samples, 0.04%)</title><rect x="74.3772%" y="389" width="0.0439%" height="15" fill="rgb(219,150,6)" fg:x="27138" fg:w="16"/><text x="74.6272%" y="399.50"></text></g><g><title>dkn-compute`&lt;libp2p_swarm::stream::Stream as futures_io::if_std::AsyncRead&gt;::poll_read (4 samples, 0.01%)</title><rect x="74.4265%" y="389" width="0.0110%" height="15" fill="rgb(251,46,16)" fg:x="27156" fg:w="4"/><text x="74.6765%" y="399.50"></text></g><g><title>dkn-compute`&lt;libp2p_yamux::Stream as futures_io::if_std::AsyncWrite&gt;::poll_flush (32 samples, 0.09%)</title><rect x="74.4457%" y="389" width="0.0877%" height="15" fill="rgb(220,204,40)" fg:x="27163" fg:w="32"/><text x="74.6957%" y="399.50"></text></g><g><title>dkn-compute`&lt;libp2p_yamux::Stream as futures_io::if_std::AsyncWrite&gt;::poll_write (5 samples, 0.01%)</title><rect x="74.5334%" y="389" width="0.0137%" height="15" fill="rgb(211,85,2)" fg:x="27195" fg:w="5"/><text x="74.7834%" y="399.50"></text></g><g><title>dkn-compute`&lt;libp2p_gossipsub::rpc_proto::proto::gossipsub::pb::Message as quick_protobuf::message::MessageWrite&gt;::get_size (76 samples, 0.21%)</title><rect x="74.5745%" y="357" width="0.2083%" height="15" fill="rgb(229,17,7)" fg:x="27210" fg:w="76"/><text x="74.8245%" y="367.50"></text></g><g><title>dkn-compute`&lt;libp2p_gossipsub::rpc_proto::proto::gossipsub::pb::RPC as quick_protobuf::message::MessageWrite&gt;::get_size (86 samples, 0.24%)</title><rect x="74.5608%" y="373" width="0.2357%" height="15" fill="rgb(239,72,28)" fg:x="27205" fg:w="86"/><text x="74.8108%" y="383.50"></text></g><g><title>dkn-compute`quick_protobuf::sizeofs::sizeof_len (5 samples, 0.01%)</title><rect x="74.7828%" y="357" width="0.0137%" height="15" fill="rgb(230,47,54)" fg:x="27286" fg:w="5"/><text x="75.0328%" y="367.50"></text></g><g><title>dkn-compute`&lt;libp2p_gossipsub::rpc_proto::proto::gossipsub::pb::ControlMessage as quick_protobuf::message::MessageWrite&gt;::write_message (5 samples, 0.01%)</title><rect x="74.8047%" y="357" width="0.0137%" height="15" fill="rgb(214,50,8)" fg:x="27294" fg:w="5"/><text x="75.0547%" y="367.50"></text></g><g><title>dkn-compute`quick_protobuf::writer::Writer&lt;W&gt;::write_with_tag (5 samples, 0.01%)</title><rect x="74.8047%" y="341" width="0.0137%" height="15" fill="rgb(216,198,43)" fg:x="27294" fg:w="5"/><text x="75.0547%" y="351.50"></text></g><g><title>dkn-compute`&lt;bytes::bytes_mut::BytesMut as bytes::buf::buf_mut::BufMut&gt;::put_slice (12 samples, 0.03%)</title><rect x="74.9801%" y="325" width="0.0329%" height="15" fill="rgb(234,20,35)" fg:x="27358" fg:w="12"/><text x="75.2301%" y="335.50"></text></g><g><title>dkn-compute`&lt;quick_protobuf_codec::BytesMutWriterBackend as quick_protobuf::writer::WriterBackend&gt;::pb_write_all (108 samples, 0.30%)</title><rect x="74.8842%" y="341" width="0.2960%" height="15" fill="rgb(254,45,19)" fg:x="27323" fg:w="108"/><text x="75.1342%" y="351.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (61 samples, 0.17%)</title><rect x="75.0130%" y="325" width="0.1672%" height="15" fill="rgb(219,14,44)" fg:x="27370" fg:w="61"/><text x="75.2630%" y="335.50"></text></g><g><title>dkn-compute`&lt;bytes::bytes_mut::BytesMut as bytes::buf::buf_mut::BufMut&gt;::put_slice (7 samples, 0.02%)</title><rect x="75.3858%" y="325" width="0.0192%" height="15" fill="rgb(217,220,26)" fg:x="27506" fg:w="7"/><text x="75.6358%" y="335.50"></text></g><g><title>dkn-compute`&lt;bytes::bytes_mut::BytesMut as bytes::buf::buf_mut::BufMut&gt;::put_slice (13 samples, 0.04%)</title><rect x="75.4132%" y="309" width="0.0356%" height="15" fill="rgb(213,158,28)" fg:x="27516" fg:w="13"/><text x="75.6632%" y="319.50"></text></g><g><title>dkn-compute`&lt;libp2p_gossipsub::rpc_proto::proto::gossipsub::pb::Message as quick_protobuf::message::MessageWrite&gt;::write_message (242 samples, 0.66%)</title><rect x="74.8184%" y="357" width="0.6632%" height="15" fill="rgb(252,51,52)" fg:x="27299" fg:w="242"/><text x="75.0684%" y="367.50"></text></g><g><title>dkn-compute`quick_protobuf::writer::Writer&lt;W&gt;::write_with_tag (107 samples, 0.29%)</title><rect x="75.1884%" y="341" width="0.2933%" height="15" fill="rgb(246,89,16)" fg:x="27434" fg:w="107"/><text x="75.4384%" y="351.50"></text></g><g><title>dkn-compute`&lt;quick_protobuf_codec::BytesMutWriterBackend as quick_protobuf::writer::WriterBackend&gt;::pb_write_u8 (28 samples, 0.08%)</title><rect x="75.4049%" y="325" width="0.0767%" height="15" fill="rgb(216,158,49)" fg:x="27513" fg:w="28"/><text x="75.6549%" y="335.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (12 samples, 0.03%)</title><rect x="75.4488%" y="309" width="0.0329%" height="15" fill="rgb(236,107,19)" fg:x="27529" fg:w="12"/><text x="75.6988%" y="319.50"></text></g><g><title>dkn-compute`&lt;bytes::bytes_mut::BytesMut as bytes::buf::buf_mut::BufMut&gt;::put_slice (5 samples, 0.01%)</title><rect x="75.5475%" y="325" width="0.0137%" height="15" fill="rgb(228,185,30)" fg:x="27565" fg:w="5"/><text x="75.7975%" y="335.50"></text></g><g><title>dkn-compute`&lt;quick_protobuf_codec::BytesMutWriterBackend as quick_protobuf::writer::WriterBackend&gt;::pb_write_u8 (11 samples, 0.03%)</title><rect x="75.5447%" y="341" width="0.0301%" height="15" fill="rgb(246,134,8)" fg:x="27564" fg:w="11"/><text x="75.7947%" y="351.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (5 samples, 0.01%)</title><rect x="75.5612%" y="325" width="0.0137%" height="15" fill="rgb(214,143,50)" fg:x="27570" fg:w="5"/><text x="75.8112%" y="335.50"></text></g><g><title>dkn-compute`&lt;libp2p_gossipsub::rpc_proto::proto::gossipsub::pb::RPC as quick_protobuf::message::MessageWrite&gt;::write_message (285 samples, 0.78%)</title><rect x="74.7965%" y="373" width="0.7811%" height="15" fill="rgb(228,75,8)" fg:x="27291" fg:w="285"/><text x="75.0465%" y="383.50"></text></g><g><title>dkn-compute`quick_protobuf::writer::Writer&lt;W&gt;::write_with_tag (32 samples, 0.09%)</title><rect x="75.4899%" y="357" width="0.0877%" height="15" fill="rgb(207,175,4)" fg:x="27544" fg:w="32"/><text x="75.7399%" y="367.50"></text></g><g><title>dkn-compute`core::ptr::drop_in_place&lt;core::option::Option&lt;libp2p_gossipsub::rpc_proto::proto::gossipsub::pb::ControlMessage&gt;&gt; (6 samples, 0.02%)</title><rect x="75.5776%" y="373" width="0.0164%" height="15" fill="rgb(205,108,24)" fg:x="27576" fg:w="6"/><text x="75.8276%" y="383.50"></text></g><g><title>dkn-compute`DYLD-STUB$$free (15 samples, 0.04%)</title><rect x="75.6023%" y="357" width="0.0411%" height="15" fill="rgb(244,120,49)" fg:x="27585" fg:w="15"/><text x="75.8523%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (39 samples, 0.11%)</title><rect x="75.6763%" y="341" width="0.1069%" height="15" fill="rgb(223,47,38)" fg:x="27612" fg:w="39"/><text x="75.9263%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`_szone_free (5 samples, 0.01%)</title><rect x="75.7832%" y="341" width="0.0137%" height="15" fill="rgb(229,179,11)" fg:x="27651" fg:w="5"/><text x="76.0332%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`free_small (8 samples, 0.02%)</title><rect x="75.7969%" y="341" width="0.0219%" height="15" fill="rgb(231,122,1)" fg:x="27656" fg:w="8"/><text x="76.0469%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_remove_ptr_no_clear (5 samples, 0.01%)</title><rect x="75.8051%" y="325" width="0.0137%" height="15" fill="rgb(245,119,9)" fg:x="27659" fg:w="5"/><text x="76.0551%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (9 samples, 0.02%)</title><rect x="75.9832%" y="325" width="0.0247%" height="15" fill="rgb(241,163,25)" fg:x="27724" fg:w="9"/><text x="76.2332%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (23 samples, 0.06%)</title><rect x="76.0956%" y="309" width="0.0630%" height="15" fill="rgb(217,214,3)" fg:x="27765" fg:w="23"/><text x="76.3456%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (28 samples, 0.08%)</title><rect x="76.1586%" y="309" width="0.0767%" height="15" fill="rgb(240,86,28)" fg:x="27788" fg:w="28"/><text x="76.4086%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (154 samples, 0.42%)</title><rect x="75.8188%" y="341" width="0.4221%" height="15" fill="rgb(215,47,9)" fg:x="27664" fg:w="154"/><text x="76.0688%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (85 samples, 0.23%)</title><rect x="76.0079%" y="325" width="0.2330%" height="15" fill="rgb(252,25,45)" fg:x="27733" fg:w="85"/><text x="76.2579%" y="335.50"></text></g><g><title>dkn-compute`core::ptr::drop_in_place&lt;libp2p_gossipsub::rpc_proto::proto::gossipsub::pb::Message&gt; (222 samples, 0.61%)</title><rect x="75.6434%" y="357" width="0.6084%" height="15" fill="rgb(251,164,9)" fg:x="27600" fg:w="222"/><text x="75.8934%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (41 samples, 0.11%)</title><rect x="76.2518%" y="357" width="0.1124%" height="15" fill="rgb(233,194,0)" fg:x="27822" fg:w="41"/><text x="76.5018%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`_szone_free (7 samples, 0.02%)</title><rect x="76.3642%" y="357" width="0.0192%" height="15" fill="rgb(249,111,24)" fg:x="27863" fg:w="7"/><text x="76.6142%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`free (52 samples, 0.14%)</title><rect x="76.3834%" y="357" width="0.1425%" height="15" fill="rgb(250,223,3)" fg:x="27870" fg:w="52"/><text x="76.6334%" y="367.50"></text></g><g><title>dkn-compute`core::ptr::drop_in_place&lt;libp2p_gossipsub::rpc_proto::proto::gossipsub::pb::RPC&gt; (343 samples, 0.94%)</title><rect x="75.5968%" y="373" width="0.9401%" height="15" fill="rgb(236,178,37)" fg:x="27583" fg:w="343"/><text x="75.8468%" y="383.50"></text></g><g><title>dkn-compute`&lt;quick_protobuf_codec::Codec&lt;In,Out&gt; as asynchronous_codec::encoder::Encoder&gt;::encode (732 samples, 2.01%)</title><rect x="74.5471%" y="389" width="2.0062%" height="15" fill="rgb(241,158,50)" fg:x="27200" fg:w="732"/><text x="74.7971%" y="399.50">d..</text></g><g><title>libsystem_malloc.dylib`free (4 samples, 0.01%)</title><rect x="76.5423%" y="373" width="0.0110%" height="15" fill="rgb(213,121,41)" fg:x="27928" fg:w="4"/><text x="76.7923%" y="383.50"></text></g><g><title>dkn-compute`&lt;yamux::connection::stream::Stream as futures_io::if_std::AsyncWrite&gt;::poll_flush (20 samples, 0.05%)</title><rect x="76.5533%" y="389" width="0.0548%" height="15" fill="rgb(240,92,3)" fg:x="27932" fg:w="20"/><text x="76.8033%" y="399.50"></text></g><g><title>dkn-compute`core::ptr::drop_in_place&lt;core::option::Option&lt;libp2p_gossipsub::handler::OutboundSubstreamState&gt;&gt; (16 samples, 0.04%)</title><rect x="76.6136%" y="389" width="0.0439%" height="15" fill="rgb(205,123,3)" fg:x="27954" fg:w="16"/><text x="76.8636%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (17 samples, 0.05%)</title><rect x="76.6794%" y="341" width="0.0466%" height="15" fill="rgb(205,97,47)" fg:x="27978" fg:w="17"/><text x="76.9294%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (13 samples, 0.04%)</title><rect x="76.6903%" y="325" width="0.0356%" height="15" fill="rgb(247,152,14)" fg:x="27982" fg:w="13"/><text x="76.9403%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`medium_size (6 samples, 0.02%)</title><rect x="76.7260%" y="341" width="0.0164%" height="15" fill="rgb(248,195,53)" fg:x="27995" fg:w="6"/><text x="76.9760%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_realloc (9 samples, 0.02%)</title><rect x="76.7424%" y="341" width="0.0247%" height="15" fill="rgb(226,201,16)" fg:x="28001" fg:w="9"/><text x="76.9924%" y="351.50"></text></g><g><title>dkn-compute`smallvec::SmallVec&lt;A&gt;::shrink_to_fit (55 samples, 0.15%)</title><rect x="76.6629%" y="389" width="0.1507%" height="15" fill="rgb(205,98,0)" fg:x="27972" fg:w="55"/><text x="76.9129%" y="399.50"></text></g><g><title>dkn-compute`smallvec::SmallVec&lt;A&gt;::try_grow (55 samples, 0.15%)</title><rect x="76.6629%" y="373" width="0.1507%" height="15" fill="rgb(214,191,48)" fg:x="27972" fg:w="55"/><text x="76.9129%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`realloc (52 samples, 0.14%)</title><rect x="76.6711%" y="357" width="0.1425%" height="15" fill="rgb(237,112,39)" fg:x="27975" fg:w="52"/><text x="76.9211%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (14 samples, 0.04%)</title><rect x="76.7753%" y="341" width="0.0384%" height="15" fill="rgb(247,203,27)" fg:x="28013" fg:w="14"/><text x="77.0253%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (7 samples, 0.02%)</title><rect x="76.7945%" y="325" width="0.0192%" height="15" fill="rgb(235,124,28)" fg:x="28020" fg:w="7"/><text x="77.0445%" y="335.50"></text></g><g><title>libsystem_c.dylib`clock_gettime_nsec_np (16 samples, 0.04%)</title><rect x="76.9425%" y="357" width="0.0439%" height="15" fill="rgb(208,207,46)" fg:x="28074" fg:w="16"/><text x="77.1925%" y="367.50"></text></g><g><title>libsystem_kernel.dylib`mach_timebase_info (6 samples, 0.02%)</title><rect x="76.9699%" y="341" width="0.0164%" height="15" fill="rgb(234,176,4)" fg:x="28084" fg:w="6"/><text x="77.2199%" y="351.50"></text></g><g><title>libsystem_kernel.dylib`mach_absolute_time (17 samples, 0.05%)</title><rect x="76.9863%" y="357" width="0.0466%" height="15" fill="rgb(230,133,28)" fg:x="28090" fg:w="17"/><text x="77.2363%" y="367.50"></text></g><g><title>libsystem_c.dylib`clock_gettime (74 samples, 0.20%)</title><rect x="76.8465%" y="373" width="0.2028%" height="15" fill="rgb(211,137,40)" fg:x="28039" fg:w="74"/><text x="77.0965%" y="383.50"></text></g><g><title>libsystem_kernel.dylib`mach_timebase_info (6 samples, 0.02%)</title><rect x="77.0329%" y="357" width="0.0164%" height="15" fill="rgb(254,35,13)" fg:x="28107" fg:w="6"/><text x="77.2829%" y="367.50"></text></g><g><title>dkn-compute`std::sys::pal::unix::time::Timespec::now (87 samples, 0.24%)</title><rect x="76.8137%" y="389" width="0.2384%" height="15" fill="rgb(225,49,51)" fg:x="28027" fg:w="87"/><text x="77.0637%" y="399.50"></text></g><g><title>libsystem_platform.dylib`__bzero (7 samples, 0.02%)</title><rect x="77.0576%" y="389" width="0.0192%" height="15" fill="rgb(251,10,15)" fg:x="28116" fg:w="7"/><text x="77.3076%" y="399.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (87 samples, 0.24%)</title><rect x="77.0768%" y="389" width="0.2384%" height="15" fill="rgb(228,207,15)" fg:x="28123" fg:w="87"/><text x="77.3268%" y="399.50"></text></g><g><title>dkn-compute`libp2p_gossipsub::handler::EnabledHandler::poll (3,704 samples, 10.15%)</title><rect x="68.3860%" y="405" width="10.1516%" height="15" fill="rgb(241,99,19)" fg:x="24952" fg:w="3704"/><text x="68.6360%" y="415.50">dkn-compute`lib..</text></g><g><title>libsystem_platform.dylib`_platform_memset (446 samples, 1.22%)</title><rect x="77.3152%" y="389" width="1.2224%" height="15" fill="rgb(207,104,49)" fg:x="28210" fg:w="446"/><text x="77.5652%" y="399.50"></text></g><g><title>dkn-compute`tracing::span::Span::log (31 samples, 0.08%)</title><rect x="78.5540%" y="405" width="0.0850%" height="15" fill="rgb(234,99,18)" fg:x="28662" fg:w="31"/><text x="78.8040%" y="415.50"></text></g><g><title>dkn-compute`tracing::span::Span::record_all (35 samples, 0.10%)</title><rect x="78.6390%" y="405" width="0.0959%" height="15" fill="rgb(213,191,49)" fg:x="28693" fg:w="35"/><text x="78.8890%" y="415.50"></text></g><g><title>dkn-compute`tracing::span::Span::log (14 samples, 0.04%)</title><rect x="78.6965%" y="389" width="0.0384%" height="15" fill="rgb(210,226,19)" fg:x="28714" fg:w="14"/><text x="78.9465%" y="399.50"></text></g><g><title>dkn-compute`tracing_core::span::Record::is_empty (9 samples, 0.02%)</title><rect x="78.7349%" y="405" width="0.0247%" height="15" fill="rgb(229,97,18)" fg:x="28728" fg:w="9"/><text x="78.9849%" y="415.50"></text></g><g><title>dkn-compute`&lt;libp2p_gossipsub::handler::Handler as libp2p_swarm::handler::ConnectionHandler&gt;::poll (3,962 samples, 10.86%)</title><rect x="68.0626%" y="421" width="10.8587%" height="15" fill="rgb(211,167,15)" fg:x="24834" fg:w="3962"/><text x="68.3126%" y="431.50">dkn-compute`&lt;lib..</text></g><g><title>libsystem_platform.dylib`_platform_memmove (59 samples, 0.16%)</title><rect x="78.7596%" y="405" width="0.1617%" height="15" fill="rgb(210,169,34)" fg:x="28737" fg:w="59"/><text x="79.0096%" y="415.50"></text></g><g><title>dkn-compute`&lt;futures_timer::native::delay::Delay as core::future::future::Future&gt;::poll (27 samples, 0.07%)</title><rect x="79.0364%" y="405" width="0.0740%" height="15" fill="rgb(241,121,31)" fg:x="28838" fg:w="27"/><text x="79.2864%" y="415.50"></text></g><g><title>dkn-compute`&lt;futures_util::stream::futures_unordered::FuturesUnordered&lt;Fut&gt; as futures_core::stream::Stream&gt;::poll_next (4 samples, 0.01%)</title><rect x="79.1104%" y="405" width="0.0110%" height="15" fill="rgb(232,40,11)" fg:x="28865" fg:w="4"/><text x="79.3604%" y="415.50"></text></g><g><title>dkn-compute`core::ptr::drop_in_place&lt;tracing::span::Span&gt; (20 samples, 0.05%)</title><rect x="79.1241%" y="405" width="0.0548%" height="15" fill="rgb(205,86,26)" fg:x="28870" fg:w="20"/><text x="79.3741%" y="415.50"></text></g><g><title>dkn-compute`tracing::span::Span::log (4 samples, 0.01%)</title><rect x="79.1679%" y="389" width="0.0110%" height="15" fill="rgb(231,126,28)" fg:x="28886" fg:w="4"/><text x="79.4179%" y="399.50"></text></g><g><title>dkn-compute`futures_bounded::futures_map::FuturesMap&lt;ID,O&gt;::poll_unpin (53 samples, 0.15%)</title><rect x="79.1789%" y="405" width="0.1453%" height="15" fill="rgb(219,221,18)" fg:x="28890" fg:w="53"/><text x="79.4289%" y="415.50"></text></g><g><title>dkn-compute`&lt;futures_util::stream::futures_unordered::FuturesUnordered&lt;Fut&gt; as futures_core::stream::Stream&gt;::poll_next (50 samples, 0.14%)</title><rect x="79.1871%" y="389" width="0.1370%" height="15" fill="rgb(211,40,0)" fg:x="28893" fg:w="50"/><text x="79.4371%" y="399.50"></text></g><g><title>dkn-compute`futures_core::task::__internal::atomic_waker::AtomicWaker::register (36 samples, 0.10%)</title><rect x="79.2255%" y="373" width="0.0987%" height="15" fill="rgb(239,85,43)" fg:x="28907" fg:w="36"/><text x="79.4755%" y="383.50"></text></g><g><title>dkn-compute`tokio::runtime::task::waker::clone_waker (7 samples, 0.02%)</title><rect x="79.3241%" y="405" width="0.0192%" height="15" fill="rgb(231,55,21)" fg:x="28943" fg:w="7"/><text x="79.5741%" y="415.50"></text></g><g><title>dkn-compute`tokio::runtime::task::waker::drop_waker (45 samples, 0.12%)</title><rect x="79.3433%" y="405" width="0.1233%" height="15" fill="rgb(225,184,43)" fg:x="28950" fg:w="45"/><text x="79.5933%" y="415.50"></text></g><g><title>dkn-compute`tracing::span::Span::log (19 samples, 0.05%)</title><rect x="79.4667%" y="405" width="0.0521%" height="15" fill="rgb(251,158,41)" fg:x="28995" fg:w="19"/><text x="79.7167%" y="415.50"></text></g><g><title>dkn-compute`tracing::span::Span::record_all (20 samples, 0.05%)</title><rect x="79.5187%" y="405" width="0.0548%" height="15" fill="rgb(234,159,37)" fg:x="29014" fg:w="20"/><text x="79.7687%" y="415.50"></text></g><g><title>dkn-compute`tracing::span::Span::log (12 samples, 0.03%)</title><rect x="79.5407%" y="389" width="0.0329%" height="15" fill="rgb(216,204,22)" fg:x="29022" fg:w="12"/><text x="79.7907%" y="399.50"></text></g><g><title>dkn-compute`tracing_core::span::Record::is_empty (4 samples, 0.01%)</title><rect x="79.5735%" y="405" width="0.0110%" height="15" fill="rgb(214,17,3)" fg:x="29034" fg:w="4"/><text x="79.8235%" y="415.50"></text></g><g><title>dkn-compute`&lt;libp2p_identify::handler::Handler as libp2p_swarm::handler::ConnectionHandler&gt;::poll (249 samples, 0.68%)</title><rect x="78.9213%" y="421" width="0.6824%" height="15" fill="rgb(212,111,17)" fg:x="28796" fg:w="249"/><text x="79.1713%" y="431.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (7 samples, 0.02%)</title><rect x="79.5845%" y="405" width="0.0192%" height="15" fill="rgb(221,157,24)" fg:x="29038" fg:w="7"/><text x="79.8345%" y="415.50"></text></g><g><title>dkn-compute`&lt;futures_util::stream::futures_unordered::FuturesUnordered&lt;Fut&gt; as futures_core::stream::Stream&gt;::poll_next (15 samples, 0.04%)</title><rect x="79.7791%" y="405" width="0.0411%" height="15" fill="rgb(252,16,13)" fg:x="29109" fg:w="15"/><text x="80.0291%" y="415.50"></text></g><g><title>dkn-compute`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (8 samples, 0.02%)</title><rect x="79.9490%" y="277" width="0.0219%" height="15" fill="rgb(221,62,2)" fg:x="29171" fg:w="8"/><text x="80.1990%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (6 samples, 0.02%)</title><rect x="79.9545%" y="261" width="0.0164%" height="15" fill="rgb(247,87,22)" fg:x="29173" fg:w="6"/><text x="80.2045%" y="271.50"></text></g><g><title>dkn-compute`alloc::vec::in_place_collect::_&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (10 samples, 0.03%)</title><rect x="79.9490%" y="293" width="0.0274%" height="15" fill="rgb(215,73,9)" fg:x="29171" fg:w="10"/><text x="80.1990%" y="303.50"></text></g><g><title>dkn-compute`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (12 samples, 0.03%)</title><rect x="79.9490%" y="309" width="0.0329%" height="15" fill="rgb(207,175,33)" fg:x="29171" fg:w="12"/><text x="80.1990%" y="319.50"></text></g><g><title>dkn-compute`&lt;futures_util::stream::stream::into_future::StreamFuture&lt;St&gt; as core::future::future::Future&gt;::poll (22 samples, 0.06%)</title><rect x="79.9244%" y="373" width="0.0603%" height="15" fill="rgb(243,129,54)" fg:x="29162" fg:w="22"/><text x="80.1744%" y="383.50"></text></g><g><title>dkn-compute`&lt;libp2p_kad::handler::InboundSubstreamState as futures_core::stream::Stream&gt;::poll_next (22 samples, 0.06%)</title><rect x="79.9244%" y="357" width="0.0603%" height="15" fill="rgb(227,119,45)" fg:x="29162" fg:w="22"/><text x="80.1744%" y="367.50"></text></g><g><title>dkn-compute`libp2p_kad::protocol::resp_msg_to_proto (13 samples, 0.04%)</title><rect x="79.9490%" y="341" width="0.0356%" height="15" fill="rgb(205,109,36)" fg:x="29171" fg:w="13"/><text x="80.1990%" y="351.50"></text></g><g><title>dkn-compute`alloc::vec::in_place_collect::from_iter_in_place (13 samples, 0.04%)</title><rect x="79.9490%" y="325" width="0.0356%" height="15" fill="rgb(205,6,39)" fg:x="29171" fg:w="13"/><text x="80.1990%" y="335.50"></text></g><g><title>dkn-compute`futures_core::task::__internal::atomic_waker::AtomicWaker::register (23 samples, 0.06%)</title><rect x="79.9874%" y="373" width="0.0630%" height="15" fill="rgb(221,32,16)" fg:x="29185" fg:w="23"/><text x="80.2374%" y="383.50"></text></g><g><title>dkn-compute`&lt;futures_util::stream::select_all::SelectAll&lt;St&gt; as futures_core::stream::Stream&gt;::poll_next (85 samples, 0.23%)</title><rect x="79.8202%" y="405" width="0.2330%" height="15" fill="rgb(228,144,50)" fg:x="29124" fg:w="85"/><text x="80.0702%" y="415.50"></text></g><g><title>dkn-compute`&lt;futures_util::stream::futures_unordered::FuturesUnordered&lt;Fut&gt; as futures_core::stream::Stream&gt;::poll_next (77 samples, 0.21%)</title><rect x="79.8421%" y="389" width="0.2110%" height="15" fill="rgb(229,201,53)" fg:x="29132" fg:w="77"/><text x="80.0921%" y="399.50"></text></g><g><title>dkn-compute`core::ptr::drop_in_place&lt;tracing::span::Span&gt; (17 samples, 0.05%)</title><rect x="80.0532%" y="405" width="0.0466%" height="15" fill="rgb(249,153,27)" fg:x="29209" fg:w="17"/><text x="80.3032%" y="415.50"></text></g><g><title>dkn-compute`tracing::span::Span::log (8 samples, 0.02%)</title><rect x="80.0778%" y="389" width="0.0219%" height="15" fill="rgb(227,106,25)" fg:x="29218" fg:w="8"/><text x="80.3278%" y="399.50"></text></g><g><title>dkn-compute`futures_core::task::__internal::atomic_waker::AtomicWaker::register (33 samples, 0.09%)</title><rect x="80.2121%" y="373" width="0.0904%" height="15" fill="rgb(230,65,29)" fg:x="29267" fg:w="33"/><text x="80.4621%" y="383.50"></text></g><g><title>dkn-compute`&lt;multiaddr::Multiaddr as core::convert::TryFrom&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt;::try_from (7 samples, 0.02%)</title><rect x="80.3026%" y="293" width="0.0192%" height="15" fill="rgb(221,57,46)" fg:x="29300" fg:w="7"/><text x="80.5526%" y="303.50"></text></g><g><title>dkn-compute`multiaddr::protocol::Protocol::from_bytes (4 samples, 0.01%)</title><rect x="80.3108%" y="277" width="0.0110%" height="15" fill="rgb(229,161,17)" fg:x="29303" fg:w="4"/><text x="80.5608%" y="287.50"></text></g><g><title>dkn-compute`multiaddr::Multiaddr::with_p2p (7 samples, 0.02%)</title><rect x="80.3218%" y="293" width="0.0192%" height="15" fill="rgb(222,213,11)" fg:x="29307" fg:w="7"/><text x="80.5718%" y="303.50"></text></g><g><title>dkn-compute`multiaddr::protocol::Protocol::from_bytes (6 samples, 0.02%)</title><rect x="80.3245%" y="277" width="0.0164%" height="15" fill="rgb(235,35,13)" fg:x="29308" fg:w="6"/><text x="80.5745%" y="287.50"></text></g><g><title>dkn-compute`&lt;libp2p_kad::protocol::KadResponseMsg as core::convert::TryFrom&lt;libp2p_kad::proto::dht::pb::Message&gt;&gt;::try_from (17 samples, 0.05%)</title><rect x="80.3026%" y="341" width="0.0466%" height="15" fill="rgb(233,158,34)" fg:x="29300" fg:w="17"/><text x="80.5526%" y="351.50"></text></g><g><title>dkn-compute`alloc::vec::in_place_collect::_&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (17 samples, 0.05%)</title><rect x="80.3026%" y="325" width="0.0466%" height="15" fill="rgb(215,151,48)" fg:x="29300" fg:w="17"/><text x="80.5526%" y="335.50"></text></g><g><title>dkn-compute`&lt;libp2p_kad::protocol::KadPeer as core::convert::TryFrom&lt;libp2p_kad::proto::dht::pb::mod_Message::Peer&gt;&gt;::try_from (17 samples, 0.05%)</title><rect x="80.3026%" y="309" width="0.0466%" height="15" fill="rgb(229,84,14)" fg:x="29300" fg:w="17"/><text x="80.5526%" y="319.50"></text></g><g><title>dkn-compute`&lt;libp2p_kad::proto::dht::pb::mod_Message::Peer as quick_protobuf::message::MessageRead&gt;::from_reader (4 samples, 0.01%)</title><rect x="80.3492%" y="309" width="0.0110%" height="15" fill="rgb(229,68,14)" fg:x="29317" fg:w="4"/><text x="80.5992%" y="319.50"></text></g><g><title>dkn-compute`&lt;asynchronous_codec::framed_read::FramedRead2&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (26 samples, 0.07%)</title><rect x="80.3026%" y="357" width="0.0713%" height="15" fill="rgb(243,106,26)" fg:x="29300" fg:w="26"/><text x="80.5526%" y="367.50"></text></g><g><title>dkn-compute`&lt;quick_protobuf_codec::Codec&lt;In,Out&gt; as asynchronous_codec::decoder::Decoder&gt;::decode (9 samples, 0.02%)</title><rect x="80.3492%" y="341" width="0.0247%" height="15" fill="rgb(206,45,38)" fg:x="29317" fg:w="9"/><text x="80.5992%" y="351.50"></text></g><g><title>dkn-compute`&lt;libp2p_kad::proto::dht::pb::Message as quick_protobuf::message::MessageRead&gt;::from_reader (9 samples, 0.02%)</title><rect x="80.3492%" y="325" width="0.0247%" height="15" fill="rgb(226,6,15)" fg:x="29317" fg:w="9"/><text x="80.5992%" y="335.50"></text></g><g><title>dkn-compute`&lt;futures_util::stream::futures_unordered::FuturesUnordered&lt;Fut&gt; as futures_core::stream::Stream&gt;::poll_next (94 samples, 0.26%)</title><rect x="80.1217%" y="389" width="0.2576%" height="15" fill="rgb(232,22,54)" fg:x="29234" fg:w="94"/><text x="80.3717%" y="399.50"></text></g><g><title>dkn-compute`libp2p_kad::handler::Handler::queue_new_stream::_{{closure}} (28 samples, 0.08%)</title><rect x="80.3026%" y="373" width="0.0767%" height="15" fill="rgb(229,222,32)" fg:x="29300" fg:w="28"/><text x="80.5526%" y="383.50"></text></g><g><title>dkn-compute`futures_bounded::futures_tuple_set::FuturesTupleSet&lt;O,D&gt;::poll_unpin (103 samples, 0.28%)</title><rect x="80.0998%" y="405" width="0.2823%" height="15" fill="rgb(228,62,29)" fg:x="29226" fg:w="103"/><text x="80.3498%" y="415.50"></text></g><g><title>dkn-compute`tokio::runtime::task::waker::clone_waker (8 samples, 0.02%)</title><rect x="80.3821%" y="405" width="0.0219%" height="15" fill="rgb(251,103,34)" fg:x="29329" fg:w="8"/><text x="80.6321%" y="415.50"></text></g><g><title>dkn-compute`tokio::runtime::task::waker::drop_waker (18 samples, 0.05%)</title><rect x="80.4040%" y="405" width="0.0493%" height="15" fill="rgb(233,12,30)" fg:x="29337" fg:w="18"/><text x="80.6540%" y="415.50"></text></g><g><title>dkn-compute`tracing::span::Span::log (11 samples, 0.03%)</title><rect x="80.4533%" y="405" width="0.0301%" height="15" fill="rgb(238,52,0)" fg:x="29355" fg:w="11"/><text x="80.7033%" y="415.50"></text></g><g><title>dkn-compute`tracing::span::Span::record_all (24 samples, 0.07%)</title><rect x="80.4835%" y="405" width="0.0658%" height="15" fill="rgb(223,98,5)" fg:x="29366" fg:w="24"/><text x="80.7335%" y="415.50"></text></g><g><title>dkn-compute`tracing::span::Span::log (13 samples, 0.04%)</title><rect x="80.5136%" y="389" width="0.0356%" height="15" fill="rgb(228,75,37)" fg:x="29377" fg:w="13"/><text x="80.7636%" y="399.50"></text></g><g><title>dkn-compute`&lt;libp2p_kad::handler::Handler as libp2p_swarm::handler::ConnectionHandler&gt;::poll (358 samples, 0.98%)</title><rect x="79.6037%" y="421" width="0.9812%" height="15" fill="rgb(205,115,49)" fg:x="29045" fg:w="358"/><text x="79.8537%" y="431.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (13 samples, 0.04%)</title><rect x="80.5492%" y="405" width="0.0356%" height="15" fill="rgb(250,154,43)" fg:x="29390" fg:w="13"/><text x="80.7992%" y="415.50"></text></g><g><title>dkn-compute`&lt;libp2p_relay::priv_client::handler::Handler as libp2p_swarm::handler::ConnectionHandler&gt;::poll (10 samples, 0.03%)</title><rect x="80.5849%" y="421" width="0.0274%" height="15" fill="rgb(226,43,29)" fg:x="29403" fg:w="10"/><text x="80.8349%" y="431.50"></text></g><g><title>dkn-compute`futures_channel::mpsc::Receiver&lt;T&gt;::next_message (53 samples, 0.15%)</title><rect x="80.7192%" y="389" width="0.1453%" height="15" fill="rgb(249,228,39)" fg:x="29452" fg:w="53"/><text x="80.9692%" y="399.50"></text></g><g><title>dkn-compute`futures_channel::mpsc::queue::Queue&lt;T&gt;::pop_spin (44 samples, 0.12%)</title><rect x="80.7438%" y="373" width="0.1206%" height="15" fill="rgb(216,79,43)" fg:x="29461" fg:w="44"/><text x="80.9938%" y="383.50"></text></g><g><title>dkn-compute`&lt;futures_channel::mpsc::Receiver&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (77 samples, 0.21%)</title><rect x="80.7164%" y="405" width="0.2110%" height="15" fill="rgb(228,95,12)" fg:x="29451" fg:w="77"/><text x="80.9664%" y="415.50"></text></g><g><title>dkn-compute`futures_core::task::__internal::atomic_waker::AtomicWaker::register (21 samples, 0.06%)</title><rect x="80.8699%" y="389" width="0.0576%" height="15" fill="rgb(249,221,15)" fg:x="29507" fg:w="21"/><text x="81.1199%" y="399.50"></text></g><g><title>dkn-compute`&lt;futures_util::stream::futures_unordered::FuturesUnordered&lt;Fut&gt; as futures_core::stream::Stream&gt;::poll_next (50 samples, 0.14%)</title><rect x="80.9275%" y="405" width="0.1370%" height="15" fill="rgb(233,34,13)" fg:x="29528" fg:w="50"/><text x="81.1775%" y="415.50"></text></g><g><title>dkn-compute`futures_core::task::__internal::atomic_waker::AtomicWaker::register (26 samples, 0.07%)</title><rect x="80.9932%" y="389" width="0.0713%" height="15" fill="rgb(214,103,39)" fg:x="29552" fg:w="26"/><text x="81.2432%" y="399.50"></text></g><g><title>dkn-compute`core::ptr::drop_in_place&lt;tracing::span::Span&gt; (17 samples, 0.05%)</title><rect x="81.0645%" y="405" width="0.0466%" height="15" fill="rgb(251,126,39)" fg:x="29578" fg:w="17"/><text x="81.3145%" y="415.50"></text></g><g><title>dkn-compute`tracing::span::Span::log (5 samples, 0.01%)</title><rect x="81.0974%" y="389" width="0.0137%" height="15" fill="rgb(214,216,36)" fg:x="29590" fg:w="5"/><text x="81.3474%" y="399.50"></text></g><g><title>dkn-compute`futures_channel::mpsc::Receiver&lt;T&gt;::next_message (4 samples, 0.01%)</title><rect x="81.1111%" y="405" width="0.0110%" height="15" fill="rgb(220,221,8)" fg:x="29595" fg:w="4"/><text x="81.3611%" y="415.50"></text></g><g><title>dkn-compute`tracing::span::Span::log (31 samples, 0.08%)</title><rect x="81.1220%" y="405" width="0.0850%" height="15" fill="rgb(240,216,3)" fg:x="29599" fg:w="31"/><text x="81.3720%" y="415.50"></text></g><g><title>dkn-compute`tracing::span::Span::record_all (14 samples, 0.04%)</title><rect x="81.2070%" y="405" width="0.0384%" height="15" fill="rgb(232,218,17)" fg:x="29630" fg:w="14"/><text x="81.4570%" y="415.50"></text></g><g><title>dkn-compute`tracing::span::Span::log (4 samples, 0.01%)</title><rect x="81.2344%" y="389" width="0.0110%" height="15" fill="rgb(229,163,45)" fg:x="29640" fg:w="4"/><text x="81.4844%" y="399.50"></text></g><g><title>dkn-compute`&lt;libp2p_request_response::handler::Handler&lt;TCodec&gt; as libp2p_swarm::handler::ConnectionHandler&gt;::poll (234 samples, 0.64%)</title><rect x="80.6123%" y="421" width="0.6413%" height="15" fill="rgb(231,110,42)" fg:x="29413" fg:w="234"/><text x="80.8623%" y="431.50"></text></g><g><title>dkn-compute`core::ptr::drop_in_place&lt;tracing::span::Span&gt; (21 samples, 0.06%)</title><rect x="81.2591%" y="421" width="0.0576%" height="15" fill="rgb(208,170,48)" fg:x="29649" fg:w="21"/><text x="81.5091%" y="431.50"></text></g><g><title>dkn-compute`futures_bounded::futures_map::FuturesMap&lt;ID,O&gt;::poll_unpin (4 samples, 0.01%)</title><rect x="81.3166%" y="421" width="0.0110%" height="15" fill="rgb(239,116,25)" fg:x="29670" fg:w="4"/><text x="81.5666%" y="431.50"></text></g><g><title>dkn-compute`futures_bounded::futures_tuple_set::FuturesTupleSet&lt;O,D&gt;::poll_unpin (5 samples, 0.01%)</title><rect x="81.3276%" y="421" width="0.0137%" height="15" fill="rgb(219,200,50)" fg:x="29674" fg:w="5"/><text x="81.5776%" y="431.50"></text></g><g><title>dkn-compute`libp2p_gossipsub::handler::EnabledHandler::poll (5 samples, 0.01%)</title><rect x="81.3468%" y="421" width="0.0137%" height="15" fill="rgb(245,200,0)" fg:x="29681" fg:w="5"/><text x="81.5968%" y="431.50"></text></g><g><title>dkn-compute`&lt;futures_util::stream::futures_unordered::FuturesUnordered&lt;Fut&gt; as futures_core::stream::Stream&gt;::poll_next (5 samples, 0.01%)</title><rect x="81.4153%" y="405" width="0.0137%" height="15" fill="rgb(245,119,33)" fg:x="29706" fg:w="5"/><text x="81.6653%" y="415.50"></text></g><g><title>dkn-compute`&lt;futures_util::stream::futures_unordered::FuturesUnordered&lt;Fut&gt; as futures_core::stream::Stream&gt;::poll_next (94 samples, 0.26%)</title><rect x="81.6592%" y="389" width="0.2576%" height="15" fill="rgb(231,125,12)" fg:x="29795" fg:w="94"/><text x="81.9092%" y="399.50"></text></g><g><title>dkn-compute`futures_core::task::__internal::atomic_waker::AtomicWaker::register (55 samples, 0.15%)</title><rect x="81.7661%" y="373" width="0.1507%" height="15" fill="rgb(216,96,41)" fg:x="29834" fg:w="55"/><text x="82.0161%" y="383.50"></text></g><g><title>dkn-compute`core::ptr::drop_in_place&lt;libp2p_relay::priv_client::handler::Reservation&gt; (20 samples, 0.05%)</title><rect x="81.9196%" y="389" width="0.0548%" height="15" fill="rgb(248,43,45)" fg:x="29890" fg:w="20"/><text x="82.1696%" y="399.50"></text></g><g><title>dkn-compute`core::ptr::drop_in_place&lt;tracing::span::Span&gt; (43 samples, 0.12%)</title><rect x="81.9744%" y="389" width="0.1179%" height="15" fill="rgb(217,222,7)" fg:x="29910" fg:w="43"/><text x="82.2244%" y="399.50"></text></g><g><title>dkn-compute`tracing::span::Span::log (10 samples, 0.03%)</title><rect x="82.0648%" y="373" width="0.0274%" height="15" fill="rgb(233,28,6)" fg:x="29943" fg:w="10"/><text x="82.3148%" y="383.50"></text></g><g><title>dkn-compute`futures_bounded::futures_set::FuturesSet&lt;O&gt;::poll_unpin (95 samples, 0.26%)</title><rect x="82.0923%" y="389" width="0.2604%" height="15" fill="rgb(231,218,15)" fg:x="29953" fg:w="95"/><text x="82.3423%" y="399.50"></text></g><g><title>dkn-compute`&lt;futures_util::stream::futures_unordered::FuturesUnordered&lt;Fut&gt; as futures_core::stream::Stream&gt;::poll_next (88 samples, 0.24%)</title><rect x="82.1114%" y="373" width="0.2412%" height="15" fill="rgb(226,171,48)" fg:x="29960" fg:w="88"/><text x="82.3614%" y="383.50"></text></g><g><title>dkn-compute`futures_core::task::__internal::atomic_waker::AtomicWaker::register (69 samples, 0.19%)</title><rect x="82.1635%" y="357" width="0.1891%" height="15" fill="rgb(235,201,9)" fg:x="29979" fg:w="69"/><text x="82.4135%" y="367.50"></text></g><g><title>dkn-compute`&lt;futures_timer::native::delay::Delay as core::ops::drop::Drop&gt;::drop (6 samples, 0.02%)</title><rect x="82.5390%" y="325" width="0.0164%" height="15" fill="rgb(217,80,15)" fg:x="30116" fg:w="6"/><text x="82.7890%" y="335.50"></text></g><g><title>dkn-compute`futures_timer::native::global::raw_wake (5 samples, 0.01%)</title><rect x="82.5417%" y="309" width="0.0137%" height="15" fill="rgb(219,152,8)" fg:x="30117" fg:w="5"/><text x="82.7917%" y="319.50"></text></g><g><title>libdispatch.dylib`_dispatch_semaphore_signal_slow (5 samples, 0.01%)</title><rect x="82.5417%" y="293" width="0.0137%" height="15" fill="rgb(243,107,38)" fg:x="30117" fg:w="5"/><text x="82.7917%" y="303.50"></text></g><g><title>libsystem_kernel.dylib`semaphore_signal_trap (5 samples, 0.01%)</title><rect x="82.5417%" y="277" width="0.0137%" height="15" fill="rgb(231,17,5)" fg:x="30117" fg:w="5"/><text x="82.7917%" y="287.50"></text></g><g><title>dkn-compute`core::ptr::drop_in_place&lt;&lt;futures_util::stream::futures_unordered::FuturesUnordered&lt;Fut&gt; as futures_core::stream::Stream&gt;::poll_next::Bomb&lt;futures_bounded::futures_map::TaggedFuture&lt;u32,futures_bounded::futures_map::TimeoutFuture&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;libp2p_relay::protocol::outbound_hop::Circuit,libp2p_relay::protocol::outbound_hop::ConnectError&gt;+core::marker::Send&gt;&gt;&gt;&gt;&gt;&gt; (7 samples, 0.02%)</title><rect x="82.5390%" y="357" width="0.0192%" height="15" fill="rgb(209,25,54)" fg:x="30116" fg:w="7"/><text x="82.7890%" y="367.50"></text></g><g><title>dkn-compute`core::ptr::drop_in_place&lt;core::option::Option&lt;futures_bounded::futures_map::TaggedFuture&lt;u32,futures_bounded::futures_map::TimeoutFuture&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;(),libp2p_relay::protocol::inbound_stop::Error&gt;+core::marker::Send&gt;&gt;&gt;&gt;&gt;&gt; (7 samples, 0.02%)</title><rect x="82.5390%" y="341" width="0.0192%" height="15" fill="rgb(219,0,2)" fg:x="30116" fg:w="7"/><text x="82.7890%" y="351.50"></text></g><g><title>dkn-compute`futures_core::task::__internal::atomic_waker::AtomicWaker::register (136 samples, 0.37%)</title><rect x="82.5582%" y="357" width="0.3727%" height="15" fill="rgb(246,9,5)" fg:x="30123" fg:w="136"/><text x="82.8082%" y="367.50"></text></g><g><title>dkn-compute`&lt;asynchronous_codec::framed_read::FramedRead2&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (6 samples, 0.02%)</title><rect x="82.9391%" y="341" width="0.0164%" height="15" fill="rgb(226,159,4)" fg:x="30262" fg:w="6"/><text x="83.1891%" y="351.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (4 samples, 0.01%)</title><rect x="82.9885%" y="341" width="0.0110%" height="15" fill="rgb(219,175,34)" fg:x="30280" fg:w="4"/><text x="83.2385%" y="351.50"></text></g><g><title>dkn-compute`&lt;futures_util::stream::futures_unordered::FuturesUnordered&lt;Fut&gt; as futures_core::stream::Stream&gt;::poll_next (219 samples, 0.60%)</title><rect x="82.4020%" y="373" width="0.6002%" height="15" fill="rgb(236,10,46)" fg:x="30066" fg:w="219"/><text x="82.6520%" y="383.50"></text></g><g><title>dkn-compute`libp2p_relay::priv_client::handler::Handler::establish_new_circuit::_{{closure}} (26 samples, 0.07%)</title><rect x="82.9309%" y="357" width="0.0713%" height="15" fill="rgb(240,211,16)" fg:x="30259" fg:w="26"/><text x="83.1809%" y="367.50"></text></g><g><title>dkn-compute`futures_bounded::futures_tuple_set::FuturesTupleSet&lt;O,D&gt;::poll_unpin (240 samples, 0.66%)</title><rect x="82.3526%" y="389" width="0.6578%" height="15" fill="rgb(205,3,43)" fg:x="30048" fg:w="240"/><text x="82.6026%" y="399.50"></text></g><g><title>dkn-compute`tokio::runtime::task::waker::clone_waker (39 samples, 0.11%)</title><rect x="83.0268%" y="389" width="0.1069%" height="15" fill="rgb(245,7,22)" fg:x="30294" fg:w="39"/><text x="83.2768%" y="399.50"></text></g><g><title>dkn-compute`tokio::runtime::task::waker::drop_waker (86 samples, 0.24%)</title><rect x="83.1337%" y="389" width="0.2357%" height="15" fill="rgb(239,132,32)" fg:x="30333" fg:w="86"/><text x="83.3837%" y="399.50"></text></g><g><title>dkn-compute`tracing::span::Span::log (50 samples, 0.14%)</title><rect x="83.3694%" y="389" width="0.1370%" height="15" fill="rgb(228,202,34)" fg:x="30419" fg:w="50"/><text x="83.6194%" y="399.50"></text></g><g><title>dkn-compute`tracing::span::Span::record_all (66 samples, 0.18%)</title><rect x="83.5065%" y="389" width="0.1809%" height="15" fill="rgb(254,200,22)" fg:x="30469" fg:w="66"/><text x="83.7565%" y="399.50"></text></g><g><title>dkn-compute`tracing::span::Span::log (19 samples, 0.05%)</title><rect x="83.6353%" y="373" width="0.0521%" height="15" fill="rgb(219,10,39)" fg:x="30516" fg:w="19"/><text x="83.8853%" y="383.50"></text></g><g><title>dkn-compute`tracing_core::span::Record::is_empty (12 samples, 0.03%)</title><rect x="83.6873%" y="389" width="0.0329%" height="15" fill="rgb(226,210,39)" fg:x="30535" fg:w="12"/><text x="83.9373%" y="399.50"></text></g><g><title>dkn-compute`&lt;libp2p_relay::priv_client::handler::Handler as libp2p_swarm::handler::ConnectionHandler&gt;::poll (861 samples, 2.36%)</title><rect x="81.4290%" y="405" width="2.3597%" height="15" fill="rgb(208,219,16)" fg:x="29711" fg:w="861"/><text x="81.6790%" y="415.50">d..</text></g><g><title>libsystem_platform.dylib`_platform_memmove (25 samples, 0.07%)</title><rect x="83.7202%" y="389" width="0.0685%" height="15" fill="rgb(216,158,51)" fg:x="30547" fg:w="25"/><text x="83.9702%" y="399.50"></text></g><g><title>dkn-compute`core::ptr::drop_in_place&lt;libp2p_relay::priv_client::handler::Reservation&gt; (6 samples, 0.02%)</title><rect x="83.7887%" y="405" width="0.0164%" height="15" fill="rgb(233,14,44)" fg:x="30572" fg:w="6"/><text x="84.0387%" y="415.50"></text></g><g><title>dkn-compute`futures_bounded::futures_set::FuturesSet&lt;O&gt;::poll_unpin (7 samples, 0.02%)</title><rect x="83.8107%" y="405" width="0.0192%" height="15" fill="rgb(237,97,39)" fg:x="30580" fg:w="7"/><text x="84.0607%" y="415.50"></text></g><g><title>dkn-compute`futures_bounded::futures_tuple_set::FuturesTupleSet&lt;O,D&gt;::poll_unpin (12 samples, 0.03%)</title><rect x="83.8299%" y="405" width="0.0329%" height="15" fill="rgb(218,198,43)" fg:x="30587" fg:w="12"/><text x="84.0799%" y="415.50"></text></g><g><title>dkn-compute`tokio::runtime::task::waker::clone_waker (4 samples, 0.01%)</title><rect x="83.8627%" y="405" width="0.0110%" height="15" fill="rgb(231,104,20)" fg:x="30599" fg:w="4"/><text x="84.1127%" y="415.50"></text></g><g><title>dkn-compute`tokio::runtime::task::waker::drop_waker (25 samples, 0.07%)</title><rect x="83.8737%" y="405" width="0.0685%" height="15" fill="rgb(254,36,13)" fg:x="30603" fg:w="25"/><text x="84.1237%" y="415.50"></text></g><g><title>dkn-compute`libp2p_swarm::handler::either::_&lt;impl libp2p_swarm::handler::ConnectionHandler for either::Either&lt;L,R&gt;&gt;::poll (948 samples, 2.60%)</title><rect x="81.3605%" y="421" width="2.5982%" height="15" fill="rgb(248,14,50)" fg:x="29686" fg:w="948"/><text x="81.6105%" y="431.50">dk..</text></g><g><title>dkn-compute`tracing::span::Span::log (6 samples, 0.02%)</title><rect x="83.9422%" y="405" width="0.0164%" height="15" fill="rgb(217,107,29)" fg:x="30628" fg:w="6"/><text x="84.1922%" y="415.50"></text></g><g><title>dkn-compute`tokio::runtime::task::waker::clone_waker (11 samples, 0.03%)</title><rect x="83.9587%" y="421" width="0.0301%" height="15" fill="rgb(251,169,33)" fg:x="30634" fg:w="11"/><text x="84.2087%" y="431.50"></text></g><g><title>dkn-compute`tokio::runtime::task::waker::drop_waker (11 samples, 0.03%)</title><rect x="83.9888%" y="421" width="0.0301%" height="15" fill="rgb(217,108,32)" fg:x="30645" fg:w="11"/><text x="84.2388%" y="431.50"></text></g><g><title>dkn-compute`tracing::span::Span::log (28 samples, 0.08%)</title><rect x="84.0190%" y="421" width="0.0767%" height="15" fill="rgb(219,66,42)" fg:x="30656" fg:w="28"/><text x="84.2690%" y="431.50"></text></g><g><title>dkn-compute`&lt;libp2p_swarm::handler::select::ConnectionHandlerSelect&lt;TProto1,TProto2&gt; as libp2p_swarm::handler::ConnectionHandler&gt;::poll (5,935 samples, 16.27%)</title><rect x="67.8351%" y="437" width="16.2661%" height="15" fill="rgb(206,180,7)" fg:x="24751" fg:w="5935"/><text x="68.0851%" y="447.50">dkn-compute`&lt;libp2p_swarm..</text></g><g><title>dkn-compute`&lt;libp2p_yamux::Muxer&lt;C&gt; as libp2p_core::muxing::StreamMuxer&gt;::poll_inbound (4 samples, 0.01%)</title><rect x="84.1094%" y="437" width="0.0110%" height="15" fill="rgb(208,226,31)" fg:x="30689" fg:w="4"/><text x="84.3594%" y="447.50"></text></g><g><title>dkn-compute`core::ptr::drop_in_place&lt;tracing::span::Span&gt; (23 samples, 0.06%)</title><rect x="84.1396%" y="437" width="0.0630%" height="15" fill="rgb(218,26,49)" fg:x="30700" fg:w="23"/><text x="84.3896%" y="447.50"></text></g><g><title>dkn-compute`tracing::span::Span::log (6 samples, 0.02%)</title><rect x="84.1861%" y="421" width="0.0164%" height="15" fill="rgb(233,197,48)" fg:x="30717" fg:w="6"/><text x="84.4361%" y="431.50"></text></g><g><title>dkn-compute`hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (14 samples, 0.04%)</title><rect x="84.2136%" y="437" width="0.0384%" height="15" fill="rgb(252,181,51)" fg:x="30727" fg:w="14"/><text x="84.4636%" y="447.50"></text></g><g><title>dkn-compute`&lt;libp2p_gossipsub::protocol::ProtocolConfig as libp2p_core::upgrade::UpgradeInfo&gt;::protocol_info (8 samples, 0.02%)</title><rect x="84.4931%" y="389" width="0.0219%" height="15" fill="rgb(253,90,19)" fg:x="30829" fg:w="8"/><text x="84.7431%" y="399.50"></text></g><g><title>dkn-compute`&lt;libp2p_kad::protocol::ProtocolConfig as libp2p_core::upgrade::UpgradeInfo&gt;::protocol_info (8 samples, 0.02%)</title><rect x="84.5150%" y="389" width="0.0219%" height="15" fill="rgb(215,171,30)" fg:x="30837" fg:w="8"/><text x="84.7650%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (6 samples, 0.02%)</title><rect x="84.5424%" y="389" width="0.0164%" height="15" fill="rgb(214,222,9)" fg:x="30847" fg:w="6"/><text x="84.7924%" y="399.50"></text></g><g><title>dkn-compute`&lt;T as libp2p_swarm::upgrade::UpgradeInfoSend&gt;::protocol_info (96 samples, 0.26%)</title><rect x="84.4520%" y="405" width="0.2631%" height="15" fill="rgb(223,3,22)" fg:x="30814" fg:w="96"/><text x="84.7020%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (54 samples, 0.15%)</title><rect x="84.5671%" y="389" width="0.1480%" height="15" fill="rgb(225,196,46)" fg:x="30856" fg:w="54"/><text x="84.8171%" y="399.50"></text></g><g><title>dkn-compute`&lt;libp2p_kad::protocol::ProtocolConfig as libp2p_core::upgrade::UpgradeInfo&gt;::protocol_info (4 samples, 0.01%)</title><rect x="84.7206%" y="405" width="0.0110%" height="15" fill="rgb(209,110,37)" fg:x="30912" fg:w="4"/><text x="84.9706%" y="415.50"></text></g><g><title>dkn-compute`&lt;T as libp2p_swarm::upgrade::UpgradeInfoSend&gt;::protocol_info (161 samples, 0.44%)</title><rect x="84.3287%" y="421" width="0.4413%" height="15" fill="rgb(249,89,12)" fg:x="30769" fg:w="161"/><text x="84.5787%" y="431.50"></text></g><g><title>dkn-compute`&lt;smallvec::SmallVec&lt;A&gt; as core::iter::traits::collect::Extend&lt;&lt;A as smallvec::Array&gt;::Item&gt;&gt;::extend (14 samples, 0.04%)</title><rect x="84.7315%" y="405" width="0.0384%" height="15" fill="rgb(226,27,33)" fg:x="30916" fg:w="14"/><text x="84.9815%" y="415.50"></text></g><g><title>dkn-compute`&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.01%)</title><rect x="85.2304%" y="309" width="0.0110%" height="15" fill="rgb(213,82,22)" fg:x="31098" fg:w="4"/><text x="85.4804%" y="319.50"></text></g><g><title>dkn-compute`alloc::sync::arcinner_layout_for_value_layout (6 samples, 0.02%)</title><rect x="85.5647%" y="293" width="0.0164%" height="15" fill="rgb(248,140,0)" fg:x="31220" fg:w="6"/><text x="85.8147%" y="303.50"></text></g><g><title>dkn-compute`core::hash::BuildHasher::hash_one (11 samples, 0.03%)</title><rect x="85.5812%" y="293" width="0.0301%" height="15" fill="rgb(228,106,3)" fg:x="31226" fg:w="11"/><text x="85.8312%" y="303.50"></text></g><g><title>dkn-compute`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (103 samples, 0.28%)</title><rect x="85.9320%" y="277" width="0.2823%" height="15" fill="rgb(209,23,37)" fg:x="31354" fg:w="103"/><text x="86.1820%" y="287.50"></text></g><g><title>dkn-compute`core::hash::BuildHasher::hash_one (19 samples, 0.05%)</title><rect x="86.2143%" y="277" width="0.0521%" height="15" fill="rgb(241,93,50)" fg:x="31457" fg:w="19"/><text x="86.4643%" y="287.50"></text></g><g><title>dkn-compute`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (26 samples, 0.07%)</title><rect x="86.2663%" y="277" width="0.0713%" height="15" fill="rgb(253,46,43)" fg:x="31476" fg:w="26"/><text x="86.5163%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (6 samples, 0.02%)</title><rect x="86.3376%" y="277" width="0.0164%" height="15" fill="rgb(226,206,43)" fg:x="31502" fg:w="6"/><text x="86.5876%" y="287.50"></text></g><g><title>dkn-compute`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (315 samples, 0.86%)</title><rect x="85.6113%" y="293" width="0.8633%" height="15" fill="rgb(217,54,7)" fg:x="31237" fg:w="315"/><text x="85.8613%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (44 samples, 0.12%)</title><rect x="86.3540%" y="277" width="0.1206%" height="15" fill="rgb(223,5,52)" fg:x="31508" fg:w="44"/><text x="86.6040%" y="287.50"></text></g><g><title>dkn-compute`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (6 samples, 0.02%)</title><rect x="86.4746%" y="293" width="0.0164%" height="15" fill="rgb(206,52,46)" fg:x="31552" fg:w="6"/><text x="86.7246%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (51 samples, 0.14%)</title><rect x="86.5788%" y="277" width="0.1398%" height="15" fill="rgb(253,136,11)" fg:x="31590" fg:w="51"/><text x="86.8288%" y="287.50"></text></g><g><title>dkn-compute`libp2p_swarm::stream_protocol::StreamProtocol::try_from_owned (87 samples, 0.24%)</title><rect x="86.4911%" y="293" width="0.2384%" height="15" fill="rgb(208,106,33)" fg:x="31558" fg:w="87"/><text x="86.7411%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (32 samples, 0.09%)</title><rect x="86.7295%" y="293" width="0.0877%" height="15" fill="rgb(206,54,4)" fg:x="31645" fg:w="32"/><text x="86.9795%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (5 samples, 0.01%)</title><rect x="86.8172%" y="293" width="0.0137%" height="15" fill="rgb(213,3,15)" fg:x="31677" fg:w="5"/><text x="87.0672%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`free (29 samples, 0.08%)</title><rect x="86.8309%" y="293" width="0.0795%" height="15" fill="rgb(252,211,39)" fg:x="31682" fg:w="29"/><text x="87.0809%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`malloc (5 samples, 0.01%)</title><rect x="86.9104%" y="293" width="0.0137%" height="15" fill="rgb(223,6,36)" fg:x="31711" fg:w="5"/><text x="87.1604%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (75 samples, 0.21%)</title><rect x="86.9323%" y="293" width="0.2056%" height="15" fill="rgb(252,169,45)" fg:x="31719" fg:w="75"/><text x="87.1823%" y="303.50"></text></g><g><title>dkn-compute`core::iter::adapters::filter_map::filter_map_fold::_{{closure}} (701 samples, 1.92%)</title><rect x="85.2441%" y="309" width="1.9212%" height="15" fill="rgb(212,48,26)" fg:x="31103" fg:w="701"/><text x="85.4941%" y="319.50">d..</text></g><g><title>libsystem_platform.dylib`_platform_memmove (10 samples, 0.03%)</title><rect x="87.1379%" y="293" width="0.0274%" height="15" fill="rgb(251,102,48)" fg:x="31794" fg:w="10"/><text x="87.3879%" y="303.50"></text></g><g><title>dkn-compute`core::ptr::drop_in_place&lt;either::Either&lt;either::Either&lt;either::Either&lt;either::Either&lt;either::Either&lt;either::Either&lt;libp2p_swarm::stream_protocol::StreamProtocol,&amp;str&gt;,either::Either&lt;libp2p_gossipsub::protocol::ProtocolId,&amp;str&gt;&gt;,either::Either&lt;libp2p_swarm::stream_protocol::StreamProtocol,&amp;str&gt;&gt;,either::Either&lt;libp2p_swarm::stream_protocol::StreamProtocol,libp2p_swarm::stream_protocol::StreamProtocol&gt;&gt;,libp2p_swarm::stream_protocol::StreamProtocol&gt;,either::Either&lt;either::Either&lt;libp2p_swarm::stream_protocol::StreamProtocol,&amp;str&gt;,&amp;str&gt;&gt;&gt; (10 samples, 0.03%)</title><rect x="87.1653%" y="309" width="0.0274%" height="15" fill="rgb(243,208,16)" fg:x="31804" fg:w="10"/><text x="87.4153%" y="319.50"></text></g><g><title>dkn-compute`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (8 samples, 0.02%)</title><rect x="87.1927%" y="309" width="0.0219%" height="15" fill="rgb(219,96,24)" fg:x="31814" fg:w="8"/><text x="87.4427%" y="319.50"></text></g><g><title>dkn-compute`libp2p_swarm::stream_protocol::StreamProtocol::try_from_owned (10 samples, 0.03%)</title><rect x="87.2146%" y="309" width="0.0274%" height="15" fill="rgb(219,33,29)" fg:x="31822" fg:w="10"/><text x="87.4646%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (4 samples, 0.01%)</title><rect x="87.2420%" y="309" width="0.0110%" height="15" fill="rgb(223,176,5)" fg:x="31832" fg:w="4"/><text x="87.4920%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (12 samples, 0.03%)</title><rect x="87.2530%" y="309" width="0.0329%" height="15" fill="rgb(228,140,14)" fg:x="31836" fg:w="12"/><text x="87.5030%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (74 samples, 0.20%)</title><rect x="87.2859%" y="309" width="0.2028%" height="15" fill="rgb(217,179,31)" fg:x="31848" fg:w="74"/><text x="87.5359%" y="319.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (13 samples, 0.04%)</title><rect x="87.4914%" y="309" width="0.0356%" height="15" fill="rgb(230,9,30)" fg:x="31923" fg:w="13"/><text x="87.7414%" y="319.50"></text></g><g><title>dkn-compute`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (889 samples, 2.44%)</title><rect x="85.0933%" y="325" width="2.4365%" height="15" fill="rgb(230,136,20)" fg:x="31048" fg:w="889"/><text x="85.3433%" y="335.50">dk..</text></g><g><title>dkn-compute`core::iter::adapters::filter_map::filter_map_fold::_{{closure}} (10 samples, 0.03%)</title><rect x="87.5353%" y="325" width="0.0274%" height="15" fill="rgb(215,210,22)" fg:x="31939" fg:w="10"/><text x="87.7853%" y="335.50"></text></g><g><title>dkn-compute`either::Either::Left (51 samples, 0.14%)</title><rect x="87.5627%" y="325" width="0.1398%" height="15" fill="rgb(218,43,5)" fg:x="31949" fg:w="51"/><text x="87.8127%" y="335.50"></text></g><g><title>dkn-compute`&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::fold (987 samples, 2.71%)</title><rect x="85.0330%" y="341" width="2.7051%" height="15" fill="rgb(216,11,5)" fg:x="31026" fg:w="987"/><text x="85.2830%" y="351.50">dk..</text></g><g><title>libsystem_malloc.dylib`free (12 samples, 0.03%)</title><rect x="87.7052%" y="325" width="0.0329%" height="15" fill="rgb(209,82,29)" fg:x="32001" fg:w="12"/><text x="87.9552%" y="335.50"></text></g><g><title>dkn-compute`&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.01%)</title><rect x="87.7957%" y="325" width="0.0110%" height="15" fill="rgb(244,115,12)" fg:x="32034" fg:w="4"/><text x="88.0457%" y="335.50"></text></g><g><title>dkn-compute`DYLD-STUB$$free (4 samples, 0.01%)</title><rect x="87.8998%" y="309" width="0.0110%" height="15" fill="rgb(222,82,18)" fg:x="32072" fg:w="4"/><text x="88.1498%" y="319.50"></text></g><g><title>dkn-compute`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (33 samples, 0.09%)</title><rect x="87.9957%" y="293" width="0.0904%" height="15" fill="rgb(249,227,8)" fg:x="32107" fg:w="33"/><text x="88.2457%" y="303.50"></text></g><g><title>dkn-compute`core::hash::BuildHasher::hash_one (5 samples, 0.01%)</title><rect x="88.0862%" y="293" width="0.0137%" height="15" fill="rgb(253,141,45)" fg:x="32140" fg:w="5"/><text x="88.3362%" y="303.50"></text></g><g><title>dkn-compute`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (52 samples, 0.14%)</title><rect x="88.4260%" y="277" width="0.1425%" height="15" fill="rgb(234,184,4)" fg:x="32264" fg:w="52"/><text x="88.6760%" y="287.50"></text></g><g><title>dkn-compute`core::hash::BuildHasher::hash_one (22 samples, 0.06%)</title><rect x="88.5685%" y="277" width="0.0603%" height="15" fill="rgb(218,194,23)" fg:x="32316" fg:w="22"/><text x="88.8185%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (24 samples, 0.07%)</title><rect x="88.6288%" y="277" width="0.0658%" height="15" fill="rgb(235,66,41)" fg:x="32338" fg:w="24"/><text x="88.8788%" y="287.50"></text></g><g><title>dkn-compute`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (218 samples, 0.60%)</title><rect x="88.0999%" y="293" width="0.5975%" height="15" fill="rgb(245,217,1)" fg:x="32145" fg:w="218"/><text x="88.3499%" y="303.50"></text></g><g><title>dkn-compute`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (332 samples, 0.91%)</title><rect x="87.9135%" y="309" width="0.9099%" height="15" fill="rgb(229,91,1)" fg:x="32077" fg:w="332"/><text x="88.1635%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (43 samples, 0.12%)</title><rect x="88.7056%" y="293" width="0.1179%" height="15" fill="rgb(207,101,30)" fg:x="32366" fg:w="43"/><text x="88.9556%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (22 samples, 0.06%)</title><rect x="88.8727%" y="293" width="0.0603%" height="15" fill="rgb(223,82,49)" fg:x="32427" fg:w="22"/><text x="89.1227%" y="303.50"></text></g><g><title>dkn-compute`libp2p_swarm::stream_protocol::StreamProtocol::try_from_owned (42 samples, 0.12%)</title><rect x="88.8234%" y="309" width="0.1151%" height="15" fill="rgb(218,167,17)" fg:x="32409" fg:w="42"/><text x="89.0734%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (5 samples, 0.01%)</title><rect x="88.9385%" y="309" width="0.0137%" height="15" fill="rgb(208,103,14)" fg:x="32451" fg:w="5"/><text x="89.1885%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`free (11 samples, 0.03%)</title><rect x="88.9550%" y="309" width="0.0301%" height="15" fill="rgb(238,20,8)" fg:x="32457" fg:w="11"/><text x="89.2050%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (26 samples, 0.07%)</title><rect x="88.9851%" y="309" width="0.0713%" height="15" fill="rgb(218,80,54)" fg:x="32468" fg:w="26"/><text x="89.2351%" y="319.50"></text></g><g><title>dkn-compute`core::iter::adapters::filter_map::filter_map_fold::_{{closure}} (458 samples, 1.26%)</title><rect x="87.8094%" y="325" width="1.2552%" height="15" fill="rgb(240,144,17)" fg:x="32039" fg:w="458"/><text x="88.0594%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (20 samples, 0.05%)</title><rect x="89.0810%" y="325" width="0.0548%" height="15" fill="rgb(245,27,50)" fg:x="32503" fg:w="20"/><text x="89.3310%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (19 samples, 0.05%)</title><rect x="89.1359%" y="325" width="0.0521%" height="15" fill="rgb(251,51,7)" fg:x="32523" fg:w="19"/><text x="89.3859%" y="335.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (4 samples, 0.01%)</title><rect x="89.1879%" y="325" width="0.0110%" height="15" fill="rgb(245,217,29)" fg:x="32542" fg:w="4"/><text x="89.4379%" y="335.50"></text></g><g><title>dkn-compute`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (534 samples, 1.46%)</title><rect x="87.7381%" y="341" width="1.4635%" height="15" fill="rgb(221,176,29)" fg:x="32013" fg:w="534"/><text x="87.9881%" y="351.50"></text></g><g><title>dkn-compute`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (60 samples, 0.16%)</title><rect x="89.5497%" y="309" width="0.1644%" height="15" fill="rgb(212,180,24)" fg:x="32674" fg:w="60"/><text x="89.7997%" y="319.50"></text></g><g><title>dkn-compute`core::hash::BuildHasher::hash_one (9 samples, 0.02%)</title><rect x="89.7141%" y="309" width="0.0247%" height="15" fill="rgb(254,24,2)" fg:x="32734" fg:w="9"/><text x="89.9641%" y="319.50"></text></g><g><title>dkn-compute`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (6 samples, 0.02%)</title><rect x="89.7388%" y="309" width="0.0164%" height="15" fill="rgb(230,100,2)" fg:x="32743" fg:w="6"/><text x="89.9888%" y="319.50"></text></g><g><title>dkn-compute`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (143 samples, 0.39%)</title><rect x="89.3688%" y="325" width="0.3919%" height="15" fill="rgb(219,142,25)" fg:x="32608" fg:w="143"/><text x="89.6188%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (44 samples, 0.12%)</title><rect x="89.8128%" y="309" width="0.1206%" height="15" fill="rgb(240,73,43)" fg:x="32770" fg:w="44"/><text x="90.0628%" y="319.50"></text></g><g><title>dkn-compute`libp2p_swarm::stream_protocol::StreamProtocol::try_from_owned (65 samples, 0.18%)</title><rect x="89.7607%" y="325" width="0.1781%" height="15" fill="rgb(214,114,15)" fg:x="32751" fg:w="65"/><text x="90.0107%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (16 samples, 0.04%)</title><rect x="89.9389%" y="325" width="0.0439%" height="15" fill="rgb(207,130,4)" fg:x="32816" fg:w="16"/><text x="90.1889%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`free (17 samples, 0.05%)</title><rect x="89.9910%" y="325" width="0.0466%" height="15" fill="rgb(221,25,40)" fg:x="32835" fg:w="17"/><text x="90.2410%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (35 samples, 0.10%)</title><rect x="90.0458%" y="325" width="0.0959%" height="15" fill="rgb(241,184,7)" fg:x="32855" fg:w="35"/><text x="90.2958%" y="335.50"></text></g><g><title>dkn-compute`core::iter::adapters::filter_map::filter_map_fold::_{{closure}} (345 samples, 0.95%)</title><rect x="89.2126%" y="341" width="0.9455%" height="15" fill="rgb(235,159,4)" fg:x="32551" fg:w="345"/><text x="89.4626%" y="351.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (6 samples, 0.02%)</title><rect x="90.1417%" y="325" width="0.0164%" height="15" fill="rgb(214,87,48)" fg:x="32890" fg:w="6"/><text x="90.3917%" y="335.50"></text></g><g><title>dkn-compute`core::ptr::drop_in_place&lt;either::Either&lt;either::Either&lt;either::Either&lt;either::Either&lt;either::Either&lt;either::Either&lt;libp2p_swarm::stream_protocol::StreamProtocol,&amp;str&gt;,either::Either&lt;libp2p_gossipsub::protocol::ProtocolId,&amp;str&gt;&gt;,either::Either&lt;libp2p_swarm::stream_protocol::StreamProtocol,&amp;str&gt;&gt;,either::Either&lt;libp2p_swarm::stream_protocol::StreamProtocol,libp2p_swarm::stream_protocol::StreamProtocol&gt;&gt;,libp2p_swarm::stream_protocol::StreamProtocol&gt;,either::Either&lt;either::Either&lt;libp2p_swarm::stream_protocol::StreamProtocol,&amp;str&gt;,&amp;str&gt;&gt;&gt; (6 samples, 0.02%)</title><rect x="90.1581%" y="341" width="0.0164%" height="15" fill="rgb(246,198,24)" fg:x="32896" fg:w="6"/><text x="90.4081%" y="351.50"></text></g><g><title>dkn-compute`either::Either::Left (11 samples, 0.03%)</title><rect x="90.1746%" y="341" width="0.0301%" height="15" fill="rgb(209,66,40)" fg:x="32902" fg:w="11"/><text x="90.4246%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`free (15 samples, 0.04%)</title><rect x="90.2239%" y="341" width="0.0411%" height="15" fill="rgb(233,147,39)" fg:x="32920" fg:w="15"/><text x="90.4739%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (36 samples, 0.10%)</title><rect x="90.2705%" y="341" width="0.0987%" height="15" fill="rgb(231,145,52)" fg:x="32937" fg:w="36"/><text x="90.5205%" y="351.50"></text></g><g><title>dkn-compute`&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1,993 samples, 5.46%)</title><rect x="84.9344%" y="357" width="5.4622%" height="15" fill="rgb(206,20,26)" fg:x="30990" fg:w="1993"/><text x="85.1844%" y="367.50">dkn-com..</text></g><g><title>libsystem_platform.dylib`_platform_memmove (10 samples, 0.03%)</title><rect x="90.3692%" y="341" width="0.0274%" height="15" fill="rgb(238,220,4)" fg:x="32973" fg:w="10"/><text x="90.6192%" y="351.50"></text></g><g><title>dkn-compute`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (4 samples, 0.01%)</title><rect x="90.3966%" y="357" width="0.0110%" height="15" fill="rgb(252,195,42)" fg:x="32983" fg:w="4"/><text x="90.6466%" y="367.50"></text></g><g><title>dkn-compute`either::Either::Left (18 samples, 0.05%)</title><rect x="90.4075%" y="357" width="0.0493%" height="15" fill="rgb(209,10,6)" fg:x="32987" fg:w="18"/><text x="90.6575%" y="367.50"></text></g><g><title>dkn-compute`&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2,043 samples, 5.60%)</title><rect x="84.8658%" y="373" width="5.5993%" height="15" fill="rgb(229,3,52)" fg:x="30965" fg:w="2043"/><text x="85.1158%" y="383.50">dkn-com..</text></g><g><title>dkn-compute`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (30 samples, 0.08%)</title><rect x="90.7446%" y="325" width="0.0822%" height="15" fill="rgb(253,49,37)" fg:x="33110" fg:w="30"/><text x="90.9946%" y="335.50"></text></g><g><title>dkn-compute`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (82 samples, 0.22%)</title><rect x="90.6268%" y="341" width="0.2247%" height="15" fill="rgb(240,103,49)" fg:x="33067" fg:w="82"/><text x="90.8768%" y="351.50"></text></g><g><title>dkn-compute`core::hash::BuildHasher::hash_one (9 samples, 0.02%)</title><rect x="90.8269%" y="325" width="0.0247%" height="15" fill="rgb(250,182,30)" fg:x="33140" fg:w="9"/><text x="91.0769%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (22 samples, 0.06%)</title><rect x="90.8954%" y="325" width="0.0603%" height="15" fill="rgb(248,8,30)" fg:x="33165" fg:w="22"/><text x="91.1454%" y="335.50"></text></g><g><title>dkn-compute`libp2p_swarm::stream_protocol::StreamProtocol::try_from_owned (43 samples, 0.12%)</title><rect x="90.8515%" y="341" width="0.1179%" height="15" fill="rgb(237,120,30)" fg:x="33149" fg:w="43"/><text x="91.1015%" y="351.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (5 samples, 0.01%)</title><rect x="90.9557%" y="325" width="0.0137%" height="15" fill="rgb(221,146,34)" fg:x="33187" fg:w="5"/><text x="91.2057%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (4 samples, 0.01%)</title><rect x="90.9694%" y="341" width="0.0110%" height="15" fill="rgb(242,55,13)" fg:x="33192" fg:w="4"/><text x="91.2194%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`free (10 samples, 0.03%)</title><rect x="90.9858%" y="341" width="0.0274%" height="15" fill="rgb(242,112,31)" fg:x="33198" fg:w="10"/><text x="91.2358%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (27 samples, 0.07%)</title><rect x="91.0160%" y="341" width="0.0740%" height="15" fill="rgb(249,192,27)" fg:x="33209" fg:w="27"/><text x="91.2660%" y="351.50"></text></g><g><title>dkn-compute`core::iter::adapters::filter_map::filter_map_fold::_{{closure}} (207 samples, 0.57%)</title><rect x="90.5391%" y="357" width="0.5673%" height="15" fill="rgb(208,204,44)" fg:x="33035" fg:w="207"/><text x="90.7891%" y="367.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (6 samples, 0.02%)</title><rect x="91.0900%" y="341" width="0.0164%" height="15" fill="rgb(208,93,54)" fg:x="33236" fg:w="6"/><text x="91.3400%" y="351.50"></text></g><g><title>dkn-compute`core::ptr::drop_in_place&lt;either::Either&lt;either::Either&lt;either::Either&lt;either::Either&lt;either::Either&lt;either::Either&lt;libp2p_swarm::stream_protocol::StreamProtocol,&amp;str&gt;,either::Either&lt;libp2p_gossipsub::protocol::ProtocolId,&amp;str&gt;&gt;,either::Either&lt;libp2p_swarm::stream_protocol::StreamProtocol,&amp;str&gt;&gt;,either::Either&lt;libp2p_swarm::stream_protocol::StreamProtocol,libp2p_swarm::stream_protocol::StreamProtocol&gt;&gt;,libp2p_swarm::stream_protocol::StreamProtocol&gt;,either::Either&lt;either::Either&lt;libp2p_swarm::stream_protocol::StreamProtocol,&amp;str&gt;,&amp;str&gt;&gt;&gt; (4 samples, 0.01%)</title><rect x="91.1064%" y="357" width="0.0110%" height="15" fill="rgb(242,1,31)" fg:x="33242" fg:w="4"/><text x="91.3564%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (19 samples, 0.05%)</title><rect x="91.1229%" y="357" width="0.0521%" height="15" fill="rgb(241,83,25)" fg:x="33248" fg:w="19"/><text x="91.3729%" y="367.50"></text></g><g><title>dkn-compute`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (263 samples, 0.72%)</title><rect x="90.4651%" y="373" width="0.7208%" height="15" fill="rgb(205,169,50)" fg:x="33008" fg:w="263"/><text x="90.7151%" y="383.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (4 samples, 0.01%)</title><rect x="91.1749%" y="357" width="0.0110%" height="15" fill="rgb(239,186,37)" fg:x="33267" fg:w="4"/><text x="91.4249%" y="367.50"></text></g><g><title>dkn-compute`&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2,343 samples, 6.42%)</title><rect x="84.7836%" y="405" width="6.4215%" height="15" fill="rgb(205,221,10)" fg:x="30935" fg:w="2343"/><text x="85.0336%" y="415.50">dkn-comp..</text></g><g><title>dkn-compute`&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2,329 samples, 6.38%)</title><rect x="84.8220%" y="389" width="6.3831%" height="15" fill="rgb(218,196,15)" fg:x="30949" fg:w="2329"/><text x="85.0720%" y="399.50">dkn-comp..</text></g><g><title>dkn-compute`&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (2,355 samples, 6.45%)</title><rect x="84.7781%" y="421" width="6.4544%" height="15" fill="rgb(218,196,35)" fg:x="30933" fg:w="2355"/><text x="85.0281%" y="431.50">dkn-comp..</text></g><g><title>libsystem_platform.dylib`_platform_memmove (10 samples, 0.03%)</title><rect x="91.2051%" y="405" width="0.0274%" height="15" fill="rgb(233,63,24)" fg:x="33278" fg:w="10"/><text x="91.4551%" y="415.50"></text></g><g><title>dkn-compute`&lt;libp2p_gossipsub::handler::Handler as libp2p_swarm::handler::ConnectionHandler&gt;::listen_protocol (7 samples, 0.02%)</title><rect x="91.2325%" y="421" width="0.0192%" height="15" fill="rgb(225,8,4)" fg:x="33288" fg:w="7"/><text x="91.4825%" y="431.50"></text></g><g><title>dkn-compute`&lt;libp2p_identify::handler::Handler as libp2p_swarm::handler::ConnectionHandler&gt;::listen_protocol (22 samples, 0.06%)</title><rect x="91.2517%" y="421" width="0.0603%" height="15" fill="rgb(234,105,35)" fg:x="33295" fg:w="22"/><text x="91.5017%" y="431.50"></text></g><g><title>dkn-compute`&lt;libp2p_gossipsub::handler::Handler as libp2p_swarm::handler::ConnectionHandler&gt;::listen_protocol (12 samples, 0.03%)</title><rect x="91.5066%" y="405" width="0.0329%" height="15" fill="rgb(236,21,32)" fg:x="33388" fg:w="12"/><text x="91.7566%" y="415.50"></text></g><g><title>dkn-compute`&lt;libp2p_kad::handler::Handler as libp2p_swarm::handler::ConnectionHandler&gt;::listen_protocol (21 samples, 0.06%)</title><rect x="91.5395%" y="405" width="0.0576%" height="15" fill="rgb(228,109,6)" fg:x="33400" fg:w="21"/><text x="91.7895%" y="415.50"></text></g><g><title>dkn-compute`&lt;smallvec::SmallVec&lt;A&gt; as core::iter::traits::collect::Extend&lt;&lt;A as smallvec::Array&gt;::Item&gt;&gt;::extend (15 samples, 0.04%)</title><rect x="91.5970%" y="405" width="0.0411%" height="15" fill="rgb(229,215,31)" fg:x="33421" fg:w="15"/><text x="91.8470%" y="415.50"></text></g><g><title>dkn-compute`__rdl_alloc (5 samples, 0.01%)</title><rect x="91.6409%" y="405" width="0.0137%" height="15" fill="rgb(221,52,54)" fg:x="33437" fg:w="5"/><text x="91.8909%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (23 samples, 0.06%)</title><rect x="91.6546%" y="405" width="0.0630%" height="15" fill="rgb(252,129,43)" fg:x="33442" fg:w="23"/><text x="91.9046%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`malloc (8 samples, 0.02%)</title><rect x="91.7176%" y="405" width="0.0219%" height="15" fill="rgb(248,183,27)" fg:x="33465" fg:w="8"/><text x="91.9676%" y="415.50"></text></g><g><title>dkn-compute`&lt;libp2p_swarm::handler::select::ConnectionHandlerSelect&lt;TProto1,TProto2&gt; as libp2p_swarm::handler::ConnectionHandler&gt;::listen_protocol (241 samples, 0.66%)</title><rect x="91.3257%" y="421" width="0.6605%" height="15" fill="rgb(250,0,22)" fg:x="33322" fg:w="241"/><text x="91.5757%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (90 samples, 0.25%)</title><rect x="91.7395%" y="405" width="0.2467%" height="15" fill="rgb(213,166,10)" fg:x="33473" fg:w="90"/><text x="91.9895%" y="415.50"></text></g><g><title>dkn-compute`DYLD-STUB$$free (6 samples, 0.02%)</title><rect x="91.9944%" y="421" width="0.0164%" height="15" fill="rgb(207,163,36)" fg:x="33566" fg:w="6"/><text x="92.2444%" y="431.50"></text></g><g><title>dkn-compute`&lt;smallvec::SmallVec&lt;A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.01%)</title><rect x="92.0547%" y="405" width="0.0110%" height="15" fill="rgb(208,122,22)" fg:x="33588" fg:w="4"/><text x="92.3047%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (30 samples, 0.08%)</title><rect x="92.0657%" y="405" width="0.0822%" height="15" fill="rgb(207,104,49)" fg:x="33592" fg:w="30"/><text x="92.3157%" y="415.50"></text></g><g><title>dkn-compute`core::ptr::drop_in_place$LT$libp2p_core..upgrade..select..SelectUpgrade$LT$libp2p_swarm..upgrade..SendWrapper$LT$libp2p_core..upgrade..select..SelectUpgrade$LT$libp2p_swarm..upgrade..SendWrapper$LT$libp2p_core..upgrade..select..SelectUpgrade$LT$libp2p_swarm..upgrade..SendWrapper$LT$libp2p_core..upgrade..select..SelectUpgrade$LT$libp2p_swarm..upgrade..SendWrapper$LT$libp2p_core..upgrade..select..SelectUpgrade$LT$libp2p_swarm..upgrade..SendWrapper$LT$either..Either$LT$libp2p_swarm..upgrade..SendWrapper$LT$libp2p_core..upgrade..ready..ReadyUpgrade$LT$libp2p_swarm..stream_protocol..StreamProtocol$GT$$GT$$C$libp2p_swarm..upgrade..SendWrapper$LT$libp2p_core..upgrade..denied..DeniedUpgrade$GT$$GT$$GT$$C$libp2p_swarm..upgrade..SendWrapper$LT$either..Either$LT$libp2p_gossipsub..protocol..ProtocolConfig$C$libp2p_core..upgrade..denied..DeniedUpgrade$GT$$GT$$GT$$GT$$C$libp2p_swarm..upgrade..SendWrapper$LT$either..Either$LT$libp2p_kad..protocol..ProtocolConfig$C$libp2p_core..upgrade..denied..DeniedUpgrade$GT$$GT$$GT$$GT$$2 (60 samples, 0.16%)</title><rect x="92.0109%" y="421" width="0.1644%" height="15" fill="rgb(248,211,50)" fg:x="33572" fg:w="60"/><text x="92.2609%" y="431.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (9 samples, 0.02%)</title><rect x="92.1506%" y="405" width="0.0247%" height="15" fill="rgb(217,13,45)" fg:x="33623" fg:w="9"/><text x="92.4006%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`free (32 samples, 0.09%)</title><rect x="92.1808%" y="421" width="0.0877%" height="15" fill="rgb(211,216,49)" fg:x="33634" fg:w="32"/><text x="92.4308%" y="431.50"></text></g><g><title>dkn-compute`libp2p_swarm::connection::gather_supported_protocols (2,941 samples, 8.06%)</title><rect x="84.2519%" y="437" width="8.0604%" height="15" fill="rgb(221,58,53)" fg:x="30741" fg:w="2941"/><text x="84.5019%" y="447.50">dkn-compute..</text></g><g><title>libsystem_platform.dylib`_platform_memmove (16 samples, 0.04%)</title><rect x="92.2685%" y="421" width="0.0439%" height="15" fill="rgb(220,112,41)" fg:x="33666" fg:w="16"/><text x="92.5185%" y="431.50"></text></g><g><title>dkn-compute`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (252 samples, 0.69%)</title><rect x="93.2222%" y="405" width="0.6907%" height="15" fill="rgb(236,38,28)" fg:x="34014" fg:w="252"/><text x="93.4722%" y="415.50"></text></g><g><title>dkn-compute`hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (553 samples, 1.52%)</title><rect x="92.4905%" y="421" width="1.5156%" height="15" fill="rgb(227,195,22)" fg:x="33747" fg:w="553"/><text x="92.7405%" y="431.50"></text></g><g><title>dkn-compute`core::hash::BuildHasher::hash_one (34 samples, 0.09%)</title><rect x="93.9129%" y="405" width="0.0932%" height="15" fill="rgb(214,55,33)" fg:x="34266" fg:w="34"/><text x="94.1629%" y="415.50"></text></g><g><title>dkn-compute`libp2p_swarm::handler::ProtocolsChange::from_full_sets (695 samples, 1.90%)</title><rect x="92.3123%" y="437" width="1.9048%" height="15" fill="rgb(248,80,13)" fg:x="33682" fg:w="695"/><text x="92.5623%" y="447.50">d..</text></g><g><title>libsystem_platform.dylib`_platform_memcmp (77 samples, 0.21%)</title><rect x="94.0061%" y="421" width="0.2110%" height="15" fill="rgb(238,52,6)" fg:x="34300" fg:w="77"/><text x="94.2561%" y="431.50"></text></g><g><title>dkn-compute`libp2p_swarm::handler::either::_&lt;impl libp2p_swarm::handler::ConnectionHandler for either::Either&lt;L,R&gt;&gt;::poll (9 samples, 0.02%)</title><rect x="94.2171%" y="437" width="0.0247%" height="15" fill="rgb(224,198,47)" fg:x="34377" fg:w="9"/><text x="94.4671%" y="447.50"></text></g><g><title>dkn-compute`tracing::span::Span::log (50 samples, 0.14%)</title><rect x="94.2418%" y="437" width="0.1370%" height="15" fill="rgb(233,171,20)" fg:x="34386" fg:w="50"/><text x="94.4918%" y="447.50"></text></g><g><title>dkn-compute`tracing::span::Span::record_all (41 samples, 0.11%)</title><rect x="94.3788%" y="437" width="0.1124%" height="15" fill="rgb(241,30,25)" fg:x="34436" fg:w="41"/><text x="94.6288%" y="447.50"></text></g><g><title>dkn-compute`tracing::span::Span::log (16 samples, 0.04%)</title><rect x="94.4473%" y="421" width="0.0439%" height="15" fill="rgb(207,171,38)" fg:x="34461" fg:w="16"/><text x="94.6973%" y="431.50"></text></g><g><title>dkn-compute`tracing_core::span::Record::is_empty (29 samples, 0.08%)</title><rect x="94.4912%" y="437" width="0.0795%" height="15" fill="rgb(234,70,1)" fg:x="34477" fg:w="29"/><text x="94.7412%" y="447.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (8 samples, 0.02%)</title><rect x="94.5707%" y="437" width="0.0219%" height="15" fill="rgb(232,178,18)" fg:x="34506" fg:w="8"/><text x="94.8207%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (192 samples, 0.53%)</title><rect x="94.5926%" y="437" width="0.5262%" height="15" fill="rgb(241,78,40)" fg:x="34514" fg:w="192"/><text x="94.8426%" y="447.50"></text></g><g><title>libsystem_platform.dylib`__bzero (8 samples, 0.02%)</title><rect x="95.1243%" y="437" width="0.0219%" height="15" fill="rgb(222,35,25)" fg:x="34708" fg:w="8"/><text x="95.3743%" y="447.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (23 samples, 0.06%)</title><rect x="95.1462%" y="437" width="0.0630%" height="15" fill="rgb(207,92,16)" fg:x="34716" fg:w="23"/><text x="95.3962%" y="447.50"></text></g><g><title>dkn-compute`futures_util::future::future::FutureExt::poll_unpin (19,882 samples, 54.49%)</title><rect x="40.7762%" y="453" width="54.4906%" height="15" fill="rgb(216,59,51)" fg:x="14878" fg:w="19882"/><text x="41.0262%" y="463.50">dkn-compute`futures_util::future::future::FutureExt::poll_unpin</text></g><g><title>libsystem_platform.dylib`_platform_memset (21 samples, 0.06%)</title><rect x="95.2093%" y="437" width="0.0576%" height="15" fill="rgb(213,80,28)" fg:x="34739" fg:w="21"/><text x="95.4593%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (25 samples, 0.07%)</title><rect x="96.1055%" y="405" width="0.0685%" height="15" fill="rgb(220,93,7)" fg:x="35066" fg:w="25"/><text x="96.3555%" y="415.50"></text></g><g><title>dkn-compute`futures_channel::mpsc::queue::Queue&lt;T&gt;::pop_spin (251 samples, 0.69%)</title><rect x="95.4943%" y="421" width="0.6879%" height="15" fill="rgb(225,24,44)" fg:x="34843" fg:w="251"/><text x="95.7443%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`free (13 samples, 0.04%)</title><rect x="96.1822%" y="421" width="0.0356%" height="15" fill="rgb(243,74,40)" fg:x="35094" fg:w="13"/><text x="96.4322%" y="431.50"></text></g><g><title>dkn-compute`futures_channel::mpsc::Receiver&lt;T&gt;::next_message (321 samples, 0.88%)</title><rect x="95.3682%" y="437" width="0.8798%" height="15" fill="rgb(228,39,7)" fg:x="34797" fg:w="321"/><text x="95.6182%" y="447.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (11 samples, 0.03%)</title><rect x="96.2178%" y="421" width="0.0301%" height="15" fill="rgb(227,79,8)" fg:x="35107" fg:w="11"/><text x="96.4678%" y="431.50"></text></g><g><title>dkn-compute`futures_channel::mpsc::queue::Queue&lt;T&gt;::pop_spin (13 samples, 0.04%)</title><rect x="96.2480%" y="437" width="0.0356%" height="15" fill="rgb(236,58,11)" fg:x="35118" fg:w="13"/><text x="96.4980%" y="447.50"></text></g><g><title>dkn-compute`futures_core::task::__internal::atomic_waker::AtomicWaker::register (50 samples, 0.14%)</title><rect x="96.2836%" y="437" width="0.1370%" height="15" fill="rgb(249,63,35)" fg:x="35131" fg:w="50"/><text x="96.5336%" y="447.50"></text></g><g><title>dkn-compute`futures_util::stream::stream::StreamExt::poll_next_unpin (424 samples, 1.16%)</title><rect x="95.2668%" y="453" width="1.1621%" height="15" fill="rgb(252,114,16)" fg:x="34760" fg:w="424"/><text x="95.5168%" y="463.50"></text></g><g><title>dkn-compute`libp2p_swarm::handler::ProtocolsChange::from_full_sets (8 samples, 0.02%)</title><rect x="96.4343%" y="453" width="0.0219%" height="15" fill="rgb(254,151,24)" fg:x="35186" fg:w="8"/><text x="96.6843%" y="463.50"></text></g><g><title>dkn-compute`tracing::span::Span::log (11 samples, 0.03%)</title><rect x="96.4563%" y="453" width="0.0301%" height="15" fill="rgb(253,54,39)" fg:x="35194" fg:w="11"/><text x="96.7063%" y="463.50"></text></g><g><title>dkn-compute`tracing::span::Span::record_all (8 samples, 0.02%)</title><rect x="96.4864%" y="453" width="0.0219%" height="15" fill="rgb(243,25,45)" fg:x="35205" fg:w="8"/><text x="96.7364%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (16 samples, 0.04%)</title><rect x="96.5083%" y="453" width="0.0439%" height="15" fill="rgb(234,134,9)" fg:x="35213" fg:w="16"/><text x="96.7583%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`free (57 samples, 0.16%)</title><rect x="96.5522%" y="453" width="0.1562%" height="15" fill="rgb(227,166,31)" fg:x="35229" fg:w="57"/><text x="96.8022%" y="463.50"></text></g><g><title>dkn-compute`&lt;futures_util::future::select::Select&lt;A,B&gt; as core::future::future::Future&gt;::poll (20,838 samples, 57.11%)</title><rect x="39.6196%" y="469" width="57.1108%" height="15" fill="rgb(245,143,41)" fg:x="14456" fg:w="20838"/><text x="39.8696%" y="479.50">dkn-compute`&lt;futures_util::future::select::Select&lt;A,B&gt; as core::future::future::Future&gt;::poll</text></g><g><title>libsystem_platform.dylib`_platform_memmove (7 samples, 0.02%)</title><rect x="96.7112%" y="453" width="0.0192%" height="15" fill="rgb(238,181,32)" fg:x="35287" fg:w="7"/><text x="96.9612%" y="463.50"></text></g><g><title>dkn-compute`__rdl_alloc (11 samples, 0.03%)</title><rect x="96.8783%" y="453" width="0.0301%" height="15" fill="rgb(224,113,18)" fg:x="35348" fg:w="11"/><text x="97.1283%" y="463.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_lock_slow (6 samples, 0.02%)</title><rect x="96.9386%" y="437" width="0.0164%" height="15" fill="rgb(240,229,28)" fg:x="35370" fg:w="6"/><text x="97.1886%" y="447.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_mutexwait (6 samples, 0.02%)</title><rect x="96.9386%" y="421" width="0.0164%" height="15" fill="rgb(250,185,3)" fg:x="35370" fg:w="6"/><text x="97.1886%" y="431.50"></text></g><g><title>dkn-compute`futures_channel::mpsc::BoundedSenderInner&lt;T&gt;::poll_unparked (25 samples, 0.07%)</title><rect x="96.9085%" y="453" width="0.0685%" height="15" fill="rgb(212,59,25)" fg:x="35359" fg:w="25"/><text x="97.1585%" y="463.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_unlock (5 samples, 0.01%)</title><rect x="96.9633%" y="437" width="0.0137%" height="15" fill="rgb(221,87,20)" fg:x="35379" fg:w="5"/><text x="97.2133%" y="447.50"></text></g><g><title>dkn-compute`futures_channel::mpsc::BoundedSenderInner&lt;T&gt;::poll_unparked (6 samples, 0.02%)</title><rect x="97.0647%" y="437" width="0.0164%" height="15" fill="rgb(213,74,28)" fg:x="35416" fg:w="6"/><text x="97.3147%" y="447.50"></text></g><g><title>dkn-compute`parking_lot_core::parking_lot::lock_bucket_pair (4 samples, 0.01%)</title><rect x="97.1771%" y="373" width="0.0110%" height="15" fill="rgb(224,132,34)" fg:x="35457" fg:w="4"/><text x="97.4271%" y="383.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvsignal (189 samples, 0.52%)</title><rect x="97.1935%" y="373" width="0.5180%" height="15" fill="rgb(222,101,24)" fg:x="35463" fg:w="189"/><text x="97.4435%" y="383.50"></text></g><g><title>dkn-compute`parking_lot::condvar::Condvar::notify_one_slow (201 samples, 0.55%)</title><rect x="97.1661%" y="389" width="0.5509%" height="15" fill="rgb(254,142,4)" fg:x="35453" fg:w="201"/><text x="97.4161%" y="399.50"></text></g><g><title>dkn-compute`&lt;futures_util::stream::futures_unordered::task::Task&lt;Fut&gt; as futures_task::arc_wake::ArcWake&gt;::wake_by_ref (233 samples, 0.64%)</title><rect x="97.0812%" y="421" width="0.6386%" height="15" fill="rgb(230,229,49)" fg:x="35422" fg:w="233"/><text x="97.3312%" y="431.50"></text></g><g><title>dkn-compute`tokio::runtime::park::wake (216 samples, 0.59%)</title><rect x="97.1277%" y="405" width="0.5920%" height="15" fill="rgb(238,70,47)" fg:x="35439" fg:w="216"/><text x="97.3777%" y="415.50"></text></g><g><title>dkn-compute`futures_task::waker::wake_arc_raw (235 samples, 0.64%)</title><rect x="97.0812%" y="437" width="0.6441%" height="15" fill="rgb(231,160,17)" fg:x="35422" fg:w="235"/><text x="97.3312%" y="447.50"></text></g><g><title>libsystem_kernel.dylib`__ulock_wait (7 samples, 0.02%)</title><rect x="97.7910%" y="405" width="0.0192%" height="15" fill="rgb(218,68,53)" fg:x="35681" fg:w="7"/><text x="98.0410%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (9 samples, 0.02%)</title><rect x="97.8157%" y="405" width="0.0247%" height="15" fill="rgb(236,111,10)" fg:x="35690" fg:w="9"/><text x="98.0657%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`_tiny_check_and_zero_inline_meta_from_freelist (8 samples, 0.02%)</title><rect x="97.9225%" y="389" width="0.0219%" height="15" fill="rgb(224,34,41)" fg:x="35729" fg:w="8"/><text x="98.1725%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (95 samples, 0.26%)</title><rect x="97.7334%" y="437" width="0.2604%" height="15" fill="rgb(241,118,19)" fg:x="35660" fg:w="95"/><text x="97.9834%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (89 samples, 0.24%)</title><rect x="97.7499%" y="421" width="0.2439%" height="15" fill="rgb(238,129,25)" fg:x="35666" fg:w="89"/><text x="97.9999%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (56 samples, 0.15%)</title><rect x="97.8403%" y="405" width="0.1535%" height="15" fill="rgb(238,22,31)" fg:x="35699" fg:w="56"/><text x="98.0903%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (18 samples, 0.05%)</title><rect x="97.9445%" y="389" width="0.0493%" height="15" fill="rgb(222,174,48)" fg:x="35737" fg:w="18"/><text x="98.1945%" y="399.50"></text></g><g><title>dkn-compute`futures_channel::mpsc::sink_impl::_&lt;impl futures_sink::Sink&lt;T&gt; for futures_channel::mpsc::Sender&lt;T&gt;&gt;::start_send (373 samples, 1.02%)</title><rect x="96.9770%" y="453" width="1.0223%" height="15" fill="rgb(206,152,40)" fg:x="35384" fg:w="373"/><text x="97.2270%" y="463.50"></text></g><g><title>dkn-compute`futures_core::task::__internal::atomic_waker::AtomicWaker::wake (33 samples, 0.09%)</title><rect x="97.9993%" y="453" width="0.0904%" height="15" fill="rgb(218,99,54)" fg:x="35757" fg:w="33"/><text x="98.2493%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (12 samples, 0.03%)</title><rect x="98.0952%" y="453" width="0.0329%" height="15" fill="rgb(220,174,26)" fg:x="35792" fg:w="12"/><text x="98.3452%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`malloc (5 samples, 0.01%)</title><rect x="98.1281%" y="453" width="0.0137%" height="15" fill="rgb(245,116,9)" fg:x="35804" fg:w="5"/><text x="98.3781%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (7 samples, 0.02%)</title><rect x="98.1418%" y="453" width="0.0192%" height="15" fill="rgb(209,72,35)" fg:x="35809" fg:w="7"/><text x="98.3918%" y="463.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (52 samples, 0.14%)</title><rect x="98.1692%" y="453" width="0.1425%" height="15" fill="rgb(226,126,21)" fg:x="35819" fg:w="52"/><text x="98.4192%" y="463.50"></text></g><g><title>dkn-compute`&lt;futures_util::sink::send::Send&lt;Si,Item&gt; as core::future::future::Future&gt;::poll (578 samples, 1.58%)</title><rect x="96.7303%" y="469" width="1.5841%" height="15" fill="rgb(227,192,1)" fg:x="35294" fg:w="578"/><text x="96.9803%" y="479.50"></text></g><g><title>dkn-compute`&lt;libp2p_swarm::connection::pool::concurrent_dial::ConcurrentDial as core::future::future::Future&gt;::poll (5 samples, 0.01%)</title><rect x="98.3172%" y="469" width="0.0137%" height="15" fill="rgb(237,180,29)" fg:x="35873" fg:w="5"/><text x="98.5672%" y="479.50"></text></g><g><title>dkn-compute`&lt;futures_util::stream::futures_unordered::FuturesUnordered&lt;Fut&gt; as futures_core::stream::Stream&gt;::poll_next (5 samples, 0.01%)</title><rect x="98.3172%" y="453" width="0.0137%" height="15" fill="rgb(230,197,35)" fg:x="35873" fg:w="5"/><text x="98.5672%" y="463.50"></text></g><g><title>dkn-compute`&lt;tracing::instrument::Instrumented&lt;T&gt; as core::future::future::Future&gt;::poll (5 samples, 0.01%)</title><rect x="98.3172%" y="437" width="0.0137%" height="15" fill="rgb(246,193,31)" fg:x="35873" fg:w="5"/><text x="98.5672%" y="447.50"></text></g><g><title>dkn-compute`&lt;futures_util::future::future::map::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (5 samples, 0.01%)</title><rect x="98.3172%" y="421" width="0.0137%" height="15" fill="rgb(241,36,4)" fg:x="35873" fg:w="5"/><text x="98.5672%" y="431.50"></text></g><g><title>dkn-compute`&lt;futures_util::future::future::map::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (5 samples, 0.01%)</title><rect x="98.3172%" y="405" width="0.0137%" height="15" fill="rgb(241,130,17)" fg:x="35873" fg:w="5"/><text x="98.5672%" y="415.50"></text></g><g><title>dkn-compute`&lt;libp2p_core::transport::map::MapFuture&lt;T,F&gt; as core::future::future::Future&gt;::poll (5 samples, 0.01%)</title><rect x="98.3172%" y="389" width="0.0137%" height="15" fill="rgb(206,137,32)" fg:x="35873" fg:w="5"/><text x="98.5672%" y="399.50"></text></g><g><title>dkn-compute`&lt;libp2p_core::transport::map::MapFuture&lt;T,F&gt; as core::future::future::Future&gt;::poll (5 samples, 0.01%)</title><rect x="98.3172%" y="373" width="0.0137%" height="15" fill="rgb(237,228,51)" fg:x="35873" fg:w="5"/><text x="98.5672%" y="383.50"></text></g><g><title>dkn-compute`&lt;libp2p_core::upgrade::apply::OutboundUpgradeApply&lt;C,U&gt; as core::future::future::Future&gt;::poll (5 samples, 0.01%)</title><rect x="98.3172%" y="357" width="0.0137%" height="15" fill="rgb(243,6,42)" fg:x="35873" fg:w="5"/><text x="98.5672%" y="367.50"></text></g><g><title>dkn-compute`&lt;libp2p_noise::Config as libp2p_core::upgrade::OutboundConnectionUpgrade&lt;T&gt;&gt;::upgrade_outbound::_{{closure}} (5 samples, 0.01%)</title><rect x="98.3172%" y="341" width="0.0137%" height="15" fill="rgb(251,74,28)" fg:x="35873" fg:w="5"/><text x="98.5672%" y="351.50"></text></g><g><title>dkn-compute`libp2p_noise::io::handshake::send_identity::_{{closure}} (4 samples, 0.01%)</title><rect x="98.3199%" y="325" width="0.0110%" height="15" fill="rgb(218,20,49)" fg:x="35874" fg:w="4"/><text x="98.5699%" y="335.50"></text></g><g><title>dkn-compute`&lt;libp2p_noise::io::framed::Codec&lt;snow::handshakestate::HandshakeState&gt; as asynchronous_codec::encoder::Encoder&gt;::encode (4 samples, 0.01%)</title><rect x="98.3199%" y="309" width="0.0110%" height="15" fill="rgb(238,28,14)" fg:x="35874" fg:w="4"/><text x="98.5699%" y="319.50"></text></g><g><title>dkn-compute`snow::handshakestate::HandshakeState::write_message (4 samples, 0.01%)</title><rect x="98.3199%" y="293" width="0.0110%" height="15" fill="rgb(229,40,46)" fg:x="35874" fg:w="4"/><text x="98.5699%" y="303.50"></text></g><g><title>dkn-compute`&lt;libp2p_noise::protocol::Keypair as snow::types::Dh&gt;::dh (4 samples, 0.01%)</title><rect x="98.3199%" y="277" width="0.0110%" height="15" fill="rgb(244,195,20)" fg:x="35874" fg:w="4"/><text x="98.5699%" y="287.50"></text></g><g><title>dkn-compute`x25519_dalek::x25519::x25519 (4 samples, 0.01%)</title><rect x="98.3199%" y="261" width="0.0110%" height="15" fill="rgb(253,56,35)" fg:x="35874" fg:w="4"/><text x="98.5699%" y="271.50"></text></g><g><title>dkn-compute`curve25519_dalek::montgomery::MontgomeryPoint::mul_clamped (4 samples, 0.01%)</title><rect x="98.3199%" y="245" width="0.0110%" height="15" fill="rgb(210,149,44)" fg:x="35874" fg:w="4"/><text x="98.5699%" y="255.50"></text></g><g><title>dkn-compute`libp2p_gossipsub::types::_&lt;impl core::convert::From&lt;libp2p_gossipsub::types::RawMessage&gt; for libp2p_gossipsub::rpc_proto::proto::gossipsub::pb::Message&gt;::from (4 samples, 0.01%)</title><rect x="98.6379%" y="421" width="0.0110%" height="15" fill="rgb(240,135,12)" fg:x="35990" fg:w="4"/><text x="98.8879%" y="431.50"></text></g><g><title>dkn-compute`libp2p_gossipsub::types::_&lt;impl core::convert::From&lt;libp2p_gossipsub::types::RpcOut&gt; for libp2p_gossipsub::rpc_proto::proto::gossipsub::pb::RPC&gt;::from (87 samples, 0.24%)</title><rect x="98.5502%" y="437" width="0.2384%" height="15" fill="rgb(251,24,50)" fg:x="35958" fg:w="87"/><text x="98.8002%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_outlined (51 samples, 0.14%)</title><rect x="98.6488%" y="421" width="0.1398%" height="15" fill="rgb(243,200,47)" fg:x="35994" fg:w="51"/><text x="98.8988%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_find_block_and_allocate (33 samples, 0.09%)</title><rect x="98.6982%" y="405" width="0.0904%" height="15" fill="rgb(224,166,26)" fg:x="36012" fg:w="33"/><text x="98.9482%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (6 samples, 0.02%)</title><rect x="98.7722%" y="389" width="0.0164%" height="15" fill="rgb(233,0,47)" fg:x="36039" fg:w="6"/><text x="99.0222%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (7 samples, 0.02%)</title><rect x="98.7886%" y="389" width="0.0192%" height="15" fill="rgb(253,80,5)" fg:x="36045" fg:w="7"/><text x="99.0386%" y="399.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (6 samples, 0.02%)</title><rect x="98.7914%" y="373" width="0.0164%" height="15" fill="rgb(214,133,25)" fg:x="36046" fg:w="6"/><text x="99.0414%" y="383.50"></text></g><g><title>dkn-compute`smallvec::SmallVec&lt;A&gt;::reserve_one_unchecked (8 samples, 0.02%)</title><rect x="98.7886%" y="437" width="0.0219%" height="15" fill="rgb(209,27,14)" fg:x="36045" fg:w="8"/><text x="99.0386%" y="447.50"></text></g><g><title>dkn-compute`smallvec::SmallVec&lt;A&gt;::try_grow (8 samples, 0.02%)</title><rect x="98.7886%" y="421" width="0.0219%" height="15" fill="rgb(219,102,51)" fg:x="36045" fg:w="8"/><text x="99.0386%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`realloc (8 samples, 0.02%)</title><rect x="98.7886%" y="405" width="0.0219%" height="15" fill="rgb(237,18,16)" fg:x="36045" fg:w="8"/><text x="99.0386%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (5 samples, 0.01%)</title><rect x="98.8133%" y="437" width="0.0137%" height="15" fill="rgb(241,85,17)" fg:x="36054" fg:w="5"/><text x="99.0633%" y="447.50"></text></g><g><title>dkn-compute`&lt;libp2p_gossipsub::handler::Handler as libp2p_swarm::handler::ConnectionHandler&gt;::on_behaviour_event (202 samples, 0.55%)</title><rect x="98.4488%" y="453" width="0.5536%" height="15" fill="rgb(236,90,42)" fg:x="35921" fg:w="202"/><text x="98.6988%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (62 samples, 0.17%)</title><rect x="98.8325%" y="437" width="0.1699%" height="15" fill="rgb(249,57,21)" fg:x="36061" fg:w="62"/><text x="99.0825%" y="447.50"></text></g><g><title>dkn-compute`futures_bounded::futures_map::FuturesMap&lt;ID,O&gt;::try_push (9 samples, 0.02%)</title><rect x="99.0133%" y="421" width="0.0247%" height="15" fill="rgb(243,12,36)" fg:x="36127" fg:w="9"/><text x="99.2633%" y="431.50"></text></g><g><title>dkn-compute`&lt;libp2p_relay::priv_client::handler::Handler as libp2p_swarm::handler::ConnectionHandler&gt;::on_behaviour_event (14 samples, 0.04%)</title><rect x="99.0051%" y="453" width="0.0384%" height="15" fill="rgb(253,128,47)" fg:x="36124" fg:w="14"/><text x="99.2551%" y="463.50"></text></g><g><title>dkn-compute`futures_bounded::futures_tuple_set::FuturesTupleSet&lt;O,D&gt;::try_push (11 samples, 0.03%)</title><rect x="99.0133%" y="437" width="0.0301%" height="15" fill="rgb(207,33,20)" fg:x="36127" fg:w="11"/><text x="99.2633%" y="447.50"></text></g><g><title>dkn-compute`libp2p_gossipsub::types::_&lt;impl core::convert::From&lt;libp2p_gossipsub::types::RpcOut&gt; for libp2p_gossipsub::rpc_proto::proto::gossipsub::pb::RPC&gt;::from (4 samples, 0.01%)</title><rect x="99.0435%" y="453" width="0.0110%" height="15" fill="rgb(233,215,35)" fg:x="36138" fg:w="4"/><text x="99.2935%" y="463.50"></text></g><g><title>dkn-compute`&lt;libp2p_swarm::handler::select::ConnectionHandlerSelect&lt;TProto1,TProto2&gt; as libp2p_swarm::handler::ConnectionHandler&gt;::on_behaviour_event (276 samples, 0.76%)</title><rect x="98.3309%" y="469" width="0.7564%" height="15" fill="rgb(249,188,52)" fg:x="35878" fg:w="276"/><text x="98.5809%" y="479.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (11 samples, 0.03%)</title><rect x="99.0572%" y="453" width="0.0301%" height="15" fill="rgb(225,12,32)" fg:x="36143" fg:w="11"/><text x="99.3072%" y="463.50"></text></g><g><title>dkn-compute`futures_channel::mpsc::BoundedSenderInner&lt;T&gt;::poll_unparked (4 samples, 0.01%)</title><rect x="99.0956%" y="469" width="0.0110%" height="15" fill="rgb(247,98,14)" fg:x="36157" fg:w="4"/><text x="99.3456%" y="479.50"></text></g><g><title>dkn-compute`futures_util::future::future::FutureExt::poll_unpin (7 samples, 0.02%)</title><rect x="99.1120%" y="469" width="0.0192%" height="15" fill="rgb(247,219,48)" fg:x="36163" fg:w="7"/><text x="99.3620%" y="479.50"></text></g><g><title>dkn-compute`futures_util::stream::stream::StreamExt::poll_next_unpin (7 samples, 0.02%)</title><rect x="99.1312%" y="469" width="0.0192%" height="15" fill="rgb(253,60,48)" fg:x="36170" fg:w="7"/><text x="99.3812%" y="479.50"></text></g><g><title>dkn-compute`tracing::span::Span::log (15 samples, 0.04%)</title><rect x="99.1504%" y="469" width="0.0411%" height="15" fill="rgb(245,15,52)" fg:x="36177" fg:w="15"/><text x="99.4004%" y="479.50"></text></g><g><title>dkn-compute`&lt;tracing::instrument::Instrumented&lt;T&gt; as core::future::future::Future&gt;::poll (21,909 samples, 60.05%)</title><rect x="39.2030%" y="485" width="60.0460%" height="15" fill="rgb(220,133,28)" fg:x="14304" fg:w="21909"/><text x="39.4530%" y="495.50">dkn-compute`&lt;tracing::instrument::Instrumented&lt;T&gt; as core::future::future::Future&gt;::poll</text></g><g><title>libsystem_platform.dylib`_platform_memmove (21 samples, 0.06%)</title><rect x="99.1915%" y="469" width="0.0576%" height="15" fill="rgb(217,180,4)" fg:x="36192" fg:w="21"/><text x="99.4415%" y="479.50"></text></g><g><title>dkn-compute`tokio::runtime::task::core::TaskIdGuard::enter (14 samples, 0.04%)</title><rect x="99.2545%" y="485" width="0.0384%" height="15" fill="rgb(251,24,1)" fg:x="36215" fg:w="14"/><text x="99.5045%" y="495.50"></text></g><g><title>dkn-compute`tracing::span::Span::log (7 samples, 0.02%)</title><rect x="99.2929%" y="485" width="0.0192%" height="15" fill="rgb(212,185,49)" fg:x="36229" fg:w="7"/><text x="99.5429%" y="495.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (24 samples, 0.07%)</title><rect x="99.3121%" y="485" width="0.0658%" height="15" fill="rgb(215,175,22)" fg:x="36236" fg:w="24"/><text x="99.5621%" y="495.50"></text></g><g><title>dkn-compute`tokio::runtime::task::core::Core&lt;T,S&gt;::poll (22,041 samples, 60.41%)</title><rect x="39.1235%" y="501" width="60.4078%" height="15" fill="rgb(250,205,14)" fg:x="14275" fg:w="22041"/><text x="39.3735%" y="511.50">dkn-compute`tokio::runtime::task::core::Core&lt;T,S&gt;::poll</text></g><g><title>libsystem_platform.dylib`_platform_memmove (56 samples, 0.15%)</title><rect x="99.3779%" y="485" width="0.1535%" height="15" fill="rgb(225,211,22)" fg:x="36260" fg:w="56"/><text x="99.6279%" y="495.50"></text></g><g><title>dkn-compute`tokio::runtime::task::core::TaskIdGuard::enter (7 samples, 0.02%)</title><rect x="99.5313%" y="501" width="0.0192%" height="15" fill="rgb(251,179,42)" fg:x="36316" fg:w="7"/><text x="99.7813%" y="511.50"></text></g><g><title>dkn-compute`tokio::runtime::task::state::State::transition_to_idle (18 samples, 0.05%)</title><rect x="99.5560%" y="501" width="0.0493%" height="15" fill="rgb(208,216,51)" fg:x="36325" fg:w="18"/><text x="99.8060%" y="511.50"></text></g><g><title>dkn-compute`tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (22,593 samples, 61.92%)</title><rect x="37.7367%" y="517" width="61.9207%" height="15" fill="rgb(235,36,11)" fg:x="13769" fg:w="22593"/><text x="37.9867%" y="527.50">dkn-compute`tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll</text></g><g><title>dkn-compute`tokio::runtime::task::state::State::transition_to_running (19 samples, 0.05%)</title><rect x="99.6053%" y="501" width="0.0521%" height="15" fill="rgb(213,189,28)" fg:x="36343" fg:w="19"/><text x="99.8553%" y="511.50"></text></g><g><title>dkn-compute`tokio::runtime::task::state::State::ref_dec (4 samples, 0.01%)</title><rect x="99.6574%" y="517" width="0.0110%" height="15" fill="rgb(227,203,42)" fg:x="36362" fg:w="4"/><text x="99.9074%" y="527.50"></text></g><g><title>libsystem_pthread.dylib`pthread_cond_signal (4 samples, 0.01%)</title><rect x="99.6793%" y="517" width="0.0110%" height="15" fill="rgb(244,72,36)" fg:x="36370" fg:w="4"/><text x="99.9293%" y="527.50"></text></g><g><title>dkn-compute`tokio::runtime::scheduler::multi_thread::worker::Context::run_task (23,179 samples, 63.53%)</title><rect x="36.1690%" y="533" width="63.5267%" height="15" fill="rgb(213,53,17)" fg:x="13197" fg:w="23179"/><text x="36.4190%" y="543.50">dkn-compute`tokio::runtime::scheduler::multi_thread::worker::Context::run_task</text></g><g><title>dkn-compute`tokio::runtime::scheduler::multi_thread::worker::_&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::notify_if_work_pending (30 samples, 0.08%)</title><rect x="99.6958%" y="533" width="0.0822%" height="15" fill="rgb(207,167,3)" fg:x="36376" fg:w="30"/><text x="99.9458%" y="543.50"></text></g><g><title>dkn-compute`tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (6 samples, 0.02%)</title><rect x="99.7807%" y="533" width="0.0164%" height="15" fill="rgb(216,98,30)" fg:x="36407" fg:w="6"/><text x="100.0307%" y="543.50"></text></g><g><title>dkn-compute`tokio::runtime::task::raw::poll (6 samples, 0.02%)</title><rect x="99.7972%" y="533" width="0.0164%" height="15" fill="rgb(236,123,15)" fg:x="36413" fg:w="6"/><text x="100.0472%" y="543.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (16 samples, 0.04%)</title><rect x="99.8136%" y="533" width="0.0439%" height="15" fill="rgb(248,81,50)" fg:x="36419" fg:w="16"/><text x="100.0636%" y="543.50"></text></g><g><title>dkn-compute`tokio::runtime::scheduler::multi_thread::worker::Context::run (27,505 samples, 75.38%)</title><rect x="24.5704%" y="549" width="75.3830%" height="15" fill="rgb(214,120,4)" fg:x="8965" fg:w="27505"/><text x="24.8204%" y="559.50">dkn-compute`tokio::runtime::scheduler::multi_thread::worker::Context::run</text></g><g><title>libsystem_m.dylib`pow (32 samples, 0.09%)</title><rect x="99.8657%" y="533" width="0.0877%" height="15" fill="rgb(208,179,34)" fg:x="36438" fg:w="32"/><text x="100.1157%" y="543.50"></text></g><g><title>all (36,487 samples, 100%)</title><rect x="0.0000%" y="741" width="100.0000%" height="15" fill="rgb(227,140,7)" fg:x="0" fg:w="36487"/><text x="0.2500%" y="751.50"></text></g><g><title>libsystem_pthread.dylib`thread_start (27,628 samples, 75.72%)</title><rect x="24.2799%" y="725" width="75.7201%" height="15" fill="rgb(214,22,6)" fg:x="8859" fg:w="27628"/><text x="24.5299%" y="735.50">libsystem_pthread.dylib`thread_start</text></g><g><title>libsystem_pthread.dylib`_pthread_start (27,628 samples, 75.72%)</title><rect x="24.2799%" y="709" width="75.7201%" height="15" fill="rgb(207,137,27)" fg:x="8859" fg:w="27628"/><text x="24.5299%" y="719.50">libsystem_pthread.dylib`_pthread_start</text></g><g><title>dkn-compute`std::sys::pal::unix::thread::Thread::new::thread_start (27,628 samples, 75.72%)</title><rect x="24.2799%" y="693" width="75.7201%" height="15" fill="rgb(210,8,46)" fg:x="8859" fg:w="27628"/><text x="24.5299%" y="703.50">dkn-compute`std::sys::pal::unix::thread::Thread::new::thread_start</text></g><g><title>dkn-compute`core::ops::function::FnOnce::call_once{{vtable.shim}} (27,628 samples, 75.72%)</title><rect x="24.2799%" y="677" width="75.7201%" height="15" fill="rgb(240,16,54)" fg:x="8859" fg:w="27628"/><text x="24.5299%" y="687.50">dkn-compute`core::ops::function::FnOnce::call_once{{vtable.shim}}</text></g><g><title>dkn-compute`std::sys_common::backtrace::__rust_begin_short_backtrace (27,628 samples, 75.72%)</title><rect x="24.2799%" y="661" width="75.7201%" height="15" fill="rgb(211,209,29)" fg:x="8859" fg:w="27628"/><text x="24.5299%" y="671.50">dkn-compute`std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>dkn-compute`tokio::runtime::blocking::pool::Inner::run (27,545 samples, 75.49%)</title><rect x="24.5074%" y="645" width="75.4926%" height="15" fill="rgb(226,228,24)" fg:x="8942" fg:w="27545"/><text x="24.7574%" y="655.50">dkn-compute`tokio::runtime::blocking::pool::Inner::run</text></g><g><title>dkn-compute`tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (27,545 samples, 75.49%)</title><rect x="24.5074%" y="629" width="75.4926%" height="15" fill="rgb(222,84,9)" fg:x="8942" fg:w="27545"/><text x="24.7574%" y="639.50">dkn-compute`tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll</text></g><g><title>dkn-compute`tokio::runtime::task::core::Core&lt;T,S&gt;::poll (27,545 samples, 75.49%)</title><rect x="24.5074%" y="613" width="75.4926%" height="15" fill="rgb(234,203,30)" fg:x="8942" fg:w="27545"/><text x="24.7574%" y="623.50">dkn-compute`tokio::runtime::task::core::Core&lt;T,S&gt;::poll</text></g><g><title>dkn-compute`tokio::runtime::scheduler::multi_thread::worker::run (27,544 samples, 75.49%)</title><rect x="24.5101%" y="597" width="75.4899%" height="15" fill="rgb(238,109,14)" fg:x="8943" fg:w="27544"/><text x="24.7601%" y="607.50">dkn-compute`tokio::runtime::scheduler::multi_thread::worker::run</text></g><g><title>dkn-compute`tokio::runtime::context::runtime::enter_runtime (27,544 samples, 75.49%)</title><rect x="24.5101%" y="581" width="75.4899%" height="15" fill="rgb(233,206,34)" fg:x="8943" fg:w="27544"/><text x="24.7601%" y="591.50">dkn-compute`tokio::runtime::context::runtime::enter_runtime</text></g><g><title>dkn-compute`tokio::runtime::context::set_scheduler (27,544 samples, 75.49%)</title><rect x="24.5101%" y="565" width="75.4899%" height="15" fill="rgb(220,167,47)" fg:x="8943" fg:w="27544"/><text x="24.7601%" y="575.50">dkn-compute`tokio::runtime::context::set_scheduler</text></g><g><title>libsystem_m.dylib`pow (13 samples, 0.04%)</title><rect x="99.9644%" y="549" width="0.0356%" height="15" fill="rgb(238,105,10)" fg:x="36474" fg:w="13"/><text x="100.2144%" y="559.50"></text></g></svg></svg>